{"version":3,"sources":["shared/hashmap.ts","shared/model/hive.ts","client/canvas/Stone.jsx","client/canvas/GLTFModel.jsx","client/components/CreateGameButton.tsx","client/controllers/interactiveController.ts","client/game/LocalGame.tsx","client/utils/utils.tsx","client/game/useHiveGame.tsx","client/components/GameOverModal.tsx","client/game/GenericGame.tsx","shared/hexlib.ts","shared/model/insects.ts","client/lab/useCanvas.tsx","client/lab/Canvas.tsx","client/lab/BackgroundCanvas.tsx","client/components/GameList.tsx","client/pages/WelcomePage.tsx","client/components/WelcomeInsect.tsx","client/pages/AboutPage.tsx","client/lab/TestHive.js","client/lab/TestGame.tsx","client/pages/DebugPage.tsx","client/pages/TutorialPage.tsx","client/pages/Layout.tsx","client/App.tsx","index.js","shared/model/teams.ts","shared/model/stone.ts","shared/model/action.ts","shared/model/state.ts","client/components/DropInsectMenu.tsx","client/canvas/HighlightStone.jsx","client/canvas/Hive.tsx"],"names":["HashMap","map","Map","key","this","get","JSON","stringify","value","set","delete","has","length","push","arr","res","pop","Array","from","keys","k","parse","HashSet","Set","add","values","val","Hive","root","hex","ar","stone","whiteLost","blackLost","insect","Insect","BEE","neighbors","team","Team","WHITE","HEX","filter","n","ignore","result","a","b","c","start","target","visited","distance","queue","vertex","shift","generateSingleWalks","d","generateWalks","offset","i","hh","height","concat","ha","hb","hc","every","at","candidates","e","forEach","_checkNeighborTeam","lowLink","index","articulation_points","undefined","dfs","node","parent","counter","children","Math","min","call","SPIDER","generateSpiderWalks","ANT","GRASSHOPPER","generateJumps","BEETLE","generateClimbs","console","log","_oneHive","generateMovesFrom","dest","Stone","layout","handleClick","teamColor","mesh","useRef","useState","hovered","setHover","x","y","orientation","spring","useSpring","color","rotation","PI","fallback","position","onClick","ref","onPointerOver","event","onPointerOut","args","meshStandardMaterial","GLTFModel","props","scene","useLoader","GLTFLoader","clone","primitive","object","CreateGameModal","open","setOpen","gameMode","setGameMode","setTeam","dimmer","Header","Content","as","Field","Group","Or","inverted","Actions","negative","positive","Link","to","location","gid","uuid","random","fetch","method","catch","err","pathname","search","CreateGameButton","content","createGameModalOpen","setCreateGameModalOpen","icon","labelPosition","name","useInteractiveController","submitAction","state","actionType","setActionType","selected","setSelected","highlighted","getDestinations","handleBoardClick","newAction","constructor","allowedToMove","Move","handleDropClick","allowedToDrop","Drop","LocalGame","p1","p2","useHiveGame","apply","player","turnNumber","action","isLegal","controller","getColor","getResult","history","setHistory","State","setState","setIndex","undo","reset","GameOverModal","resultText","Modal","Segment","Button","GenericGame","gameOver","DropInsectMenu","stones","_stones","bind","hive","Point","Hex","q","r","s","round","Error","hex_compare","hex_add","hex_subtract","hex_scale","hex_directions","hex_neighbors","delta","hex_neighbor","hex_circle_iterator","hex_diagonals","hex_distance","abs","hex_round","h","qi","ri","si","q_diff","r_diff","s_diff","hex_lerp","t","OffsetCoord","col","row","ODD","qoffset_from_cube","qoffset_to_cube","roffset_from_cube","roffset_to_cube","DoubledCoord","qdoubled_from_cube","qdoubled_to_cube","rdoubled_from_cube","rdoubled_to_cube","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","Layout","size","origin","orientation_pointy","sqrt","orientation_flat","hex_to_pixel","M","pixel_to_hex","p","pt","hex_corner_offset","corner","angle","cos","sin","polygon_corners","corners","center","layoutFlat","complain","equal_hex","equal_offsetcoord","equal_doubledcoord","equal_int","test_hex_direction","test_hex_diagonal","test_hex_rotate_right","test_hex_rotate_left","test_hex_linedraw","equal_hex_array","N","a_nudge","b_nudge","results","step","max","hex_linedraw","test_hex_round","flat","pointy","test_layout","test_offset_roundtrip","test_doubled_roundtrip","useCanvas","draw","options","fps","canvasRef","useEffect","animationFrameId","canvas","current","context","getContext","frameCount","render","resizeCanvasToDisplaySize","resizeCanvas","setTimeout","window","requestAnimationFrame","cancelAnimationFrame","getBoundingClientRect","width","devicePixelRatio","ratio","scale","Canvas","style","display","top","left","zIndex","BackgroundCanvas","ctx","clearRect","fillStyle","actions","floor","beginPath","moveTo","lineTo","fill","GameList","games","setGames","then","resp","json","data","WelcomePage","WelcomeInsect","right","camera","near","far","AboutPage","href","Icon","src","title","border","Wrapped","setCounter","iterationSteps","setIterationSteps","onChange","Test","InteractiveRandom","DebugPage","TestGame","TutorialPage","Introduction","Dropping","GoalOfGame","ExplainBee","ExplainAnt","ExplainSpider","ExplainGrasshopper","ExplainBeetle","className","TutorialLayout","BLACK","canvasHeight","interactive","cameraOpts","active","generateDrops","HiveModel","addStone","iconMap","lookAt","singleStone","setActive","Container","Menu","compact","stackable","pointing","secondary","Item","header","alt","GameManager","lazy","App","exact","path","component","ReactDOM","StrictMode","document","getElementById","destination","compareAction","Pass","_beeMove","_actions","_surrender","startingInsects","some","gameResult","opts","dropStonesForTeam","uniqueInsects","dropStones","moveAllowed","dropHex","dropInsect","generateMoves","_getActions","otherAction","removeStone","splice","policy","randomPolicy","beetle","bee","spider","grasshopper","ant","DropInsectMenuTeam","teamThis","counts","hasOwnProperty","Object","count","isActive","disabled","basic","textAlign","HighlightStone","opacity","transparent","highlights","onCreated","TrackballControls"],"mappings":"wMAAMA,E,iDACFC,IAAM,IAAIC,I,uCACV,SAAIC,GACA,OAAOC,KAAKH,IAAII,IAAIC,KAAKC,UAAUJ,M,iBAEvC,SAAIA,EAAKK,GACL,OAAOJ,KAAKH,IAAIQ,IAAIH,KAAKC,UAAUJ,GAAMK,K,oBAE7C,SAAOL,GACH,OAAOC,KAAKH,IAAIS,OAAOJ,KAAKC,UAAUJ,M,iBAE1C,SAAIA,GACF,OAAOC,KAAKH,IAAIU,IAAIL,KAAKC,UAAUJ,M,wBAErC,SAAWA,GACP,OAAIC,KAAKH,IAAIU,IAAIR,GACNC,KAAKC,IAAIF,GAAKS,OAEd,I,sBAGf,SAAST,EAAKK,GACV,OAAIJ,KAAKH,IAAIU,IAAIR,GACNC,KAAKH,IAAII,IAAIF,GAAKU,KAAKL,GAEvBJ,KAAKH,IAAIQ,IAAIN,EAAK,CAACK,M,qBAGlC,SAAQL,GACJ,IAAIW,EAAMV,KAAKH,IAAII,IAAIF,GACjBY,EAAMD,EAAIE,MAIhB,OAHmB,IAAfF,EAAIF,QACJR,KAAKH,IAAIS,OAAOP,GAEbY,I,kBAEX,WACI,OAAOE,MAAMC,KAAKd,KAAKH,IAAIkB,QAAQlB,KAAI,SAAAmB,GAAC,OAAId,KAAKe,MAAMD,U,KAGzDE,E,iDACFb,IAAmB,IAAIc,I,uCACvB,SAAIf,GACA,OAAOJ,KAAKK,IAAIe,IAAIlB,KAAKC,UAAUC,M,iBAEvC,SAAIA,GACF,OAAOJ,KAAKK,IAAIE,IAAIL,KAAKC,UAAUC,M,oBAErC,WACE,OAAOS,MAAMC,KAAKd,KAAKK,IAAIgB,UAAUxB,KAAI,SAAAyB,GAAG,OAAIpB,KAAKe,MAAMK,U,KC1CpDC,EAAb,WAGI,aAAe,yBAFf1B,SAEc,OADd2B,UACc,EACVxB,KAAKH,IAAM,IAAID,EAJvB,sCAMI,SAAG6B,GACC,IAAMC,EAAK1B,KAAKH,IAAII,IAAIwB,GACxB,OAAOC,EAAGA,EAAGlB,OAAS,KAR9B,yBAWI,SAAYiB,GACRzB,KAAKH,IAAII,IAAIwB,GAAKb,MACbZ,KAAKH,IAAII,IAAIwB,GAAKjB,QACnBR,KAAKH,IAAIS,OAAOmB,KAd5B,sBAkBI,SAASA,EAAcE,GACnB3B,KAAKwB,KAAOC,EACPzB,KAAKH,IAAIU,IAAIkB,GACbzB,KAAKH,IAAII,IAAIwB,GAAKhB,KAAKkB,GADJ3B,KAAKH,IAAIQ,IAAIoB,EAAK,CAACE,MApBnD,wBAwBI,WACI,IADyB,EACrBC,GAAY,EACZC,GAAY,EAFS,cAGP7B,KAAKH,IAAIkB,QAHF,IAGzB,2BAAmC,CAAC,IAAzBU,EAAwB,QACzBE,EAAQ3B,KAAKH,IAAII,IAAIwB,GAAK,GAC5BE,EAAMG,SAAWC,IAAOC,KACW,IAA/BhC,KAAKiC,UAAUR,GAAKjB,SAChBmB,EAAMO,OAASC,IAAKC,MAAOR,GAAY,EACtCC,GAAY,IARJ,8BAYzB,MAAO,CAACD,EAAWC,KApC3B,uBAuCI,SAAUJ,GAA+B,IAAD,OACpC,OAAOY,IAAkBZ,GAAKa,QAAO,SAAAC,GAAC,OAAI,EAAK1C,IAAIU,IAAIgC,QAxC/D,oBA0CI,SAAOd,GACH,OAAIzB,KAAKH,IAAIU,IAAIkB,GAAazB,KAAKH,IAAII,IAAIwB,GAAKjB,OACzC,IA5Cf,iCA8CI,SAAoBiB,GAA4C,IAAD,EAA7Be,EAA6B,uDAAtB,KACjCC,EAAS,GAD8C,cAEnCJ,IAAwBZ,IAFW,IAE3D,2BAAsD,CAAC,IAAD,yBAA1CiB,EAA0C,KAAvCC,EAAuC,KAApCC,EAAoC,KAC9C5C,KAAKH,IAAIU,IAAIoC,KACF,OAAXH,EACIxC,KAAKH,IAAIU,IAAImC,KAAO1C,KAAKH,IAAIU,IAAIqC,IAAIH,EAAOhC,KAAKkC,IAGhD3C,KAAKH,IAAIU,IAAImC,KAAOL,IAAgBK,EAAGF,OAAcxC,KAAKH,IAAIU,IAAIqC,KAAOP,IAAgBO,EAAGJ,KAAiBC,EAAOhC,KAAKkC,KAR3E,8BAY3D,OAAOF,IA1Df,2BA4DI,SAAcI,GAA4C,IAA5BC,EAA2B,wDAAnB,EAC9BC,EAAU,IAAI7B,EACd8B,EAAW,IAAIpD,EACfqD,EAAQ,GACRR,EAAS,GAGb,IAFAQ,EAAMxC,KAAKoC,GACXG,EAAS3C,IAAIwC,EAAO,GACbI,EAAMzC,QAAQ,CACjB,IAAM0C,EAASD,EAAME,QACrBJ,EAAQ3B,IAAI8B,GAFK,oBAGDlD,KAAKoD,oBAAoBF,EAAQL,IAHhC,IAGjB,2BAAyD,CAAC,IAA/CN,EAA8C,QACjDQ,EAAQxC,IAAIgC,KAChBS,EAAS3C,IAAIkC,EAAGS,EAAS/C,IAAIiD,GAAU,GACvCD,EAAMxC,KAAK8B,KANE,8BAQjB,IAAgB,IAAZO,GAAkBT,IAAgBa,EAAQL,GAEvC,CACH,IAAIQ,EAAIL,EAAS/C,IAAIiD,GACrB,GAAIG,EAAIP,EAAQ,SACZO,IAAMP,GAAQL,EAAOhC,KAAKyC,QAJhCT,EAAOhC,KAAKyC,GAQlB,OAAOT,IApFf,iCAsFI,SAAoBhB,GAChB,OAAOzB,KAAKsD,cAAc7B,EAAK,KAvFvC,2BAyFI,SAAcA,GACV,IADwC,EACpCgB,EAAS,GAD2B,cAEnBJ,KAFmB,IAExC,2BAAyC,CAAC,IAA/BkB,EAA8B,QACrC,GAAIvD,KAAKH,IAAIU,IAAI8B,IAAYZ,EAAK8B,IAAU,CAExC,IADA,IAAIC,EAAI,EACDxD,KAAKH,IAAIU,IAAI8B,IAAYZ,EAAKY,IAAckB,EAAOC,MAAMA,IAChEf,EAAOhC,KAAK4B,IAAYZ,EAAKY,IAAckB,EAAOC,OANlB,8BASxC,OAAOf,IAlGf,4BAoGI,SAAehB,GACX,IAAIgB,EAAS,GACTgB,EAAKzD,KAAK0D,OAAOjC,GACrB,GAAIgC,EAAK,EAAG,CAAC,IAAD,gBACgBpB,IAAwBZ,IADxC,IACR,2BAAqD,CAAC,IAAD,yBAAzCiB,EAAyC,KAAtCC,EAAsC,KAAnCC,EAAmC,KAC7C5C,KAAK0D,OAAOf,GAAKc,IACZzD,KAAK0D,OAAOhB,GAAKe,GAAQzD,KAAK0D,OAAOd,GAAKa,IAAKhB,EAAOhC,KAAKkC,IAHhE,oCAMLF,EAAOkB,OAAO3D,KAAKoD,oBAAoB3B,IATL,oBAUjBY,IAAwBZ,IAVP,IAUzC,2BAAsD,CAAC,IAAD,yBAA1CiB,EAA0C,KAAvCC,EAAuC,KAApCC,EAAoC,KAC9CgB,EAAK5D,KAAK0D,OAAOhB,GACjBmB,EAAK7D,KAAK0D,OAAOf,GACjBmB,EAAK9D,KAAK0D,OAAOd,GAChBiB,GAAMJ,KAASG,EAAKH,GAAMK,EAAKL,IAAKhB,EAAOhC,KAAKkC,IAdhB,8BAgBzC,OAAOF,IApHf,gCAuHI,SAAmBhB,EAAcS,GAAsB,IAAD,OAClD,OAAOlC,KAAKiC,UAAUR,GAAKsC,OAAM,SAAAxB,GAAC,OAAI,EAAKyB,GAAGzB,GAAGL,OAASA,OAxHlE,2BA0HI,SAAcA,GAA6B,IAAD,SAClC+B,EAAa,IAAI/C,EADiB,cAEpBlB,KAAKH,IAAIkB,QAFW,IAEtC,2BAAmC,CAAC,IAAzBU,EAAwB,QAC/BY,IAAkBZ,GACfa,QAAO,SAAA4B,GAAC,OAAK,EAAKrE,IAAIU,IAAI2D,MAC1BC,SAAQ,SAAAD,GAAC,OAAID,EAAW7C,IAAI8C,OALG,8BAQtC,OAD0BD,EAAW5C,SACvBiB,QAAO,SAAA4B,GAAC,OAAI,EAAKE,mBAAmBF,EAAGhC,QAlI7D,sBAqII,WAAqB,IAAD,OACZmC,EAAU,IAAIzE,EACdmD,EAAU,IAAI7B,EACdoD,EAAQ,IAAI1E,EACZ2E,EAAsB,IAAIrD,EAqB9B,YADkBsD,IAAdxE,KAAKwB,MAnBG,SAANiD,EAAOC,EAAeC,EAAiBC,GACzC7B,EAAQ3B,IAAIsD,GACZE,IACAN,EAAMjE,IAAIqE,EAAME,GAChBP,EAAQhE,IAAIqE,EAAME,GAClB,IAL6D,EAKzDC,EAAW,EAL8C,cAM7C,EAAK5C,UAAUyC,IAN8B,IAM7D,2BAAsC,CAAC,IAA5BnC,EAA2B,QAC9BoC,GAAUtC,IAAgBE,EAAGoC,KAC7B5B,EAAQxC,IAAIgC,GAAI8B,EAAQhE,IAAIqE,EAAMI,KAAKC,IAAIV,EAAQpE,IAAIyE,GAAOJ,EAAMrE,IAAIsC,MAExEkC,EAAIlC,EAAGmC,EAAME,GACbP,EAAQhE,IAAIqE,EAAMI,KAAKC,IAAIV,EAAQpE,IAAIyE,GAAOL,EAAQpE,IAAIsC,KACtD8B,EAAQpE,IAAIsC,IAAM+B,EAAMrE,IAAIyE,IAAoB,OAAXC,GAAiBJ,EAAoBnD,IAAIsD,GAClFG,OAbqD,8BAgB9C,OAAXF,GAAmBE,GAAY,GAAGN,EAAoBnD,IAAIsD,IAGjCM,KAAKhF,KAAMA,KAAKwB,KAAM,KAAM,GACtD+C,IA9Jf,+BAiKI,SAAkB9C,GAGd,OAAIzB,KAAKH,IAAIU,IAAIkB,GACG,IAAI3B,IAAI,CACpB,CAACiC,IAAOC,IAAKhC,KAAKoD,qBAClB,CAACrB,IAAOkD,OAAQjF,KAAKkF,qBACrB,CAACnD,IAAOoD,IAAKnF,KAAKsD,eAClB,CAACvB,IAAOqD,YAAapF,KAAKqF,eAC1B,CAACtD,IAAOuD,OAAQtF,KAAKuF,kBAEVtF,IAAID,KAAKgE,GAAGvC,GAAKK,QAAQkD,KAAKhF,KAAMyB,IAEnD+D,QAAQC,IAAR,8CAAmDhE,IAC5C,MA/KnB,2BAmLI,SAAcS,GAAoC,IAAD,SACzCO,EAAS,GACP8B,EAAsBvE,KAAK0F,WAFY,cAG3B1F,KAAKH,IAAIkB,QAHkB,yBAGlCU,EAHkC,QAIrC,EAAKuC,GAAGvC,GAAKS,OAASA,IAClB,EAAKwB,OAAOjC,GAAO,IAAM8C,EAAoBhE,IAAIkB,KACjD,EAAKkE,kBAAkBlE,GAAK0C,SAAQ,SAACyB,GACjCnD,EAAOhC,KAAK,CAACgB,EAAKmE,QAJlC,2BAAoC,IAHS,8BAY7C,OAAOnD,MA/Lf,M,8HCAe,SAASoD,EAAT,GAAmF,IAAnElE,EAAkE,EAAlEA,MAAkE,IAA3DmE,cAA2D,MAApDzD,IAAoD,EAApCZ,EAAoC,EAApCA,IAAoC,IAA/BsE,mBAA+B,MAAnB,aAAmB,MAAXrC,cAAW,MAAJ,EAAI,EACvFsC,EAAYrE,EAAMO,OAASC,IAAKC,MAAQ,MAAQ,OAChD6D,EAAOC,iBAAO,MACpB,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiBhE,IAAiByD,EAAQrE,GAAlC6E,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACLC,EAAcV,EAAOU,YAErBC,EAASC,oBAAU,CACrBC,MAAOP,EAAU,OAASJ,EAC1BY,SAAUR,EAAU,CAAC,EAAGtB,KAAK+B,GAAI,GAAK,CAAC,EAAG,EAAG,KAGjD,OACI,cAAC,WAAD,CAAUC,SAAU,KAApB,SACI,wBACIC,SAAU,CAACT,EAAGC,EAAG7C,GACjBkD,SAAU,CAAC9B,KAAK+B,GAAK,EAAGL,IAAgBnE,IAAuByC,KAAK+B,GAAK,EAAI,EAAG,GAChFG,QAAS,WAAOjB,EAAYtE,IAHhC,UAKI,eAAC,WAASwE,KAAV,CACIc,SAAU,CAAC,GAAI,GAAI,GACnBE,IAAKhB,EACLiB,cAAe,SAACC,GAAD,OAAWd,GAAS,IACnCe,aAAc,SAACD,GAAD,OAAWd,GAAS,IAJtC,UAMI,wCAAwBgB,KAAM,CAAC,EAAG,EAAG,IAAM,KACvC,cAAC,WAASC,qBAAV,CAA+BX,MAAOF,EAAOE,WAErD,cAAC,IAAD,CAAW7E,OAAQH,EAAMG,OAAQ8E,SAAUH,EAAOG,kB,4IC3B3D,SAASW,EAAT,GAAwC,IAApBzF,EAAmB,EAAnBA,OAAW0F,EAAQ,iBAEpCC,EADOC,YAAUC,IAAD,mBAAwB7F,EAAxB,YAAkCA,IAAWC,IAAOC,IAAM,YAAcF,EAAxE,UACH2F,MAAMG,QACzB,OAAO,cAAC,WAASC,UAAV,aAAoBC,OAAQL,GAAWD,M,2KCNlD,SAASO,EAAT,GAA6C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC7B,EAAgC9B,mBAAS,SAAzC,mBAAO+B,EAAP,KAAiBC,EAAjB,KACA,EAAwBhC,mBAAS,OAAjC,mBAAOjE,EAAP,KAAakG,EAAb,KAgBA,OACI,eAAC,IAAD,CACIC,OAAO,WACPL,KAAMA,EAFV,UAII,cAAC,IAAMM,OAAP,wCACA,cAAC,IAAMC,QAAP,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQC,GAAG,KAAX,0BAGA,cAAC,IAAKC,MAAN,UACI,eAAC,IAAOC,MAAR,WACI,cAAC,IAAD,CAAQ1B,QAAS,kBAAMmB,EAAY,UAAnC,uBACA,cAAC,IAAOQ,GAAR,IACA,cAAC,IAAD,CAAQ3B,QAAS,kBAAMmB,EAAY,OAAnC,iBACA,cAAC,IAAOQ,GAAR,IACA,cAAC,IAAD,CAAQ3B,QAAS,kBAAMmB,EAAY,WAAnC,0BAGR,cAAC,IAAD,CAAQK,GAAG,KAAX,sBAGA,cAAC,IAAKC,MAAN,UACI,eAAC,IAAOC,MAAR,WACI,cAAC,IAAD,CAAQ1B,QAAS,kBAAMoB,EAAQ,UAAUzB,MAAM,MAA/C,kBACA,cAAC,IAAOgC,GAAR,IACA,cAAC,IAAD,CAAQ3B,QAAS,kBAAMoB,EAAQ,WAAWzB,MAAM,SAAhD,qBACA,cAAC,IAAOgC,GAAR,CAAWC,UAAQ,IACnB,cAAC,IAAD,CAAQ5B,QAAS,kBAAMoB,EAAQ,UAAUzB,MAAM,OAA/C,+BAMpB,eAAC,IAAMkC,QAAP,WACI,cAAC,IAAD,CAAQC,UAAQ,EAAC9B,QAAS,kBAAMiB,GAAQ,IAAxC,oBAGA,cAAC,IAAD,CAAQc,UAAQ,EAAC/B,QAAS,WACtBiB,GAAQ,IACTO,GAAIQ,IACPC,GA1DO,SAACC,GAChB,IAAMC,EAAMC,MASZ,MARa,WAATlH,GACAkG,EAAQtD,KAAKuE,SAAW,GAAM,QAAU,SAE3B,WAAbnB,GACAoB,MAAM,SAAD,OAAUH,GAAO,CAClBI,OAAQ,SACTC,OAAO,SAAAC,GAAG,OAAIjE,QAAQC,IAAI,wBAAyBgE,MAEnD,CACHC,SAAS,SAAD,OAAWP,GACnBQ,OAAO,SAAD,OAAWzH,EAAX,iBAAwBgG,KA2C1B,0BAWD,SAAS0B,EAAT,GAAwC,IAAZC,EAAW,EAAXA,QACvC,EAAsD1D,oBAAS,GAA/D,mBAAO2D,EAAP,KAA4BC,EAA5B,KACA,OACI,qCACI,eAAC,IAAD,CAAQnB,UAAQ,EAACoB,MAAI,EAACC,cAAc,OAAOjD,QAAS,kBAAM+C,GAAuB,IAAjF,UACI,cAAC,IAAD,CAAMG,KAAK,wBACTL,KAEN,cAAC9B,EAAD,CAAiBC,KAAM8B,EAAqB7B,QAAS8B,S,sGC7E1D,SAASI,EAAyBC,EAAcC,GACnD,MAAoClE,mBAAS,MAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KACA,EAAgCpE,mBAAS,MAAzC,mBAAOqE,EAAP,KAAiBC,EAAjB,KA0BA,MAAO,CACHC,YAFgBF,EAAWH,EAAMM,gBAAgBL,EAAYE,GAAY,GAGzEI,iBA3BqB,SAACnJ,GACtB,GAAI+I,EAAU,CACV,IAAMK,EAAY,IAAIP,EAAWQ,YAAYN,EAAU/I,GACnD2I,EAAaS,IACbJ,EAAY,MACZF,EAAc,OAEdE,EAAY,WAGZJ,EAAMU,cAActJ,KACpB8I,EAAc,IAAIS,KAClBP,EAAYhJ,KAgBpBwJ,gBAZqB,SAACnJ,GAClBuI,EAAMa,cAAcpJ,IACpByI,EAAc,IAAIY,KAClBV,EAAY,IAAI5E,IAAM/D,EAAQuI,EAAMnI,QAEpCuI,EAAY,U,iCC7BxB,+DAGe,SAASW,EAAT,GAAgC,IAAXC,EAAU,EAAVA,GAAIC,EAAM,EAANA,GACpC,EAAuBC,cAAhBlB,EAAP,EAAOA,MAAOmB,EAAd,EAAcA,MAURC,GAAWpB,EAAMqB,WAAa,IAAM,EAAKL,EAAKC,IAR/B,SAACK,GACd,QAAItB,EAAMuB,QAAQD,KACdH,EAAMG,IACC,KAKmDtB,GACtE,OAAO,cAAC,IAAD,CACHA,MAAOA,EACPwB,WAAYJ,M,iCChBb,SAASK,EAAS5J,GAErB,MAAa,UAATA,EAAyB,OACX,UAATA,EAAyB,MACtB,OAET,SAAS6J,EAAUtJ,GACtB,IAAMb,EAAYa,EAAO,GACnBZ,EAAYY,EAAO,GACzB,OAAIb,GAAaC,EACN,MACAD,EACAkK,EAAS,SAAW,OACpBjK,EACAiK,EAAS,SAAW,OAEpB,YAhBf,qE,8FCIe,SAASP,IACpB,MAA8BpF,mBAAS,IAAvC,mBAAO6F,EAAP,KAAgBC,EAAhB,KACA,EAA0B9F,mBAAS,IAAI+F,KAAvC,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAA0BhG,mBAAS,GAAnC,mBAAO7B,EAAP,KAAc8H,EAAd,KAkBA,MAAO,CAACZ,MAhBM,SAACG,GACXK,EAAQ1H,GAASqH,EACjBM,EAAWD,GACXG,EAAS9B,EAAMmB,MAAMG,IACrBS,EAAS9H,EAAQ,IAYN+H,KAVF,WACT,IAAMV,EAASK,EAAQ1H,GACvB6H,EAAS9B,EAAMgC,KAAKV,IACpBS,EAAS9H,EAAQ,IAOA+F,QAAOiC,MALd,WACVL,EAAW,IACXE,EAAS,IAAID,KACbE,EAAS,O,2JCnBF,SAASG,EAAT,GAA0C,IAAjBvE,EAAgB,EAAhBA,KAAMvF,EAAU,EAAVA,OACpC+J,EAAaT,YAAUtJ,GAC7B,OACI,cAACgK,EAAA,EAAD,CACIpE,OAAO,WACPL,KAAMA,EAFV,SAGI,eAAC0E,EAAA,EAAD,CAAS9D,UAAQ,EAAjB,UACI,cAAC6D,EAAA,EAAMnE,OAAP,UACI,eAACA,EAAA,EAAD,CAAQM,UAAQ,EAACJ,GAAG,KAApB,wBAAqCgE,EAArC,SAEJ,uBACA,eAACC,EAAA,EAAM5D,QAAP,WACI,cAACe,EAAA,EAAD,CAAkBC,QAAQ,uBAC1B,cAAC8C,EAAA,EAAD,CAAQ7D,UAAQ,EAACN,GAAIQ,IAAMC,GAAG,IAA9B,2BCdL,SAAS2D,EAAT,GAA6C,IAAtBvC,EAAqB,EAArBA,MAAOwB,EAAc,EAAdA,WAClCnB,EAAkDmB,EAAlDnB,YAAaE,EAAqCiB,EAArCjB,iBAAkBK,EAAmBY,EAAnBZ,gBACtC,OACQ,gCACI,cAACsB,EAAD,CAAevE,KAAMqC,EAAMwC,SAAUpK,OAAQ4H,EAAM5H,SACnD,cAACqK,EAAA,EAAD,CACIC,OAAQ1C,EAAM2C,QACd9K,KAAMmI,EAAMnI,KACZ6D,YAAakF,EACbC,cAAeb,EAAMa,cAAc+B,KAAK5C,KAC5C,cAAC9I,EAAA,EAAD,CACI2L,KAAM7C,EAAM6C,KACZnH,YAAa6E,EACbF,YAAaA,EACbxI,KAAMmI,EAAMnI,Y,gCCXzB,SAASiL,EAAM7G,EAAGC,GACvB,MAAO,CAAED,EAAGA,EAAGC,EAAGA,GAGb,SAAS6G,EAAIC,EAAWC,EAAWC,GAExC,GADAA,IAAOF,EAAIC,GACmB,IAA1BxI,KAAK0I,MAAMH,EAAIC,EAAIC,GAAU,MAAME,MAAM,uBAC7C,MAAO,CAAEJ,EAAGA,EAAGC,EAAGA,EAAGC,EAAGA,GAGnB,SAASG,EAAYhL,EAAGC,GAC7B,OAAOD,EAAE2K,IAAM1K,EAAE0K,GAAK3K,EAAE4K,IAAM3K,EAAE2K,EAG3B,SAASK,EAAQjL,EAAGC,GACzB,OAAOyK,EAAI1K,EAAE2K,EAAI1K,EAAE0K,EAAG3K,EAAE4K,EAAI3K,EAAE2K,EAAG5K,EAAE6K,EAAI5K,EAAE4K,GAGpC,SAASK,EAAalL,EAAGC,GAC9B,OAAOyK,EAAI1K,EAAE2K,EAAI1K,EAAE0K,EAAG3K,EAAE4K,EAAI3K,EAAE2K,EAAG5K,EAAE6K,EAAI5K,EAAE4K,GAGpC,SAASM,EAAUnL,EAAG1B,GAC3B,OAAOoM,EAAI1K,EAAE2K,EAAIrM,EAAG0B,EAAE4K,EAAItM,EAAG0B,EAAE6K,EAAIvM,GA9BrC,4dAyCO,IAAM8M,EAAiB,CAC1BV,EAAI,EAAG,GAAI,GACXA,EAAI,GAAI,EAAG,GACXA,EAAI,GAAI,EAAG,GACXA,GAAK,EAAG,EAAG,GACXA,GAAK,EAAG,EAAG,GACXA,EAAI,EAAG,GAAI,IAWR,SAASW,EAActM,GAC5B,OAAOqM,EAAejO,KAAI,SAAAwD,GAAC,OAL7B,SAAsB5B,EAAKuM,GACzB,OAAOL,EAAQlM,EAAKuM,GAIWC,CAAaxM,EAAK4B,MAE5C,SAAS6K,EAAoBzM,GAGlC,IAFA,IAAMQ,EAAY8L,EAActM,GAC5BgB,EAAS,GACJe,EAAI,EAAGA,EAAI,EAAGA,IACrBf,EAAOhC,KAAK,CAACwB,EAAUuB,GAAIvB,GAAWuB,EAAI,GAAK,GAAIvB,GAAWuB,EAAI,GAAK,KAEzE,OAAOf,EAGT,IAAM0L,EAAgB,CAClBf,EAAI,GAAI,GAAI,GACZA,EAAI,GAAI,EAAG,GACXA,GAAK,GAAI,EAAG,GACZA,GAAK,EAAG,EAAG,GACXA,GAAK,EAAG,GAAI,GACZA,EAAI,EAAG,GAAI,IAWf,SAASgB,EAAa1L,EAAGC,GACvB,OALkBlB,EAKAmM,EAAalL,EAAGC,IAJ1BmC,KAAKuJ,IAAI5M,EAAI4L,GAAKvI,KAAKuJ,IAAI5M,EAAI6L,GAAKxI,KAAKuJ,IAAI5M,EAAI8L,IAAM,EADjE,IAAoB9L,EAQb,SAAS6M,EAAUC,GACxB,IAAIC,EAAK1J,KAAK0I,MAAMe,EAAElB,GAClBoB,EAAK3J,KAAK0I,MAAMe,EAAEjB,GAClBoB,EAAK5J,KAAK0I,MAAMe,EAAEhB,GAChBoB,EAAS7J,KAAKuJ,IAAIG,EAAKD,EAAElB,GACzBuB,EAAS9J,KAAKuJ,IAAII,EAAKF,EAAEjB,GACzBuB,EAAS/J,KAAKuJ,IAAIK,EAAKH,EAAEhB,GAW/B,OAVIoB,EAASC,GAAUD,EAASE,EAC9BL,GAAMC,EAAKC,EAGPE,EAASC,EACXJ,GAAMD,EAAKE,EAGXA,GAAMF,EAAKC,EAERrB,EAAIoB,EAAIC,EAAIC,GAGrB,SAASI,EAASpM,EAAGC,EAAGoM,GACtB,OAAO3B,EAAI1K,EAAE2K,GAAK,EAAM0B,GAAKpM,EAAE0K,EAAI0B,EAAGrM,EAAE4K,GAAK,EAAMyB,GAAKpM,EAAE2K,EAAIyB,EAAGrM,EAAE6K,GAAK,EAAMwB,GAAKpM,EAAE4K,EAAIwB,GAkB3F,SAASC,EAAYC,EAAKC,GACxB,MAAO,CAAED,IAAKA,EAAKC,IAAKA,GAG1B,IACMC,GAAO,EAEb,SAASC,EAAkB7L,EAAQgL,GACjC,IAAMU,EAAMV,EAAElB,EACR6B,EAAMX,EAAEjB,GAAKiB,EAAElB,EAAI9J,GAAgB,EAANgL,EAAElB,IAAU,EAC/C,GANW,IAMP9J,GAAmBA,IAAW4L,EAChC,MAAM1B,MAAM,wCAEd,OAAOuB,EAAYC,EAAKC,GAG1B,SAASG,EAAgB9L,EAAQgL,GAC/B,IAAMlB,EAAIkB,EAAEU,IACN3B,EAAIiB,EAAEW,KAAOX,EAAEU,IAAM1L,GAAkB,EAARgL,EAAEU,MAAY,EAC7C1B,GAAKF,EAAIC,EACf,GAhBW,IAgBP/J,GAAmBA,IAAW4L,EAChC,MAAM1B,MAAM,wCAEd,OAAOL,EAAIC,EAAGC,EAAGC,GAGnB,SAAS+B,EAAkB/L,EAAQgL,GACjC,IAAMU,EAAMV,EAAElB,GAAKkB,EAAEjB,EAAI/J,GAAgB,EAANgL,EAAEjB,IAAU,EACzC4B,EAAMX,EAAEjB,EACd,GAzBW,IAyBP/J,GAAmBA,IAAW4L,EAChC,MAAM1B,MAAM,wCAEd,OAAOuB,EAAYC,EAAKC,GAG1B,SAASK,EAAgBhM,EAAQgL,GAC/B,IAAMlB,EAAIkB,EAAEU,KAAOV,EAAEW,IAAM3L,GAAkB,EAARgL,EAAEW,MAAY,EAC7C5B,EAAIiB,EAAEW,IACN3B,GAAKF,EAAIC,EACf,GAnCW,IAmCP/J,GAAmBA,IAAW4L,EAChC,MAAM1B,MAAM,wCAEd,OAAOL,EAAIC,EAAGC,EAAGC,GAMnB,SAASiC,EAAaP,EAAKC,GACzB,MAAO,CAAED,IAAKA,EAAKC,IAAKA,GAG1B,SAASO,EAAmBlB,GAG1B,OAAOiB,EAFKjB,EAAElB,EACF,EAAIkB,EAAEjB,EAAIiB,EAAElB,GAI1B,SAASqC,EAAiBnB,GACxB,IAAMlB,EAAIkB,EAAEU,IACN3B,GAAKiB,EAAEW,IAAMX,EAAEU,KAAO,EAE5B,OAAO7B,EAAIC,EAAGC,GADHD,EAAIC,GAIjB,SAASqC,EAAmBpB,GAG1B,OAAOiB,EAFK,EAAIjB,EAAElB,EAAIkB,EAAEjB,EACZiB,EAAEjB,GAIhB,SAASsC,EAAiBrB,GACxB,IAAMlB,GAAKkB,EAAEU,IAAMV,EAAEW,KAAO,EACtB5B,EAAIiB,EAAEW,IAEZ,OAAO9B,EAAIC,EAAGC,GADHD,EAAIC,GAOV,SAASuC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC1D,MAAO,CAAER,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,YAAaA,GAMjF,SAASC,EAAO/J,EAAagK,EAAMC,GACxC,MAAO,CAAEjK,YAAaA,EAAagK,KAAMA,EAAMC,OAAQA,GAGlD,IAAMC,EAAqBb,EAAY/K,KAAK6L,KAAK,GAAM7L,KAAK6L,KAAK,GAAO,EAAK,EAAK,IAAW7L,KAAK6L,KAAK,GAAO,GAAM,EAAM,EAAK,EAAK,EAAM,EAAK,IACzIC,EAAmBf,EAAY,IAAW,EAAK/K,KAAK6L,KAAK,GAAO,EAAK7L,KAAK6L,KAAK,GAAM,EAAM,EAAK,GAAM,EAAM,EAAK7L,KAAK6L,KAAK,GAAO,EAAK,GAE7I,SAASE,EAAa/K,EAAQyI,GACnC,IAAMuC,EAAIhL,EAAOU,YACXgK,EAAO1K,EAAO0K,KACdC,EAAS3K,EAAO2K,OAChBnK,GAAKwK,EAAEhB,GAAKvB,EAAElB,EAAIyD,EAAEf,GAAKxB,EAAEjB,GAAKkD,EAAKlK,EACrCC,GAAKuK,EAAEd,GAAKzB,EAAElB,EAAIyD,EAAEb,GAAK1B,EAAEjB,GAAKkD,EAAKjK,EAC3C,OAAO4G,EAAM7G,EAAImK,EAAOnK,EAAGC,EAAIkK,EAAOlK,GAGjC,SAASwK,EAAajL,EAAQkL,GACnC,IAAMF,EAAIhL,EAAOU,YACXgK,EAAO1K,EAAO0K,KACdC,EAAS3K,EAAO2K,OAChBQ,EAAK9D,GAAO6D,EAAE1K,EAAImK,EAAOnK,GAAKkK,EAAKlK,GAAI0K,EAAEzK,EAAIkK,EAAOlK,GAAKiK,EAAKjK,GAC9D8G,EAAIyD,EAAEZ,GAAKe,EAAG3K,EAAIwK,EAAEX,GAAKc,EAAG1K,EAC5B+G,EAAIwD,EAAEV,GAAKa,EAAG3K,EAAIwK,EAAET,GAAKY,EAAG1K,EAClC,OAAO6G,EAAIC,EAAGC,GAAID,EAAIC,GAGjB,SAAS4D,EAAkBpL,EAAQqL,GACxC,IAAML,EAAIhL,EAAOU,YACXgK,EAAO1K,EAAO0K,KACdY,EAAQ,EAAMtM,KAAK+B,IAAMiK,EAAER,YAAca,GAAU,EACzD,OAAOhE,EAAMqD,EAAKlK,EAAIxB,KAAKuM,IAAID,GAAQZ,EAAKjK,EAAIzB,KAAKwM,IAAIF,IAGpD,SAASG,EAAgBzL,EAAQyI,GAGtC,IAFA,IAAIiD,EAAU,GACRC,EAASZ,EAAa/K,EAAQyI,GAC3B/K,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMD,EAAS2N,EAAkBpL,EAAQtC,GACzCgO,EAAQ/Q,KAAK0M,EAAMsE,EAAOnL,EAAI/C,EAAO+C,EAAGmL,EAAOlL,EAAIhD,EAAOgD,IAE5D,OAAOiL,EAGF,IAAME,EAAanB,EAAOK,EAAkBzD,EAAM,EAAG,GAAIA,EAAM,EAAG,IAC7CoD,EAAOG,EAAoBvD,EAAM,EAAG,GAAIA,EAAM,EAAG,IAK7E,SAASwE,EAASzH,GAChB1E,QAAQC,IAAI,OAAQyE,GAGtB,SAAS0H,EAAU1H,EAAMxH,EAAGC,GACpBD,EAAE2K,IAAM1K,EAAE0K,GAAK3K,EAAE6K,IAAM5K,EAAE4K,GAAK7K,EAAE4K,IAAM3K,EAAE2K,GAC5CqE,EAASzH,GAIb,SAAS2H,EAAkB3H,EAAMxH,EAAGC,GAC5BD,EAAEuM,MAAQtM,EAAEsM,KAAOvM,EAAEwM,MAAQvM,EAAEuM,KACnCyC,EAASzH,GAIb,SAAS4H,EAAmB5H,EAAMxH,EAAGC,GAC7BD,EAAEuM,MAAQtM,EAAEsM,KAAOvM,EAAEwM,MAAQvM,EAAEuM,KACnCyC,EAASzH,GAIb,SAAS6H,EAAU7H,EAAMxH,EAAGC,GACpBD,IAAMC,GACVgP,EAASzH,GAgBb,SAAS8H,IACPJ,EAAU,gBAAiBxE,EAAI,GAAI,EAAG,GAjQ/BU,EAiQiD,IAG1D,SAASmE,IACPL,EAAU,eAAgBxE,GAAK,GAAI,EAAG,GAxO/BO,EAwOyDP,EAAI,GAAI,EAAG,GAxOvDe,EAwO2D,KAOjF,SAAS+D,IA1RT,IAA0BxP,EA2RxBkP,EAAU,oBA3RclP,EA2RuB0K,EAAI,GAAI,EAAG,GA1RnDA,GAAK1K,EAAE4K,GAAI5K,EAAE6K,GAAI7K,EAAE2K,IA0RqCD,EAAI,GAAI,GAAI,IAG7E,SAAS+E,IAlSF,IAAyBzP,EAmS9BkP,EAAU,mBAnSoBlP,EAmSe0K,EAAI,GAAI,EAAG,GAlSjDA,GAAK1K,EAAE6K,GAAI7K,EAAE2K,GAAI3K,EAAE4K,IAkSmCF,GAAK,GAAI,EAAG,IAc3E,SAASgF,KA3CT,SAAyBlI,EAAMxH,EAAGC,GAChCoP,EAAU7H,EAAMxH,EAAElC,OAAQmC,EAAEnC,QAC5B,IAAK,IAAIgD,EAAI,EAAGA,EAAId,EAAElC,OAAQgD,IAC5BoO,EAAU1H,EAAMxH,EAAEc,GAAIb,EAAEa,IAyC1B6O,CAAgB,eAAgB,CAACjF,EAAI,EAAG,EAAG,GAAIA,EAAI,GAAI,EAAG,GAAIA,EAAI,GAAI,EAAG,GAAIA,EAAI,GAAI,EAAG,GAAIA,EAAI,GAAI,EAAG,GAAIA,EAAI,GAAI,EAAG,IAhOxH,SAAsB1K,EAAGC,GAMvB,IALA,IAAM2P,EAAIlE,EAAa1L,EAAGC,GACpB4P,EAAUnF,EAAI1K,EAAE2K,EAAI,KAAO3K,EAAE4K,EAAI,KAAO5K,EAAE6K,EAAI,MAC9CiF,EAAUpF,EAAIzK,EAAE0K,EAAI,KAAO1K,EAAE2K,EAAI,KAAO3K,EAAE4K,EAAI,MAChDkF,EAAU,GACRC,EAAO,EAAM5N,KAAK6N,IAAIL,EAAG,GACtB9O,EAAI,EAAGA,GAAK8O,EAAG9O,IACtBiP,EAAQhS,KAAK6N,EAAUQ,EAASyD,EAASC,EAASE,EAAOlP,KAE3D,OAAOiP,EAuNoHG,CAAaxF,EAAI,EAAG,EAAG,GAAIA,EAAI,GAAI,EAAG,KApCjKwE,EAAU,UAAWxE,EAAI,GAAI,GAAI,GAAIO,EAAQP,EAAI,GAAI,EAAG,GAAIA,EAAI,GAAI,EAAG,KACvEwE,EAAU,eAAgBxE,GAAK,EAAG,GAAI,GAAIQ,EAAaR,EAAI,GAAI,EAAG,GAAIA,EAAI,GAAI,EAAG,KA0FjF4E,IACAC,IA/EAF,EAAU,eAAgB,EAAG3D,EAAahB,EAAI,GAAI,EAAG,GAAIA,EAAI,EAAG,EAAG,KAiFnE8E,IACAC,IAvEF,WACE,IAAMzP,EAAI0K,EAAI,EAAK,EAAK,GAClBzK,EAAIyK,EAAI,GAAM,EAAK,GACnBxK,EAAIwK,EAAI,GAAM,EAAK,GACzBwE,EAAU,cAAexE,EAAI,GAAI,GAAI,GAAIkB,EAAUQ,EAAS1B,EAAI,EAAK,EAAK,GAAMA,EAAI,IAAO,GAAM,IAAO,MACxGwE,EAAU,cAAetD,EAAU5L,GAAI4L,EAAUQ,EAASpM,EAAGC,EAAG,QAChEiP,EAAU,cAAetD,EAAU3L,GAAI2L,EAAUQ,EAASpM,EAAGC,EAAG,QAChEiP,EAAU,cAAetD,EAAU5L,GAAI4L,EAAUlB,EAAU,GAAN1K,EAAE2K,EAAgB,GAAN1K,EAAE0K,EAAgB,GAANzK,EAAEyK,EAAe,GAAN3K,EAAE4K,EAAgB,GAAN3K,EAAE2K,EAAgB,GAAN1K,EAAE0K,EAAe,GAAN5K,EAAE6K,EAAgB,GAAN5K,EAAE4K,EAAgB,GAAN3K,EAAE2K,KACrJqE,EAAU,cAAetD,EAAU1L,GAAI0L,EAAUlB,EAAU,GAAN1K,EAAE2K,EAAgB,GAAN1K,EAAE0K,EAAgB,GAANzK,EAAEyK,EAAe,GAAN3K,EAAE4K,EAAgB,GAAN3K,EAAE2K,EAAgB,GAAN1K,EAAE0K,EAAe,GAAN5K,EAAE6K,EAAgB,GAAN5K,EAAE4K,EAAgB,GAAN3K,EAAE2K,KAgErJsF,GACAT,IA1DF,WACE,IAAM7D,EAAInB,EAAI,EAAG,GAAI,GACf0F,EAAOvC,EAAOK,EAAkBzD,EAAM,GAAM,IAAOA,EAAM,GAAM,KACrEyE,EAAU,SAAUrD,EAAGD,EAAUyC,EAAa+B,EAAMjC,EAAaiC,EAAMvE,MACvE,IAAMwE,EAASxC,EAAOG,EAAoBvD,EAAM,GAAM,IAAOA,EAAM,GAAM,KACzEyE,EAAU,SAAUrD,EAAGD,EAAUyC,EAAagC,EAAQlC,EAAakC,EAAQxE,MAsD3EyE,GAnDF,WACE,IAAMtQ,EAAI0K,EAAI,EAAG,GAAI,GACfzK,EAAIqM,EAAY,GAAI,GAC1B4C,EAAU,8BAA+BlP,EAAG2M,EA3NjC,EA2NuDD,EA3NvD,EA2N+E1M,KAC1FmP,EAAkB,8BAA+BlP,EAAGyM,EA5NzC,EA4NiEC,EA5NjE,EA4NuF1M,KAClGiP,EAAU,6BAA8BlP,EAAG2M,EAAgBF,EAAKC,EAAkBD,EAAKzM,KACvFmP,EAAkB,6BAA8BlP,EAAGyM,EAAkBD,EAAKE,EAAgBF,EAAKxM,KAC/FiP,EAAU,8BAA+BlP,EAAG6M,EA/NjC,EA+NuDD,EA/NvD,EA+N+E5M,KAC1FmP,EAAkB,8BAA+BlP,EAAG2M,EAhOzC,EAgOiEC,EAhOjE,EAgOuF5M,KAClGiP,EAAU,6BAA8BlP,EAAG6M,EAAgBJ,EAAKG,EAAkBH,EAAKzM,KACvFmP,EAAkB,6BAA8BlP,EAAG2M,EAAkBH,EAAKI,EAAgBJ,EAAKxM,KA0C/FsQ,GAtCApB,EAAkB,0BAA2B7C,EAAY,EAAG,GAAII,EAtOrD,EAsO6EhC,EAAI,EAAG,GAAI,KACnGyE,EAAkB,yBAA0B7C,EAAY,EAAG,GAAII,EAAkBD,EAAK/B,EAAI,EAAG,GAAI,KAIjGwE,EAAU,uBAAwBxE,EAAI,EAAG,GAAI,GAAIiC,EA3OtC,EA2O4DL,EAAY,EAAG,KACtF4C,EAAU,uBAAwBxE,EAAI,EAAG,GAAI,GAAIiC,EAAgBF,EAAKH,EAAY,EAAG,KAGvF,WACE,IAAMtM,EAAI0K,EAAI,EAAG,GAAI,GACfzK,EAAI6M,EAAa,GAAI,GAC3BoC,EAAU,iCAAkClP,EAAGgN,EAAiBD,EAAmB/M,KACnFoP,EAAmB,iCAAkCnP,EAAG8M,EAAmBC,EAAiB/M,KAC5FiP,EAAU,iCAAkClP,EAAGkN,EAAiBD,EAAmBjN,KACnFoP,EAAmB,iCAAkCnP,EAAGgN,EAAmBC,EAAiBjN,KA0B5FuQ,GAtBApB,EAAmB,8BAA+BtC,EAAa,EAAG,GAAIC,EAAmBrC,EAAI,EAAG,GAAI,KACpG0E,EAAmB,8BAA+BtC,EAAa,EAAG,GAAIG,EAAmBvC,EAAI,EAAG,GAAI,KAIpGwE,EAAU,4BAA6BxE,EAAI,EAAG,GAAI,GAAIsC,EAAiBF,EAAa,EAAG,KACvFoC,EAAU,4BAA6BxE,EAAI,EAAG,GAAI,GAAIwC,EAAiBJ,EAAa,EAAG,M,oCCrYpFzN,G,SAAAA,K,UAAAA,E,gBAAAA,E,UAAAA,E,0BAAAA,E,iBAAAA,M,KAQUA,O,yHCqBAoR,EA3BG,SAACC,GAA6B,IAAvBC,EAAsB,uDAAd,CAACC,IAAK,IAE7BC,EAAYrN,iBAAO,MACnBoN,EAAMD,EAAQC,IAsBpB,OApBAE,qBAAU,WAEN,IAGIC,EAHEC,EAASH,EAAUI,QACnBC,EAAUF,EAAOG,WAAW,MAC9BC,EAAa,EAYjB,OAVe,SAATC,IACFD,IACAV,EAAKQ,EAASE,GACdE,EAA0BN,GAC1BO,EAAaP,GACbQ,YAAW,WACPT,EAAmBU,OAAOC,sBAAsBL,KACjD,IAAOT,GAEdS,GACO,WACHI,OAAOE,qBAAqBZ,MAEjC,CAACL,IACGG,GAIX,SAASU,EAAaP,GAClB,MAA0BA,EAAOY,wBAAzBC,EAAR,EAAQA,MAAO7Q,EAAf,EAAeA,OAEf,GAAIgQ,EAAOa,QAAUA,GAASb,EAAOhQ,SAAWA,EAAQ,CACpD,MAAqCyQ,OAA7BK,iBAAiBC,OAAzB,MAA+B,EAA/B,EACMb,EAAUF,EAAOG,WAAW,MAIlC,OAHAH,EAAOa,MAAQA,EAAME,EACrBf,EAAOhQ,OAASA,EAAO+Q,EACvBb,EAAQc,MAAMD,EAAOA,IACd,EAGX,OAAO,EAEX,SAAST,EAA0BN,GAE/B,MAA0BA,EAAOY,wBAAzBC,EAAR,EAAQA,MAAO7Q,EAAf,EAAeA,OAEf,OAAIgQ,EAAOa,QAAUA,GAASb,EAAOhQ,SAAWA,KAC9CgQ,EAAOa,MAAQA,EACfb,EAAOhQ,OAASA,GACT,G,WCrCEiR,EAbA,SAAAnN,GACX,IAAQ4L,EAAS5L,EAAT4L,KACFG,EAAYJ,EAAUC,EAAM,CAACE,IAAK,IACxC,OAAO,wBAAQrM,IAAKsM,EAAWqB,MAAO,CACnCL,MAAO,OACP7Q,OAAQ,OACRmR,QAAS,QACT9N,SAAU,WACV+N,IAAK,EACLC,KAAM,EACNC,QAAS,S,gBCPVxO,EAAcnE,IACdyD,EAASzD,IAAWmE,EAAanE,IAAU,GAAI,IAAKA,IAAU,IAAK,MAE1D,SAAS4S,IACpB,IAAM5K,EAAQ,IAAI6B,IAgBlB,OAAO,cAAC,EAAD,CAAQkH,KAdF,SAAC8B,EAAKpB,GACfoB,EAAIC,UAAU,EAAG,EAAGD,EAAIxB,OAAOa,MAAOW,EAAIxB,OAAOhQ,QACjDwR,EAAIE,UAAY,UAChB/K,EAAMmB,MAAMnB,EAAMgL,QAAQvQ,KAAKwQ,MAAMxQ,KAAKuE,SAAWgB,EAAMgL,QAAQ7U,UAHrC,oBAIZ6J,EAAM6C,KAAKrN,IAAIkB,QAJH,IAI9B,2BAAyC,CAAC,IAA/BU,EAA8B,QACrCyT,EAAIK,YACJ,IAAM/D,EAAUnP,IAAoByD,EAAQrE,GAC5CyT,EAAIM,OAAOhE,EAAQ,GAAGlL,EAAI,GAAIkL,EAAQ,GAAGjL,EAAI,IAC7CiL,EAAQrN,SAAS,SAAA6M,GACbkE,EAAIO,OAAOzE,EAAE1K,EAAI,GAAI0K,EAAEzK,EAAI,OAE/B2O,EAAIQ,QAXsB,kC,YCPvB,SAASC,IACpB,MAA0BxP,mBAAS,IAAnC,mBAAOyP,EAAP,KAAcC,EAAd,KAOA,OANArC,qBAAW,WACPlK,MAAM,SACDwM,MAAM,SAAAC,GAAI,OAAIA,EAAKC,UACnBF,MAAM,SAAAG,GAAI,OAAIJ,EAASI,MACvBzM,OAAO,SAAAC,GAAG,OAAIjE,QAAQC,IAAIgE,QAChC,IAEC,gCACKmM,EAAM/V,KAAK,SAAAsJ,GACR,OACA,+BACI,uCAAUA,EAAV,OACA,mCAAK,cAAC,IAAD,CAAMF,GAAM,CACbS,SAAS,SAAD,OAAWP,GACnBQ,OAAO,uBAFN,yBAFAR,QCbV,SAAS+M,IAEpB,OAAO,gCACH,uDACA,cAACP,EAAD,IACA,cAACV,EAAD,O,qBCJO,SAASkB,IAEpB,OACI,qBAAKvB,MAAO,CAAE7N,SAAU,WAAYqP,MAAO,EAAG1S,OAAQ,QAAtD,SACI,eAAC,IAAD,CAAQ2S,OAAQ,CAAEC,KAAM,GAAKC,IAAK,KAAlC,UACI,iCACA,4BAAYxP,SAAU,CAAC,GAAI,GAAI,MAC/B,cAAClB,EAAA,EAAD,CACIpE,IAAKY,IAAQ,EAAG,GAChBV,MAAQ,CAAC,KAAQ,QAAS,OAAU,c,oBCTzC,SAAS6U,IACpB,OAAO,gCACC,cAACL,EAAD,IACA,mBAAGM,KAAK,yCAAR,SACI,eAAC9J,EAAA,EAAD,CAAQhG,MAAM,OAAd,UACI,cAAC+P,EAAA,EAAD,CAAMxM,KAAK,WADf,eAIJ,wBAAQyM,IAAI,eAAeC,MAAM,SAAShC,MAAO,CAACL,MAAO,OAAQ7Q,OAAQ,OAAQqD,SAAU,WAAY8P,OAAQ,a,YCNrHC,EAAU,WACd,MAA0B3Q,mBAAS,IAAI+F,KAAvC,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAA8BhG,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgBmS,EAAhB,KACA,EAA4C5Q,mBAAS,IAArD,mBAAO6Q,EAAP,KAAuBC,EAAvB,KASA,OACE,gCACE,gCACE,0CAAa5M,EAAMqB,cACnB,wBAAQ1E,QAZD,WACXqD,EAAMqI,OACNqE,EAAWnS,EAAU,IAUjB,2BACA,wBAAQoC,QATA,WACZmF,EAAS,IAAID,KACb6K,EAAW,IAOP,qBACA,6DAEE,uBAAO3W,MAAO4W,EAAgBE,SAAU,SAAAhT,GAAC,OAAI+S,EAAkB/S,EAAEpB,OAAO1C,aAE1E,wBAAQ4G,QAAS,WACf,IAAK,IAAIxD,EAAE,EAAEA,EAAEwT,EAAexT,IAC5B6G,EAAMqI,OAERqE,EAAWnS,EAAUoS,IAJvB,wBAOA,2CACW9W,KAAKC,UAAUkK,EAAM0C,cAGlC,cAACxL,EAAA,EAAD,CAAM2L,KAAM7C,EAAM6C,KAAMxC,YAAa,SAK5B,SAASyM,IACtB,OACE,cAAC,EAAD,I,sBClCWC,MAPf,WACI,IAAM/L,EAAKlB,IACLmB,EAAKnB,IACX,OAAO,cAACiB,EAAA,EAAD,CAAWC,GAAIA,EAAIC,GAAIA,KCLnB,SAAS+L,IACpB,OAAO,gCACK,cAACC,EAAD,IACA,cAACH,EAAD,O,qDCMD,SAASI,IAYpB,OAAO,gCACH,sDAEA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IAEA,sBAAKC,UAAU,kDAAf,UACI,yDACA,cAACV,EAAD,UAKZ,SAASW,EAAT,GAAwC,IAAflD,EAAc,EAAdA,KAAMqB,EAAQ,EAARA,MAC3B,OAAO,sBAAK4B,UAAU,kDAAf,UACC,qBAAKA,UAAU,SAAf,SACKjD,IAEL,qBAAKiD,UAAU,SAAf,SACK5B,OAKjB,SAASoB,IACL,IAAMnN,EAAQ,IAAI6B,IAClB7B,EAAMmB,MAAM,IAAIL,IAAK,IAAItF,IAAM9D,IAAOqD,YAAajD,IAAKC,OAAQgL,YAAI,EAAG,KACvE/C,EAAMmB,MAAM,IAAIL,IAAK,IAAItF,IAAM9D,IAAOoD,IAAKhD,IAAK+V,OAAQ9K,YAAI,EAAG,KAE/D,IAAM2H,EAAO,qCACT,gDADS,0XAOPqB,EAAQ,cAAC7U,EAAA,EAAD,CAAM2L,KAAM7C,EAAM6C,KAAMiL,aAAa,QAAQC,aAAa,EAAOC,WAAa,CAACtR,SAAU,CAAC,GAAI,EAAG,MAC/G,OAAO,cAACkR,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAG9C,SAASqB,IACL,IAAMpN,EAAQ,IAAI6B,IAClB7B,EAAMmB,MAAM,IAAIL,IAAK,IAAItF,IAAM9D,IAAOqD,YAAajD,IAAKC,OAAQgL,YAAI,EAAG,KACvE/C,EAAMmB,MAAM,IAAIL,IAAK,IAAItF,IAAM9D,IAAOoD,IAAKhD,IAAK+V,OAAQ9K,YAAI,EAAG,KAC/D,IAAM2H,EAAO,qCACD,4CACA,cAACjI,EAAA,EAAD,CAAoBC,OAAQ1C,EAAM0C,OAAQuL,QAAQ,IAFjD,gIAKPlC,EAAQ,cAAC7U,EAAA,EAAD,CAAM2L,KAAM7C,EAAM6C,KACZhL,KAAMmI,EAAMnI,KACZwI,YAAaL,EAAMkO,gBAAgB1Y,KAAI,SAAA0O,GAAC,MAAI,CAACA,EAAG,MAClD4J,aAAa,QAAQC,aAAa,EAAOC,WAAa,CAACtR,SAAU,CAAC,GAAI,EAAG,MAC3F,OAAO,cAACkR,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAG9C,SAASsB,IACL,IAAMxK,EAAO,IAAIsL,IACjBtL,EAAKuL,SAASrL,YAAI,EAAG,GAAI,IAAIvH,IAAM9D,IAAOqD,YAAajD,IAAKC,QAC5D8K,EAAKuL,SAASrL,YAAI,EAAG,GAAI,IAAIvH,IAAM9D,IAAOC,IAAKG,IAAK+V,QACpDhL,EAAKuL,SAASrL,YAAI,EAAG,GAAI,IAAIvH,IAAM9D,IAAOC,IAAKG,IAAKC,QACpD8K,EAAKuL,SAASrL,YAAI,EAAG,GAAI,IAAIvH,IAAM9D,IAAOoD,IAAKhD,IAAK+V,QACpDhL,EAAKuL,SAASrL,YAAI,GAAI,GAAI,IAAIvH,IAAM9D,IAAOkD,OAAQ9C,IAAKC,QACxD8K,EAAKuL,SAASrL,YAAI,EAAG,GAAI,IAAIvH,IAAM9D,IAAOuD,OAAQnD,IAAK+V,QACvDhL,EAAKuL,SAASrL,YAAI,GAAI,GAAI,IAAIvH,IAAM9D,IAAOoD,IAAKhD,IAAKC,QAErD,IAAM2S,EAAO,qCACD,wDACA,8EAAgD,cAACpI,EAAA,EAAD,CAAQhG,MAAM,OAAOqD,KAAM0O,IAAQ3W,IAAOC,OAA1F,iEAGA,sSAKNoU,EAAQ,cAAC7U,EAAA,EAAD,CAAM2L,KAAMA,EAAMiL,aAAa,QAAQC,aAAa,EAAOC,WAAa,CAACtR,SAAU,CAAC,EAAG,EAAG,IAAM4R,OAAQ,CAAC,EAAG,EAAG,KAG7H,OAAO,cAACV,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAK9C,SAASwC,EAAYjX,GACjB,IAAMuL,EAAO,IAAIsL,IAEjB,OADAtL,EAAKuL,SAASrL,YAAI,EAAG,GAAIzL,GACjB,cAACJ,EAAA,EAAD,CAAM2L,KAAMA,EAAMiL,aAAa,QAAQC,aAAa,EAAOC,WAAa,CAACtR,SAAU,CAAC,GAAI,EAAG,IAAM4R,OAAQ,CAAC,EAAG,EAAG,KAG5H,SAAShB,IACL,IAAM5C,EAAO,8BACT,sCAAQ,cAACpI,EAAA,EAAD,CAAQhG,MAAM,OAAOqD,KAAM0O,IAAQ3W,IAAOC,YAEhDoU,EAAQwC,EAAY,IAAI/S,IAAM9D,IAAOC,IAAKG,IAAKC,QACrD,OAAO,cAAC6V,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAI9C,SAASwB,IACL,IAAM7C,EAAO,sCAAQ,cAACpI,EAAA,EAAD,CAAQhG,MAAM,OAAOqD,KAAM0O,IAAQ3W,IAAOoD,UACzDiR,EAAQwC,EAAY,IAAI/S,IAAM9D,IAAOoD,IAAKhD,IAAK+V,QACrD,OAAO,cAACD,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAI9C,SAASyB,IACL,IAAM9C,EAAO,8BACT,yCAAW,cAACpI,EAAA,EAAD,CAAQhG,MAAM,OAAOqD,KAAM0O,IAAQ3W,IAAOkD,eAEnDmR,EAAQwC,EAAY,IAAI/S,IAAM9D,IAAOkD,OAAQ9C,IAAKC,QACxD,OAAO,cAAC6V,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAG9C,SAAS0B,IACL,IAAM/C,EAAO,8BACT,8CAAgB,cAACpI,EAAA,EAAD,CAAQhG,MAAM,OAAOqD,KAAM0O,IAAQ3W,IAAOqD,oBAExDgR,EAAQwC,EAAY,IAAI/S,IAAM9D,IAAOqD,YAAajD,IAAK+V,QAC7D,OAAO,cAACD,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,IAI9C,SAAS2B,IACL,IAAMhD,EAAO,8BACT,yCAAW,cAACpI,EAAA,EAAD,CAAQhG,MAAM,OAAOqD,KAAM0O,IAAQ3W,IAAOuD,eAEnD8Q,EAAQwC,EAAY,IAAI/S,IAAM9D,IAAOuD,OAAQnD,IAAKC,QACxD,OAAO,cAAC6V,EAAD,CAAgBlD,KAAMA,EAAMqB,MAAOA,I,kDCzJ/B,SAAS7F,GAAO/I,GAC3B,MAA4BrB,mBAAS,QAArC,mBAAOmS,EAAP,KAAeO,EAAf,KACM9S,EAAc,SAAC7B,EAAD,OAAKgG,EAAL,EAAKA,KAAL,OAAe2O,EAAU3O,IAC7C,OACI,eAAC4O,EAAA,EAAD,WACI,cAACpM,GAAA,EAAD,CAAS9D,UAAQ,EAAjB,SACI,eAACmQ,GAAA,EAAD,CAAMC,SAAO,EAACpQ,UAAQ,EAACqQ,WAAS,EAACC,UAAQ,EAACC,WAAS,EAAnD,UACI,cAACJ,GAAA,EAAKK,KAAN,CAAWC,QAAM,EAAC7Q,GAAIQ,IAAMC,GAAG,SAASiB,KAAK,WAA7C,SACI,qBAAKyM,IAAI,sCAAsC2C,IAAI,WAEvD,cAACP,GAAA,EAAKK,KAAN,CAAW5Q,GAAIQ,IAAMC,GAAG,IAAIiB,KAAK,OAAOlD,QAASjB,EAAauS,OAAmB,SAAXA,IACtE,cAACS,GAAA,EAAKK,KAAN,CAAW5Q,GAAIQ,IAAMC,GAAG,SAASiB,KAAK,QAAQlD,QAASjB,EAAauS,OAAiB,UAATA,IAC5E,cAACS,GAAA,EAAKK,KAAN,CAAWlP,KAAK,OAAhB,SACI,cAACN,GAAA,EAAD,CAAkBC,QAAQ,oBAE9B,cAACkP,GAAA,EAAKK,KAAN,CAAW5Q,GAAIQ,IAAMC,GAAG,aAAaiB,KAAK,aAAalD,QAASjB,EAAauS,OAAiB,eAATA,SAG5F9Q,EAAM3C,YCTnB,IAAM0U,GAAcC,gBAAK,kBAAM,uDAEhB,SAASC,KACtB,OACI,cAAC,IAAD,UACE,cAAClJ,GAAD,UACE,cAAC,WAAD,CAAUzJ,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4S,OAAK,EAACC,KAAK,IAAIC,UAAW1D,IACjC,cAAC,IAAD,CAAOyD,KAAK,aAAaC,UAAWL,KACpC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,SAASC,UAAWvC,IACtC,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,SAASC,UAAWpD,IACtC,cAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,YAAYC,UAAWrC,aCrBvDsC,IAAS9F,OACP,cAAC,IAAM+F,WAAP,UACE,cAACL,GAAD,MAEFM,SAASC,eAAe,U,oCCTrB7X,G,SAAAA,K,cAAAA,E,eAAAA,M,KAKUA,O,oFCFM0D,E,aAInB,WAAY/D,EAAgBI,GAAa,yBAHzCJ,YAGwC,OAFxCI,UAEwC,EACtClC,KAAK8B,OAASA,EACd9B,KAAKkC,KAAOA,M,kMCNH8I,EAAb,aAII,WAAYyF,EAAcwJ,GAAoB,yBAH9CxJ,YAG6C,OAF7CwJ,iBAE6C,EACzCja,KAAKyQ,OAASA,EACdzQ,KAAKia,YAAcA,KAId9O,EAAb,aAII,WAAYxJ,EAAesY,GAAoB,yBAH/CtY,WAG8C,OAF9CsY,iBAE8C,EAC1Cja,KAAK2B,MAAQA,EACb3B,KAAKia,YAAcA,KAIpB,SAASC,EAAcxX,EAAWC,GACrC,MAAI,WAAYD,GAAK,WAAYC,EACtB+K,YAAYhL,EAAE+N,OAAQ9N,EAAE8N,SAAW/C,YAAYhL,EAAEuX,YAAatX,EAAEsX,aAChE,UAAWvX,GAAK,UAAWC,EAC3BD,EAAEf,MAAMO,OAASS,EAAEhB,MAAMO,MAAQQ,EAAEf,MAAMG,SAAWa,EAAEhB,MAAMG,QAAU4L,YAAYhL,EAAEuX,YAAatX,EAAEsX,aACnGtX,IAAMwX,EAId,IAAMA,EAAb,kD,qJCxBajO,EAAb,WAsBI,aAAe,IAAD,gCArBdgB,UAqBc,OApBdxB,gBAoBc,OAnBdsB,aAmBc,OAlBdoN,cAkBc,OAjBdC,cAiBc,OAhBdC,gBAgBc,OAddC,gBAAiC,CAC7BxY,IAAOC,IACPD,IAAOkD,OACPlD,IAAOkD,OACPlD,IAAOoD,IACPpD,IAAOoD,IACPpD,IAAOoD,IACPpD,IAAOqD,YACPrD,IAAOqD,YACPrD,IAAOqD,YACPrD,IAAOuD,OACPvD,IAAOuD,QAIPtF,KAAKkN,KAAO,IAAI3L,IAChBvB,KAAK0L,WAAa,EAClB1L,KAAKoa,SAAW,IAAIta,IAAI,CACpB,CAACqC,IAAKC,OAAO,GACb,CAACD,IAAK+V,OAAO,KAEjBlY,KAAKgN,QAAU,IAAIlN,IACnB,IARU,iBAQL,IAAMoC,EAAI,KACX,EAAK8K,QAAQ3M,IAAI6B,EAAM,EAAKqY,gBAAgB1a,KAAI,SAAAiC,GAAM,OAAI,IAAI+D,IAAM/D,EAAQI,QADhF,MAAmB,CAACC,IAAKC,MAAOD,IAAK+V,OAArC,eAA8C,IA9BtD,wCAkCI,WACI,OAAOlY,KAAKgN,QAAQ/M,IAAID,KAAKkC,QAnCrC,gBAsCI,WACI,OAAOlC,KAAK0L,WAAa,IAAM,EAAIvJ,IAAKC,MAAQD,IAAK+V,QAvC7D,oBAyCI,WACI,QAAIlY,KAAKyC,OAAO+X,MAAM,SAAClU,GAAD,OAAOA,OA1CrC,kBA+CI,WACI,OAAItG,KAAKsa,aAAenY,IAAKC,MAClB,EAAC,GAAM,GACPpC,KAAKsa,aAAenY,IAAK+V,MACzB,EAAC,GAAO,GAEZlY,KAAKkN,KAAKuN,eArDzB,uBAuDI,SAAUvY,GACNlC,KAAKsa,WAAapY,IAxD1B,uBA0DI,WACI,OAAOlC,KAAKoa,SAASna,IAAID,KAAKkC,QA3DtC,2BA6DI,WACI,OAAwB,IAApBlC,KAAK0L,WAAyB,CAACrJ,IAAQ,EAAG,IACjB,IAApBrC,KAAK0L,WAAyB,CAACrJ,IAAQ,GAAI,IAC7CrC,KAAKkN,KAAKqL,cAAcvY,KAAKkC,QAhE5C,yBAkEI,WAA8B,IAAD,OACrBwY,EAAO,GACLC,EAAoB3a,KAAK+M,OAAOlN,KAAK,SAAA8B,GAAK,OAAIA,EAAMG,UACpD8Y,EAAgB,IAAIzZ,IAAIwZ,GACxBE,EAAaha,MAAMC,KAAK8Z,GACL/a,KAAI,SAAAiC,GAAM,OAAI,IAAI+D,IAAM/D,EAAQ,EAAKI,SAiB9D,OAhBIlC,KAAK0L,YAAc,IAAM1L,KAAK8a,YAE9B9a,KAAKkN,KAAKqL,cAAcvY,KAAKkC,MACxBiC,SAAQ,SAAAd,GAAC,OAAIqX,EAAKja,KAAK,IAAI0K,IAAK,IAAItF,IAAM9D,IAAOC,IAAK,EAAKE,MAAOmB,OAChEwX,EAAWra,QAElBR,KAAKuY,gBACApU,SAAQ,SAAA4W,GAAO,OAAIF,EACf1W,SAAQ,SAAA6W,GAAU,OAAIN,EAAKja,KAAK,IAAI0K,IAAK6P,EAAYD,UAE9D/a,KAAK8a,aAEL9a,KAAKkN,KAAK+N,cAAcjb,KAAKkC,MAAMiC,SAAQ,YAAqB,IAAD,mBAAlBsM,EAAkB,KAAV7K,EAAU,KAC3D8U,EAAKja,KAAK,IAAIuK,IAAKyF,EAAQ7K,OAG/B8U,EAAKla,OAAeka,EACZ,CAACP,OAzFrB,mBA2FI,WAEI,OADKna,KAAKqa,WAAUra,KAAKqa,SAAWra,KAAKkb,eAClClb,KAAKqa,WA7FpB,qBAgGI,SAAQ1O,GAEJ,OADY3L,KAAKqV,QAAQmF,MAAK,SAAAW,GAAW,OAAIjB,YAAcvO,EAAQwP,QAjG3E,mBAoGI,SAAMxP,GAMF,IAAIhK,EACJ,GAAI,WAAYgK,EAEZhK,EAAQ3B,KAAKkN,KAAKlJ,GAAG2H,EAAO8E,QAC5BzQ,KAAKkN,KAAKkO,YAAYzP,EAAO8E,QAC7BzQ,KAAKkN,KAAKuL,SAAS9M,EAAOsO,YAAatY,QACpC,GAAI,UAAWgK,EAAQ,EAC1BhK,EAAQgK,EAAOhK,OACLG,SAAWC,IAAOC,KAExBhC,KAAKoa,SAAS/Z,IAAIL,KAAKkC,MAAM,GAIjC,IAAIoC,GAAS,EACbtE,KAAK+M,OAAO5I,SAAQ,SAACoJ,EAAG/J,GAClB7B,EAAMG,SAAWyL,EAAEzL,SAAQwC,EAAQd,MAEzCxD,KAAK+M,OAAOsO,OAAO/W,EAAO,GAC1BtE,KAAKkN,KAAKuL,SAAS9M,EAAOsO,YAAatY,GAI3C,cAFO3B,KAAKqa,SACZra,KAAK0L,aACE1L,OAjIf,kBAoII,SAAK2L,GACD,IAAIhK,EAgBJ,MAfI,WAAYgK,GAEZhK,EAAQ3B,KAAKkN,KAAKlJ,GAAG2H,EAAOsO,aAC5Bja,KAAKkN,KAAKkO,YAAYzP,EAAOsO,aAC7Bja,KAAKkN,KAAKuL,SAAS9M,EAAO8E,OAAQ9O,IAC3B,UAAWgK,KAClBhK,EAAQgK,EAAOhK,OACLG,SAAWC,IAAOC,KACxBhC,KAAKoa,SAAS/Z,IAAIL,KAAKkC,MAAM,GAEjClC,KAAK+M,OAAOtM,KAAKkB,GACjB3B,KAAKkN,KAAKkO,YAAYzP,EAAOsO,qBAE1Bja,KAAKqa,SACZra,KAAK0L,aACE1L,OArJf,kBAwJI,WAAkC,IAA7Bsb,EAA4B,uDAArBC,EACR,OAAOvb,KAAKwL,MAAM8P,EAAOtb,KAAKqV,YAzJtC,2BA4JI,SAAc5T,GAEV,GAAIzB,KAAK8a,YAAa,CAAC,IAAD,gBACG9a,KAAKqV,SADR,IAClB,2BAAmC,CAAC,IAAzB1J,EAAwB,QAC/B,GAAIA,aAAkBX,KACd3I,IAAgBsJ,EAAO8E,OAAQhP,GAC/B,OAAO,GAJD,+BAStB,OAAO,IAvKf,2BA0KI,SAAcK,GAAyB,oBAEd9B,KAAKqV,SAFS,IAEnC,2BAAmC,CAAC,IAAzB1J,EAAwB,QAC/B,GAAI,UAAWA,GACPA,EAAOhK,MAAMG,SAAWA,EACxB,OAAO,GALgB,8BASnC,OAAO,IAnLf,6BAsLI,SAAgB6J,EAAuBgL,GAAgC,IAAD,OAC9D+D,EAAO,GAQX,OAPI/O,aAAkBX,IAClB0P,EAAO1a,KAAKkN,KAAKvH,kBAAkBgR,GAC9B9W,KAAI,SAAA0O,GAAC,MAAI,CAACA,EAAG,EAAKrB,KAAKxJ,OAAO6K,OAC5B5C,aAAkBR,MACzBuP,EAAO1a,KAAKuY,gBACP1Y,KAAI,SAAA0O,GAAC,MAAI,CAACA,EAAG,OAEfmM,MA/Lf,KAmMA,SAASa,EAAalG,GAClB,OAAOA,EAAQvQ,KAAKwQ,MAAMxQ,KAAKuE,SAAWgM,EAAQ7U,W,yOCjMzCkY,EAAU,CACnB8C,OAAQ,MACRC,IAAK,cACLC,OAAQ,aACRC,YAAa,eACbC,IAAK,gBA+BF,SAASC,EAAT,GAAwG,IAIvGC,EAJsG,EAAzE/O,EAAyE,EAAzEA,OAAQuL,EAAiE,EAAjEA,OAAiE,IAAzDvS,mBAAyD,MAA7C,SAACjE,KAA4C,MAA/BoJ,qBAA+B,MAAf,SAAC1H,GAAD,OAAO,GAAQ,EAE1G,EAAwB2C,mBAAS,MAAxBsE,EAAT,oBACMsR,EAAS,GAH2F,cAK3EhP,GAL2E,IAK1G,2BAAuC,CAAC,IAAD,UAA1BjL,EAA0B,EAA1BA,OAAQI,EAAkB,EAAlBA,KACjB4Z,EAAW5Z,EACP6Z,EAAOC,eAAela,GAASia,EAAOja,KACrCia,EAAOja,GAAU,GARgF,8BAU1G,OAAQ,mCACHjB,MAAMC,KAAKmb,OAAO5a,OAAOU,MAASlC,KAAI,SAACiC,EAAQ0B,GAC5C,IAAM0Y,EAAQH,EAAOja,GACfqa,EAAW7D,GAAUpN,EAAcpJ,GACnC6E,EAAqB,UAAbmV,EAAuB,MAAQ,OAC7C,OACI,eAAC,IAAD,CAAQtT,GAAG,MAEH4T,UAAWD,EACXlS,cAAc,QACdjD,QAAS,WACLjB,EAAYjE,GACZ2I,EAAY3I,IANxB,UASI,cAAC,IAAD,CAAQ6E,MAAOA,EAAOqD,KAAM0O,EAAQ5W,KACpC,cAAC,IAAD,CAAO0G,GAAG,IAAI6T,OAAK,EAACnD,SAAS,OAA7B,SACKgD,GAAS,MAVLpa,QAoBtB,SAASgL,EAAT,GAAqH,IAA3FC,EAA0F,EAA1FA,OAAQ7K,EAAkF,EAAlFA,KAAkF,IAA5E6D,mBAA4E,MAA9D,kBAAMP,QAAQC,IAAI,2BAA4C,EAAjByF,EAAiB,EAAjBA,cACtG,OACI,eAAC,IAAD,CAAWoR,UAAU,SAArB,UACI,cAAC,IAAO5T,MAAR,CAAc8H,KAAK,OAAnB,SACI,cAACqL,EAAD,CACIvD,OAAQpW,IAASC,IAAK+V,MACtBnL,OAAQA,EAAO9M,IAAIkC,IAAK+V,OACxBnS,YAAa7D,IAASC,IAAK+V,MAAQnS,EAAc,aACjDmF,cAAeA,MAGvB,cAAC,IAAOxC,MAAR,CAAc8H,KAAK,OAAnB,SACI,cAACqL,EAAD,CACIvD,OAAQpW,IAASC,IAAKC,MACtB2K,OAAQA,EAAO9M,IAAIkC,IAAKC,OACxB2D,YAAa7D,IAASC,IAAKC,MAAQ2D,EAAc,aACjDmF,cAAeA,W,4HC9FpB,SAASqR,EAAT,GAA+G,IAArFzW,EAAoF,EAApFA,OAAQrE,EAA4E,EAA5EA,IAAKS,EAAuE,EAAvEA,KAAMwB,EAAiE,EAAjEA,OAAiE,IAAzDqC,mBAAyD,MAA7C,kBAAIP,QAAQC,IAAI,2BAA6B,EACnHQ,EAAOC,iBAAO,MACpB,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQmW,EAAY9V,oBAAU,CAAC8V,QAASpW,EAAU,GAAM,KAAhDoW,QACR,EAAiBna,IAAiByD,EAAQrE,GAAlC6E,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACLC,EAAcV,EAAOU,YACrBG,EAAQzE,IAASC,IAAKC,MAAQ,MAAQ,OAC5C,OACY,uBACI2E,SAAU,CAACT,EAAGC,EAAG7C,EAAS,IAC1BkD,SAAU,CAAC9B,KAAK+B,GAAK,EAAGL,IAAgBnE,IAAuByC,KAAK+B,GAAK,EAAI,EAAG,GAChFG,QAAS,WAAOjB,EAAYtE,IAC5BwF,IAAKhB,EACLiB,cAAe,SAACC,GAAD,OAAWd,GAAS,IACnCe,aAAc,SAACD,GAAD,OAAWd,GAAS,IANtC,UAQI,wCAAwBgB,KAAM,CAAC,EAAG,EAAG,IAAM,KACvC,cAAC,WAASC,qBAAV,CAA+BX,MAAOA,EAAO8V,aAAW,EAACD,QAASA,O,aCqC3Ejb,IAlDF,SAAC,GAON,IAAD,EAPS2L,EAOT,EAPSA,KAOT,IAPenH,mBAOf,MAP2B,kBAAIP,QAAQC,IAAI,2BAO3C,MANSiF,mBAMT,MANqB,GAMrB,MALSxI,YAKT,MALc,KAKd,MAJSkW,mBAIT,aAHSD,oBAGT,MAHsB,OAGtB,MAFSE,kBAET,MAFoB,GAEpB,MADSM,cACT,MADgB,CAAC,EAAG,EAAG,GACvB,EACC5L,EAAS,GACPjH,EAASzD,IAFZ,cAGe6K,EAAKrN,IAAIkB,QAHxB,yBAGQU,EAHR,QAICyL,EAAKrN,IAAII,IAAIwB,GAAK0C,SAAQ,SAACxC,EAAO+B,GAC9BqJ,EAAOtM,KACH,cAACoF,EAAA,EAAD,CACIpE,IAAKA,EACLE,MAAOA,EAEP+B,OAAQA,EACRoC,OAAQA,EACRC,YAAaA,GAHR,GAAKtE,EAAI4L,EAAI5L,EAAI6L,EAAI3L,EAAMG,aANhD,2BAAoC,IAHjC,8BAgBH,IAAM4a,EAAa,GAUnB,OATAhS,EAAYvG,SAAQ,YAAoB,IAAD,mBAAjB1C,EAAiB,KAAZiC,EAAY,KACnCgZ,EAAWjc,KAAK,cAAC8b,EAAD,CAChBzW,OAAQA,EACRrE,IAAKA,EACLS,KAAMA,EACN6D,YAAaA,EACbrC,OAAQA,QAIR,cAACoV,EAAA,EAAD,CAAWlE,MAAO,CAAElR,OAAQyU,GAA5B,SACI,eAAC,IAAD,CAAQ9B,OAAM,aAAIC,KAAM,GAAKC,IAAK,KAAQ8B,GAClCsE,UAAW,SAACtS,GACRA,EAAMgM,OAAOsC,OAAOA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAF7D,UAKOP,EAAc,cAACwE,EAAA,EAAD,IAAwB,KACzC,iCACA,4BAAY7V,SAAU,CAAC,GAAI,GAAI,MAC9BgG,EACA2P,U","file":"static/js/main.f1eeebdc.chunk.js","sourcesContent":["class HashMap {\n    map = new Map();\n    get(key){\n        return this.map.get(JSON.stringify(key));\n    }\n    set(key, value){\n        return this.map.set(JSON.stringify(key), value);\n    }\n    delete(key){\n        return this.map.delete(JSON.stringify(key));\n    }\n    has(key){\n      return this.map.has(JSON.stringify(key));\n    }\n    hiveHeight(key) {\n        if (this.map.has(key)) {\n            return this.get(key).length\n        } else {\n            return 0\n        }\n    }\n    hivePush(key, value){\n        if (this.map.has(key)) {\n            return this.map.get(key).push(value)\n        } else {\n            return this.map.set(key, [value])\n        }\n    }\n    hivePop(key){\n        let arr = this.map.get(key)\n        const res = arr.pop()\n        if (arr.length === 0) {\n            this.map.delete(key)\n        }\n        return res\n    }\n    keys() {\n        return Array.from(this.map.keys()).map(k => JSON.parse(k))\n    }\n}\nclass HashSet {\n    set: Set<string> = new Set();\n    add(value) {\n        return this.set.add(JSON.stringify(value));\n    }\n    has(value) {\n      return this.set.has(JSON.stringify(value));\n    }\n    values() {\n      return Array.from(this.set.values()).map(val => JSON.parse(val))\n    }\n}\n\nexport {HashMap, HashSet}","import Insect from './insects';\nimport Team from './teams';\nimport Stone from './stone';\nimport * as HEX from '../hexlib';\nimport { HashMap, HashSet } from '../hashmap';\n\n\nexport class Hive {\n    map: HashMap;\n    root: HEX.Hex;\n    constructor() {\n        this.map = new HashMap();\n    }\n    at(hex: HEX.Hex) {\n        const ar = this.map.get(hex)\n        return ar[ar.length - 1]\n    }\n\n    removeStone(hex: HEX.Hex) {\n        this.map.get(hex).pop()\n        if (!this.map.get(hex).length) {\n            this.map.delete(hex)\n        }\n    }\n\n    addStone(hex: HEX.Hex, stone: Stone) {\n        this.root = hex\n        if (!this.map.has(hex)) this.map.set(hex, [stone])\n        else this.map.get(hex).push(stone)\n    }\n\n    gameResult(): Array<boolean> {\n        let whiteLost = false\n        let blackLost = false\n        for (const hex of this.map.keys()) {\n            const stone = this.map.get(hex)[0]\n            if (stone.insect === Insect.BEE) {\n                if (this.neighbors(hex).length === 6) {\n                    if (stone.team === Team.WHITE) whiteLost = true\n                    else blackLost = true\n                }\n            }\n        }\n        return [whiteLost, blackLost];\n    }\n\n    neighbors(hex: HEX.Hex): Array<HEX.Hex> {\n        return HEX.hex_neighbors(hex).filter(n => this.map.has(n))\n    }\n    height(hex: HEX.Hex): number {\n        if (this.map.has(hex)) return this.map.get(hex).length\n        return 0\n    }\n    generateSingleWalks(hex: HEX.Hex, ignore=null): Array<HEX.Hex> {\n        let result = []\n        for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n            if (this.map.has(b)) continue\n            if (ignore === null) {\n                if (this.map.has(a) !== this.map.has(c)) result.push(b)\n            } else {\n                // ignore was probably not working because object comparison\n                if ((this.map.has(a) && !HEX.hex_compare(a, ignore)) !== (this.map.has(c) && !HEX.hex_compare(c, ignore))) {      result.push(b)\n                }\n            }\n        }\n        return result\n    }\n    generateWalks(start: HEX.Hex, target=-1): Array<HEX.Hex> {\n        let visited = new HashSet()\n        let distance = new HashMap()\n        let queue = []\n        let result = []\n        queue.push(start)\n        distance.set(start, 0)\n        while (queue.length) {\n            const vertex = queue.shift()\n            visited.add(vertex)\n            for (const n of this.generateSingleWalks(vertex, start)) {\n                if (visited.has(n)) continue\n                distance.set(n, distance.get(vertex) + 1)\n                queue.push(n)\n            }\n            if (target === -1 && !HEX.hex_compare(vertex, start)) {\n              result.push(vertex)\n            } else {\n                let d = distance.get(vertex)\n                if (d > target) continue\n                if (d === target) result.push(vertex)\n            }\n            \n        }\n        return result\n    }\n    generateSpiderWalks(hex: HEX.Hex): Array<HEX.Hex> {\n        return this.generateWalks(hex, 3)\n    }\n    generateJumps(hex: HEX.Hex): Array<HEX.Hex> {\n        let result = []\n        for (const offset of HEX.hex_directions) {\n            if (this.map.has(HEX.hex_add(hex, offset))) {\n                let i = 2\n                while (this.map.has(HEX.hex_add(hex, HEX.hex_scale(offset,i)))) i++\n                result.push(HEX.hex_add(hex, HEX.hex_scale(offset,i)))\n            }\n        }\n        return result\n    }\n    generateClimbs(hex: HEX.Hex): Array<HEX.Hex> {\n        let result = []\n        let hh = this.height(hex)\n        if (hh > 1) {\n            for (const [a, b, c] of HEX.hex_circle_iterator(hex)){\n                if (this.height(b) < hh) {\n                    if ((this.height(a) < hh) || (this.height(c) < hh)) result.push(b)\n                }\n            }\n        } else result.concat(this.generateSingleWalks(hex))\n        for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n            let ha = this.height(a)\n            let hb = this.height(b)\n            let hc = this.height(c)\n            if ((hb >= hh) && !(ha > hh && hc > hh)) result.push(b)\n        }\n        return result\n    }\n\n    _checkNeighborTeam(hex: HEX.Hex, team: Team): boolean {\n        return this.neighbors(hex).every(n => this.at(n).team === team)\n    }\n    generateDrops(team: Team): Array<HEX.Hex> {\n        let candidates = new HashSet()\n        for (const hex of this.map.keys()) {\n            HEX.hex_neighbors(hex)\n              .filter(e => !this.map.has(e))\n              .forEach(e => candidates.add(e))\n        }\n        const dropos: HEX.Hex[] = candidates.values()\n        return dropos.filter(e => this._checkNeighborTeam(e, team))\n    }\n\n    _oneHive(): HashSet {\n        let lowLink = new HashMap()\n        let visited = new HashSet()\n        let index = new HashMap()\n        let articulation_points = new HashSet()\n        const dfs = (node: HEX.Hex, parent: HEX.Hex, counter: number) => {\n            visited.add(node)\n            counter++\n            index.set(node, counter)\n            lowLink.set(node, counter)\n            let children = 0\n            for (const n of this.neighbors(node)) {\n                if (parent && HEX.hex_compare(n, parent)) continue\n                if (visited.has(n)) lowLink.set(node, Math.min(lowLink.get(node), index.get(n)))\n                else {\n                    dfs(n, node, counter)\n                    lowLink.set(node, Math.min(lowLink.get(node), lowLink.get(n)))\n                    if (lowLink.get(n) >= index.get(node) && parent !== null) articulation_points.add(node)\n                    children++\n                }\n            }\n            if (parent === null && children >= 2) articulation_points.add(node)\n        }\n        // Need call because otherwise this is not bound in the nested function>\n        if (this.root !== undefined) dfs.call(this, this.root, null, 0)\n        return articulation_points\n    }\n\n    generateMovesFrom(hex: HEX.Hex): Array<HEX.Hex> {\n        // insects.BEE ... instead of 0 ... causes error. Why?\n        //\n        if (this.map.has(hex)) {\n            const moveMap = new Map([\n                [Insect.BEE, this.generateSingleWalks],\n                [Insect.SPIDER, this.generateSpiderWalks],\n                [Insect.ANT, this.generateWalks],\n                [Insect.GRASSHOPPER, this.generateJumps],\n                [Insect.BEETLE, this.generateClimbs]\n            ]);\n            return moveMap.get(this.at(hex).insect).call(this, hex)\n        } else {\n            console.log(`Cannot generate moves: no stones at ${hex}`)\n            return [];\n        }\n    }\n\n    generateMoves(team: Team): Array<Array<HEX.Hex>> {\n        let result = []\n        const articulation_points = this._oneHive()\n        for (const hex of this.map.keys()) {\n            if (this.at(hex).team === team) {\n                if (this.height(hex) > 1 || !articulation_points.has(hex)) {\n                    this.generateMovesFrom(hex).forEach((dest) => {\n                        result.push([hex, dest])\n                    })\n                }\n            }\n        }\n        return result\n    }\n}\n","import { useRef, useState, Suspense } from 'react'\nimport { useSpring, animated } from '@react-spring/three'\n\nimport * as HEX from '../../shared/hexlib'\nimport { GLTFModel } from './GLTFModel'\nimport Team from '../../shared/model/teams'\n\nexport default function Stone({stone, layout=HEX.layoutFlat, hex, handleClick=()=>{}, height=0}) {\n    const teamColor = stone.team === Team.WHITE ? 'red' : 'blue';\n    const mesh = useRef(null);\n    const [hovered, setHover] = useState(false)\n    const { x, y } = HEX.hex_to_pixel(layout, hex);\n    const orientation = layout.orientation;\n\n    const spring = useSpring({\n        color: hovered ? 'grey' : teamColor,\n        rotation: hovered ? [0, Math.PI, 0] : [0, 0, 0]\n    });\n\n    return (\n        <Suspense fallback={null}>\n            <group\n                position={[x, y, height]}\n                rotation={[Math.PI / 2, orientation === HEX.orientation_flat ? Math.PI / 6 : 0, 0]}\n                onClick={() => {handleClick(hex)}}\n            >\n                <animated.mesh\n                    position={[0, -.5, 0]}\n                    ref={mesh}\n                    onPointerOver={(event) => setHover(true)}\n                    onPointerOut={(event) => setHover(false)}\n                >\n                    <cylinderBufferGeometry args={[1, 1, 0.25, 6]} />\n                        <animated.meshStandardMaterial color={spring.color} />\n                </animated.mesh>\n                <GLTFModel insect={stone.insect} rotation={spring.rotation} />\n            </group>\n        </Suspense>\n    )\n}\n","// https://docs.pmnd.rs/react-three-fiber/tutorials/loading-models\n\nimport { useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport Insect from '../../shared/model/insects'\n\nimport { animated } from '@react-spring/three'\n\nexport function GLTFModel({insect, ...props}) {\n    const gltf = useLoader(GLTFLoader,`/objects/${insect}/${insect === Insect.BEE ? 'bumblebee' : insect}.gltf` );\n    const scene = gltf.scene.clone();\n    return <animated.primitive object={scene} {...props}/>\n}\n\n\nexport const modelFactory = (insect, ...props) => {\n    return  <GLTFModel insect={insect} {...props} />\n}\n\n","import { Icon, Button, Modal, Container, Header, Form } from 'semantic-ui-react'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport uuid from 'uuid-random';\n\nfunction CreateGameModal({ open, setOpen }) {\n    const [gameMode, setGameMode] = useState('local');\n    const [team, setTeam] = useState('red');\n    const createGame = (location) => {\n        const gid = uuid();\n        if (team === 'random') {\n            setTeam(Math.random() > 0.5 ? 'white' : 'black');\n        }\n        if (gameMode === 'online') {\n            fetch(`/game/${gid}`, {\n                method: 'POST'\n            }).catch( err => console.log(\"Failed to create game\", err))\n        }\n        return {\n            pathname: `/play/${gid}`,\n            search: `?team=${team}&mode=${gameMode}`\n        }\n    }\n    return (\n        <Modal\n            dimmer='blurring'\n            open={open}\n        >\n            <Modal.Header>Create a new Game of Hive</Modal.Header>\n            <Modal.Content>\n                <Container>\n                    <Form>\n                        <Header as=\"h3\">\n                            Play against\n                        </Header>\n                        <Form.Field>\n                            <Button.Group>\n                                <Button onClick={() => setGameMode('local')}>Yourself </Button>\n                                <Button.Or />\n                                <Button onClick={() => setGameMode('ai')}>AI </Button>\n                                <Button.Or />\n                                <Button onClick={() => setGameMode('online')}>Friend </Button>\n                            </Button.Group>\n                        </Form.Field>\n                        <Header as=\"h3\">\n                            Start as\n                        </Header>\n                        <Form.Field >\n                            <Button.Group >\n                                <Button onClick={() => setTeam('white')} color=\"red\">red </Button>\n                                <Button.Or />\n                                <Button onClick={() => setTeam('random')} color=\"violet\">random </Button>\n                                <Button.Or inverted />\n                                <Button onClick={() => setTeam('black')} color=\"blue\">blue </Button>\n                            </Button.Group>\n                        </Form.Field>\n                    </Form>\n                </Container>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button negative onClick={() => setOpen(false)}>\n                    Cancel\n                </Button>\n                <Button positive onClick={() => {\n                    setOpen(false);\n                }} as={Link} \n                to={createGame}>\n                    Create\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}\n\nexport default function CreateGameButton({ content }) {\n    const [createGameModalOpen, setCreateGameModalOpen] = useState(false);\n    return (\n        <>\n            <Button inverted icon labelPosition='left' onClick={() => setCreateGameModalOpen(true)} >\n                <Icon name=\"plus square outline\" />\n                { content }\n            </Button>\n            <CreateGameModal open={createGameModalOpen} setOpen={setCreateGameModalOpen} />\n        </>\n    )\n}\n","import { useState } from 'react'\nimport { Move, Drop } from '../../shared/model/action';\nimport Stone from '../../shared/model/stone';\n\n\nexport function useInteractiveController(submitAction, state): any {\n    const [actionType, setActionType] = useState(null);\n    const [selected, setSelected] = useState(null);\n    const handleBoardClick = (hex) => {\n        if (selected) {\n            const newAction = new actionType.constructor(selected, hex);\n            if (submitAction(newAction)) {\n                setSelected(null);\n                setActionType(null);\n            } else {\n                setSelected(null);\n            }\n        } else {\n            if (state.allowedToMove(hex)) {\n                setActionType(new Move());\n                setSelected(hex);\n            }\n        }\n    }\n    const handleDropClick =  (insect) => {\n        if (state.allowedToDrop(insect)) {\n            setActionType(new Drop());\n            setSelected(new Stone(insect, state.team));\n        } else {\n            setSelected(null);\n        }\n    }\n    const highlighted = selected ? state.getDestinations(actionType, selected) : [];\n    return {\n        highlighted: highlighted,\n        handleBoardClick: handleBoardClick,\n        handleDropClick: handleDropClick\n    }\n}\n","import GenericGame from \"./GenericGame\";\nimport useHiveGame from \"./useHiveGame\";\n\nexport default function LocalGame({ p1, p2 }) {\n    const {state, apply} = useHiveGame();\n\n    const submitAction = (action) => {\n            if (state.isLegal(action)) {\n                apply(action);\n                return true;\n            }\n            return false;\n    };\n\n    const player = ((state.turnNumber % 2 === 0) ? p1 : p2)(submitAction, state)\n    return <GenericGame \n        state={state}\n        controller={player} />\n}\n","\nexport function getColor(team) {\n    // use the enums!\n    if (team === 'black') return 'blue';\n    else if (team === 'white') return 'red';\n    else return 'grey';\n}\nexport function getResult(result) {\n    const whiteLost = result[0];\n    const blackLost = result[1];\n    if (whiteLost && blackLost) {\n        return 'tie';\n    } else if (whiteLost) {\n        return getColor('black') + \" won\";\n    } else if (blackLost) {\n        return getColor('white') + \" won\";\n    } else {\n        return \"undecided\";\n    }\n}\n","import { useState } from 'react';\n\nimport { State } from '../../shared/model/state'\nimport { Action } from '../../shared/model/action';\n\nexport default function useHiveGame() {\n    const [history, setHistory] = useState([]);\n    const [state, setState] = useState(new State());\n    const [index, setIndex] = useState(0);\n\n    const apply = (action: Action) => {\n        history[index] = action;\n        setHistory(history);\n        setState(state.apply(action));\n        setIndex(index + 1);\n    }\n    const undo = () => {\n        const action = history[index]\n        setState(state.undo(action));\n        setIndex(index - 1)\n    }\n    const reset = () => {\n        setHistory([]);\n        setState(new State());\n        setIndex(0);\n    }\n    return {apply, undo, state, reset}\n    \n}\n","import { Button, Modal, Segment, Header } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { getResult } from '../utils/utils'\nimport CreateGameButton from '../components/CreateGameButton'\n\nexport default function GameOverModal({ open, result }) {\n    const resultText = getResult(result);\n    return (\n        <Modal\n            dimmer='blurring'\n            open={open} >\n            <Segment inverted>\n                <Modal.Header>\n                    <Header inverted as='h1'>Game over: {resultText} </Header>\n                </Modal.Header>\n                <hr/>\n                <Modal.Actions>\n                    <CreateGameButton content=\"Play another round\" />\n                    <Button negative as={Link} to='/'>\n                        Leave\n                    </Button>\n                </Modal.Actions>\n            </Segment>\n        </Modal>\n    )\n}\n","import Hive from '../canvas/Hive'\nimport { DropInsectMenu } from '../components/DropInsectMenu'\nimport GameOverModal from '../components/GameOverModal';\n\nexport default function GenericGame({ state, controller }) {\n    const {highlighted, handleBoardClick, handleDropClick} = controller;\n    return (\n            <div>\n                <GameOverModal open={state.gameOver} result={state.result} />\n                <DropInsectMenu\n                    stones={state._stones}\n                    team={state.team}\n                    handleClick={handleDropClick}\n                    allowedToDrop={state.allowedToDrop.bind(state)} />\n                <Hive\n                    hive={state.hive}\n                    handleClick={handleBoardClick}\n                    highlighted={highlighted}\n                    team={state.team} />\n            </div>\n    )\n}","// Generated code -- CC0 -- No Rights Reserved -- http://www.redblobgames.com/grids/hexagons/\n\nexport interface Hex {\n  q: number;\n  r: number;\n  s: number;\n}\nexport function Point(x, y) {\n  return { x: x, y: y };\n}\n// eslint-disable-next-line\nexport function Hex(q:number , r: number, s?: number) {\n  s = - (q + r)\n  if (Math.round(q + r + s) !== 0) throw Error(\"q + r + s must be 0\");\n  return { q: q, r: r, s: s };\n}\n\nexport function hex_compare(a, b) {\n  return a.q === b.q && a.r === b.r\n}\n\nexport function hex_add(a, b) {\n  return Hex(a.q + b.q, a.r + b.r, a.s + b.s);\n}\n\nexport function hex_subtract(a, b) {\n  return Hex(a.q - b.q, a.r - b.r, a.s - b.s);\n}\n\nexport function hex_scale(a, k) {\n  return Hex(a.q * k, a.r * k, a.s * k);\n}\n\nexport function hex_rotate_left(a) {\n  return Hex(-a.s, -a.q, -a.r);\n}\n\nfunction hex_rotate_right(a) {\n  return Hex(-a.r, -a.s, -a.q);\n}\n\nexport const hex_directions = [\n    Hex(1, 0, -1),\n    Hex(1, -1, 0),\n    Hex(0, -1, 1),\n    Hex(-1, 0, 1),\n    Hex(-1, 1, 0),\n    Hex(0, 1, -1)\n];\n\nfunction hex_direction(direction) {\n  return hex_directions[direction];\n}\n\nfunction hex_neighbor(hex, delta) {\n  return hex_add(hex, delta);\n}\n\nexport function hex_neighbors(hex) {\n  return hex_directions.map(d => hex_neighbor(hex, d))\n}\nexport function hex_circle_iterator(hex) {\n  const neighbors = hex_neighbors(hex);\n  let result = [];\n  for (let i = 0; i < 6; i++) {\n    result.push([neighbors[i], neighbors[(i + 1) % 6], neighbors[(i + 2) % 6]]);\n  }\n  return result;\n}\n\nconst hex_diagonals = [\n    Hex(2, -1, -1),\n    Hex(1, -2, 1),\n    Hex(-1, -1, 2),\n    Hex(-2, 1, 1),\n    Hex(-1, 2, -1),\n    Hex(1, 1, -2)\n];\n\nfunction hex_diagonal_neighbor(hex, direction) {\n  return hex_add(hex, hex_diagonals[direction]);\n}\n\nfunction hex_length(hex) {\n  return (Math.abs(hex.q) + Math.abs(hex.r) + Math.abs(hex.s)) / 2;\n}\n\nfunction hex_distance(a, b) {\n  return hex_length(hex_subtract(a, b));\n}\n\nexport function hex_round(h) {\n  let qi = Math.round(h.q);\n  let ri = Math.round(h.r);\n  let si = Math.round(h.s);\n  const q_diff = Math.abs(qi - h.q);\n  const r_diff = Math.abs(ri - h.r);\n  const s_diff = Math.abs(si - h.s);\n  if (q_diff > r_diff && q_diff > s_diff) {\n    qi = -ri - si;\n  }\n  else\n    if (r_diff > s_diff) {\n      ri = -qi - si;\n    }\n    else {\n      si = -qi - ri;\n    }\n  return Hex(qi, ri, si);\n}\n\nfunction hex_lerp(a, b, t) {\n  return Hex(a.q * (1.0 - t) + b.q * t, a.r * (1.0 - t) + b.r * t, a.s * (1.0 - t) + b.s * t);\n}\n\nfunction hex_linedraw(a, b) {\n  const N = hex_distance(a, b);\n  const a_nudge = Hex(a.q + 1e-06, a.r + 1e-06, a.s - 2e-06);\n  const b_nudge = Hex(b.q + 1e-06, b.r + 1e-06, b.s - 2e-06);\n  let results = [];\n  const step = 1.0 / Math.max(N, 1);\n  for (let i = 0; i <= N; i++) {\n    results.push(hex_round(hex_lerp(a_nudge, b_nudge, step * i)));\n  }\n  return results;\n}\n\n\n\n\nfunction OffsetCoord(col, row) {\n  return { col: col, row: row };\n}\n\nconst EVEN = 1;\nconst ODD = -1;\n\nfunction qoffset_from_cube(offset, h) {\n  const col = h.q;\n  const row = h.r + (h.q + offset * (h.q & 1)) / 2;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return OffsetCoord(col, row);\n}\n\nfunction qoffset_to_cube(offset, h) {\n  const q = h.col;\n  const r = h.row - (h.col + offset * (h.col & 1)) / 2;\n  const s = -q - r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return Hex(q, r, s);\n}\n\nfunction roffset_from_cube(offset, h) {\n  const col = h.q + (h.r + offset * (h.r & 1)) / 2;\n  const row = h.r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return OffsetCoord(col, row);\n}\n\nfunction roffset_to_cube(offset, h) {\n  const q = h.col - (h.row + offset * (h.row & 1)) / 2;\n  const r = h.row;\n  const s = -q - r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return Hex(q, r, s);\n}\n\n\n\n\nfunction DoubledCoord(col, row) {\n  return { col: col, row: row };\n}\n\nfunction qdoubled_from_cube(h) {\n  const col = h.q;\n  const row = 2 * h.r + h.q;\n  return DoubledCoord(col, row);\n}\n\nfunction qdoubled_to_cube(h) {\n  const q = h.col;\n  const r = (h.row - h.col) / 2;\n  const s = -q - r;\n  return Hex(q, r, s);\n}\n\nfunction rdoubled_from_cube(h) {\n  const col = 2 * h.q + h.r;\n  const row = h.r;\n  return DoubledCoord(col, row);\n}\n\nfunction rdoubled_to_cube(h) {\n  const q = (h.col - h.row) / 2;\n  const r = h.row;\n  const s = -q - r;\n  return Hex(q, r, s);\n}\n\n\n\n\nexport function Orientation(f0, f1, f2, f3, b0, b1, b2, b3, start_angle) {\n  return { f0: f0, f1: f1, f2: f2, f3: f3, b0: b0, b1: b1, b2: b2, b3: b3, start_angle: start_angle };\n}\n\n\n\n\nexport function Layout(orientation, size, origin) {\n  return { orientation: orientation, size: size, origin: origin };\n}\n\nexport const orientation_pointy = Orientation(Math.sqrt(3.0), Math.sqrt(3.0) / 2.0, 0.0, 3.0 / 2.0, Math.sqrt(3.0) / 3.0, -1.0 / 3.0, 0.0, 2.0 / 3.0, 0.5);\nexport const orientation_flat = Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0), 2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0, 0.0);\n\nexport function hex_to_pixel(layout, h) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const origin = layout.origin;\n  const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\n  const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\n  return Point(x + origin.x, y + origin.y);\n}\n\nexport function pixel_to_hex(layout, p) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const origin = layout.origin;\n  const pt = Point((p.x - origin.x) / size.x, (p.y - origin.y) / size.y);\n  const q = M.b0 * pt.x + M.b1 * pt.y;\n  const r = M.b2 * pt.x + M.b3 * pt.y;\n  return Hex(q, r, -q - r);\n}\n\nexport function hex_corner_offset(layout, corner) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const angle = 2.0 * Math.PI * (M.start_angle - corner) / 6.0;\n  return Point(size.x * Math.cos(angle), size.y * Math.sin(angle));\n}\n\nexport function polygon_corners(layout, h) {\n  let corners = [];\n  const center = hex_to_pixel(layout, h);\n  for (let i = 0; i < 6; i++) {\n    const offset = hex_corner_offset(layout, i);\n    corners.push(Point(center.x + offset.x, center.y + offset.y));\n  }\n  return corners;\n}\n\nexport const layoutFlat = Layout(orientation_flat, Point(1, 1), Point(0, 0))\nexport const layoutPointy = Layout(orientation_pointy, Point(1, 1), Point(0, 0))\n\n\n// Tests\n\nfunction complain(name) {\n  console.log(\"FAIL\", name);\n}\n\nfunction equal_hex(name, a, b) {\n  if (!(a.q === b.q && a.s === b.s && a.r === b.r)) {\n    complain(name);\n  }\n}\n\nfunction equal_offsetcoord(name, a, b) {\n  if (!(a.col === b.col && a.row === b.row)) {\n    complain(name);\n  }\n}\n\nfunction equal_doubledcoord(name, a, b) {\n  if (!(a.col === b.col && a.row === b.row)) {\n    complain(name);\n  }\n}\n\nfunction equal_int(name, a, b) {\n  if (!(a === b)) {\n    complain(name);\n  }\n}\n\nfunction equal_hex_array(name, a, b) {\n  equal_int(name, a.length, b.length);\n  for (let i = 0; i < a.length; i++) {\n    equal_hex(name, a[i], b[i]);\n  }\n}\n\nfunction test_hex_arithmetic() {\n  equal_hex(\"hex_add\", Hex(4, -10, 6), hex_add(Hex(1, -3, 2), Hex(3, -7, 4)));\n  equal_hex(\"hex_subtract\", Hex(-2, 4, -2), hex_subtract(Hex(1, -3, 2), Hex(3, -7, 4)));\n}\n\nfunction test_hex_direction() {\n  equal_hex(\"hex_direction\", Hex(0, -1, 1), hex_direction(2));\n}\n\nfunction test_hex_diagonal() {\n  equal_hex(\"hex_diagonal\", Hex(-1, -1, 2), hex_diagonal_neighbor(Hex(1, -2, 1), 3));\n}\n\nfunction test_hex_distance() {\n  equal_int(\"hex_distance\", 7, hex_distance(Hex(3, -7, 4), Hex(0, 0, 0)));\n}\n\nfunction test_hex_rotate_right() {\n  equal_hex(\"hex_rotate_right\", hex_rotate_right(Hex(1, -3, 2)), Hex(3, -2, -1));\n}\n\nfunction test_hex_rotate_left() {\n  equal_hex(\"hex_rotate_left\", hex_rotate_left(Hex(1, -3, 2)), Hex(-2, -1, 3));\n}\n\nfunction test_hex_round() {\n  const a = Hex(0.0, 0.0, 0.0);\n  const b = Hex(1.0, -1.0, 0.0);\n  const c = Hex(0.0, -1.0, 1.0);\n  equal_hex(\"hex_round 1\", Hex(5, -10, 5), hex_round(hex_lerp(Hex(0.0, 0.0, 0.0), Hex(10.0, -20.0, 10.0), 0.5)));\n  equal_hex(\"hex_round 2\", hex_round(a), hex_round(hex_lerp(a, b, 0.499)));\n  equal_hex(\"hex_round 3\", hex_round(b), hex_round(hex_lerp(a, b, 0.501)));\n  equal_hex(\"hex_round 4\", hex_round(a), hex_round(Hex(a.q * 0.4 + b.q * 0.3 + c.q * 0.3, a.r * 0.4 + b.r * 0.3 + c.r * 0.3, a.s * 0.4 + b.s * 0.3 + c.s * 0.3)));\n  equal_hex(\"hex_round 5\", hex_round(c), hex_round(Hex(a.q * 0.3 + b.q * 0.3 + c.q * 0.4, a.r * 0.3 + b.r * 0.3 + c.r * 0.4, a.s * 0.3 + b.s * 0.3 + c.s * 0.4)));\n}\n\nfunction test_hex_linedraw() {\n  equal_hex_array(\"hex_linedraw\", [Hex(0, 0, 0), Hex(0, -1, 1), Hex(0, -2, 2), Hex(1, -3, 2), Hex(1, -4, 3), Hex(1, -5, 4)], hex_linedraw(Hex(0, 0, 0), Hex(1, -5, 4)));\n}\n\nfunction test_layout() {\n  const h = Hex(3, 4, -7);\n  const flat = Layout(orientation_flat, Point(10.0, 15.0), Point(35.0, 71.0));\n  equal_hex(\"layout\", h, hex_round(pixel_to_hex(flat, hex_to_pixel(flat, h))));\n  const pointy = Layout(orientation_pointy, Point(10.0, 15.0), Point(35.0, 71.0));\n  equal_hex(\"layout\", h, hex_round(pixel_to_hex(pointy, hex_to_pixel(pointy, h))));\n}\n\nfunction test_offset_roundtrip() {\n  const a = Hex(3, 4, -7);\n  const b = OffsetCoord(1, -3);\n  equal_hex(\"conversion_roundtrip even-q\", a, qoffset_to_cube(EVEN, qoffset_from_cube(EVEN, a)));\n  equal_offsetcoord(\"conversion_roundtrip even-q\", b, qoffset_from_cube(EVEN, qoffset_to_cube(EVEN, b)));\n  equal_hex(\"conversion_roundtrip odd-q\", a, qoffset_to_cube(ODD, qoffset_from_cube(ODD, a)));\n  equal_offsetcoord(\"conversion_roundtrip odd-q\", b, qoffset_from_cube(ODD, qoffset_to_cube(ODD, b)));\n  equal_hex(\"conversion_roundtrip even-r\", a, roffset_to_cube(EVEN, roffset_from_cube(EVEN, a)));\n  equal_offsetcoord(\"conversion_roundtrip even-r\", b, roffset_from_cube(EVEN, roffset_to_cube(EVEN, b)));\n  equal_hex(\"conversion_roundtrip odd-r\", a, roffset_to_cube(ODD, roffset_from_cube(ODD, a)));\n  equal_offsetcoord(\"conversion_roundtrip odd-r\", b, roffset_from_cube(ODD, roffset_to_cube(ODD, b)));\n}\n\nfunction test_offset_from_cube() {\n  equal_offsetcoord(\"offset_from_cube even-q\", OffsetCoord(1, 3), qoffset_from_cube(EVEN, Hex(1, 2, -3)));\n  equal_offsetcoord(\"offset_from_cube odd-q\", OffsetCoord(1, 2), qoffset_from_cube(ODD, Hex(1, 2, -3)));\n}\n\nfunction test_offset_to_cube() {\n  equal_hex(\"offset_to_cube even-\", Hex(1, 2, -3), qoffset_to_cube(EVEN, OffsetCoord(1, 3)));\n  equal_hex(\"offset_to_cube odd-q\", Hex(1, 2, -3), qoffset_to_cube(ODD, OffsetCoord(1, 2)));\n}\n\nfunction test_doubled_roundtrip() {\n  const a = Hex(3, 4, -7);\n  const b = DoubledCoord(1, -3);\n  equal_hex(\"conversion_roundtrip doubled-q\", a, qdoubled_to_cube(qdoubled_from_cube(a)));\n  equal_doubledcoord(\"conversion_roundtrip doubled-q\", b, qdoubled_from_cube(qdoubled_to_cube(b)));\n  equal_hex(\"conversion_roundtrip doubled-r\", a, rdoubled_to_cube(rdoubled_from_cube(a)));\n  equal_doubledcoord(\"conversion_roundtrip doubled-r\", b, rdoubled_from_cube(rdoubled_to_cube(b)));\n}\n\nfunction test_doubled_from_cube() {\n  equal_doubledcoord(\"doubled_from_cube doubled-q\", DoubledCoord(1, 5), qdoubled_from_cube(Hex(1, 2, -3)));\n  equal_doubledcoord(\"doubled_from_cube doubled-r\", DoubledCoord(4, 2), rdoubled_from_cube(Hex(1, 2, -3)));\n}\n\nfunction test_doubled_to_cube() {\n  equal_hex(\"doubled_to_cube doubled-q\", Hex(1, 2, -3), qdoubled_to_cube(DoubledCoord(1, 5)));\n  equal_hex(\"doubled_to_cube doubled-r\", Hex(1, 2, -3), rdoubled_to_cube(DoubledCoord(4, 2)));\n}\n\nfunction test_all() {\n  test_hex_arithmetic();\n  test_hex_direction();\n  test_hex_diagonal();\n  test_hex_distance();\n  test_hex_rotate_right();\n  test_hex_rotate_left();\n  test_hex_round();\n  test_hex_linedraw();\n  test_layout();\n  test_offset_roundtrip();\n  test_offset_from_cube();\n  test_offset_to_cube();\n  test_doubled_roundtrip();\n  test_doubled_from_cube();\n  test_doubled_to_cube();\n}\n\n\n\ntest_all()\n\n// Exports for node/browserify modules:\n\n","enum Insect {\n    BEE = 'bee',\n    SPIDER = 'spider',\n    ANT = 'ant',\n    GRASSHOPPER = 'grasshopper',\n    BEETLE = 'beetle',\n}\n\nexport default Insect;\n","import { useRef, useEffect } from 'react'\n\nconst useCanvas = (draw, options={fps: 20}) => {\n\n    const canvasRef = useRef(null)\n    const fps = options.fps;\n\n    useEffect(() => {\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        let frameCount = 0\n        let animationFrameId\n        const render = () => {\n            frameCount++\n            draw(context, frameCount)\n            resizeCanvasToDisplaySize(canvas);\n            resizeCanvas(canvas);\n            setTimeout(() => {\n                animationFrameId = window.requestAnimationFrame(render);\n            }, 1000 / fps);\n        }\n        render()\n        return () => {\n            window.cancelAnimationFrame(animationFrameId)\n        }\n    }, [draw])\n    return canvasRef\n}\nexport default useCanvas\n\nfunction resizeCanvas(canvas) {\n    const { width, height } = canvas.getBoundingClientRect()\n\n    if (canvas.width !== width || canvas.height !== height) {\n        const { devicePixelRatio:ratio=1 } = window\n        const context = canvas.getContext('2d')\n        canvas.width = width*ratio\n        canvas.height = height*ratio\n        context.scale(ratio, ratio)\n        return true\n    }\n\n    return false\n}\nfunction resizeCanvasToDisplaySize(canvas) {\n\n    const { width, height } = canvas.getBoundingClientRect()\n\n    if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width\n      canvas.height = height\n      return true // here you can return some usefull information like delta width and delta height instead of just true\n      // this information can be used in the next redraw...\n    }\n\n    return false\n  }\n","import useCanvas from './useCanvas'\n\nconst Canvas = props => {\n    const { draw } = props;\n    const canvasRef = useCanvas(draw, {fps: 3});\n    return <canvas ref={canvasRef} style={{\n       width: \"100%\",\n       height: \"100%\",\n       display: \"block\",\n       position: \"absolute\",\n       top: 0,\n       left: 0,\n       zIndex: -9999}} />\n}\n\nexport default Canvas\n","import Canvas from './Canvas'\nimport * as HEX from '../../shared/hexlib'\nimport { State } from '../../shared/model/state'\n\n\nconst orientation = HEX.orientation_pointy;\nconst layout = HEX.Layout(orientation, HEX.Point(10, 10), HEX.Point(500, 250))\n\nexport default function BackgroundCanvas() {\n    const state = new State();\n\n    const draw = (ctx, frameCount) => {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        ctx.fillStyle = \"#000000\";\n        state.apply(state.actions[Math.floor(Math.random() * state.actions.length)]);\n        for (const hex of state.hive.map.keys()) {\n            ctx.beginPath()\n            const corners = HEX.polygon_corners(layout, hex);\n            ctx.moveTo(corners[5].x + 50, corners[5].y + 50);\n            corners.forEach( p => {\n                ctx.lineTo(p.x + 50, p.y + 50);\n            })\n            ctx.fill();\n        }\n    }\n    return <Canvas draw={draw} />\n}\n","import { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n\nexport default function GameList( ) {\n    const [games, setGames] = useState([]);\n    useEffect( () => {\n        fetch('/game')\n            .then( resp => resp.json())\n            .then( data => setGames(data))\n            .catch( err => console.log(err))\n    }, [])\n    return (\n        <table>\n            {games.map( gid => {\n                return (\n                <tr key={gid}> \n                    <td> ID: {gid} </td>\n                    <td> <Link to = {{\n                        pathname: `/play/${gid}`,\n                        search: `?p1=remote&p2=local`\n                    }}> JOIN </Link></td>\n                </tr>\n                )\n            })}\n        </table>\n    )\n}","import BackgroundCanvas from '../lab/BackgroundCanvas';\nimport GameList from '../components/GameList';\n\nexport default function WelcomePage () {\n\n    return <div>\n        <h1> Welcome to HiveMind </h1>\n        <GameList />\n        <BackgroundCanvas />\n        </div>\n}\n","import Stone from '../canvas/Stone'\nimport { Canvas } from '@react-three/fiber'\nimport * as HEX from '../../shared/hexlib'\n\nexport default function WelcomeInsect() {\n\n    return (\n        <div style={{ position: \"absolute\", right: 0, height: '30vw' }}>\n            <Canvas camera={{ near: 0.1, far: 100 }} >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                <Stone\n                    hex={HEX.Hex(0, 0)}\n                    stone={ {\"team\": \"white\", \"insect\": \"bee\"}}\n                    />\n            </Canvas>\n        </div>\n    )\n}\n","import WelcomeInsect from '../components/WelcomeInsect';\nimport { Button, Icon } from 'semantic-ui-react'\n\n\nexport default function AboutPage() {\n    return <div>\n            <WelcomeInsect />\n            <a href='https://github.com/gottschali/HiveMind'>\n                <Button color='grey'>\n                    <Icon name='github' /> Github\n                </Button>\n            </a>\n            <iframe src=\"/README.html\" title=\"Readme\" style={{width: \"100%\", height: \"100%\", position: \"absolute\", border: \"none\"}} />\n        </div>\n}\n","import { State } from '../../shared/model/state'\n\nimport { useState } from 'react'\n\nimport Hive from '../canvas/Hive'\n\nconst Wrapped = () => {\n  const [state, setState] = useState(new State());\n  const [counter, setCounter] = useState(0);\n  const [iterationSteps, setIterationSteps] = useState(10);\n  const step = () => {\n    state.step()\n    setCounter(counter + 1);\n  }\n  const reset = () => {\n    setState(new State());\n    setCounter(0);\n  }\n  return (\n    <div>\n      <div>\n        <div> Step: {state.turnNumber}</div>\n        <button onClick={step}> Make a Step </button>\n        <button onClick={reset}> Reset </button>\n        <label>\n          How many automove steps:\n          <input value={iterationSteps} onChange={e => setIterationSteps(e.target.value)}/>\n        </label>\n        <button onClick={() => {\n          for (let i=0;i<iterationSteps;i++) {\n            state.step()\n          }\n          setCounter(counter + iterationSteps);\n\n        }}> AutoPlay </button>\n        <div>\n          Stones: {JSON.stringify(state.stones)}\n        </div>\n      </div>\n      <Hive hive={state.hive} highlighted={[]}/>\n    </div>\n  )\n}\n\nexport default function Test() {\n  return (\n    <Wrapped />\n  )\n}\n","import { useInteractiveController } from '../controllers/interactiveController';\nimport LocalGame from '../game/LocalGame';\n\n\n\nfunction InteractiveRandom() {\n    const p1 = useInteractiveController;\n    const p2 = useInteractiveController;\n    return <LocalGame p1={p1} p2={p2} />\n}\n\n\nexport default InteractiveRandom;","import TestHive from '../lab/TestHive';\nimport TestGame from '../lab/TestGame';\n\nexport default function DebugPage() {\n    return <div>\n                <TestGame />\n                <TestHive />\n            </div>\n}\n","import Hive from '../canvas/Hive'\nimport { State } from '../../shared/model/state'\nimport { Hive as HiveModel } from '../../shared/model/hive'\nimport Stone from '../../shared/model/stone'\nimport Insect from '../../shared/model/insects'\nimport Team from '../../shared/model/teams'\nimport { Drop } from '../../shared/model/action'\nimport TestGame from '../lab/TestGame';\nimport {Hex} from '../../shared/hexlib'\nimport {DropInsectMenuTeam, iconMap} from '../components/DropInsectMenu'\nimport { Button } from 'semantic-ui-react'\n\nexport default function TutorialPage () {\n    // Idea: define terms\n    // Make chapers: click to next page\n    // Boxes for emphasis\n    // Click to expand example\n    // challenges: try to surround the enemy queen / get to this square\n    // restricted games: only allowed to move certain insects\n\n    // Legal drop hexes\n    // When to place the bee\n    // Moving\n    // One hive rule\n    return <div>\n        <h1> Learn how to play! </h1>\n\n        <Introduction />\n        <Dropping />\n        <GoalOfGame />\n        <ExplainBee />\n        <ExplainAnt />\n        <ExplainSpider />\n        <ExplainGrasshopper />\n        <ExplainBeetle />\n\n        <div className=\"ui one column doubling stackable grid container\">\n            <h2> Try everything at once</h2>\n            <TestGame />\n        </div>\n    </div>\n}\n\nfunction TutorialLayout({left, right}) {\n    return <div className=\"ui two column doubling stackable grid container\">\n            <div className=\"column\">\n                {left}\n            </div>\n            <div className=\"column\">\n                {right}\n            </div>\n        </div>\n}\n\nfunction Introduction() {\n    const state = new State();\n    state.apply(new Drop(new Stone(Insect.GRASSHOPPER, Team.WHITE), Hex(0, 0)));\n    state.apply(new Drop(new Stone(Insect.ANT, Team.BLACK), Hex(1, 0)));\n\n    const left = <>\n        <h2> Introduction </h2>\n                Hive is a strategic boardgame for two players (red and blue).\n                Each turn they can either place or move a stone on the board. We will refer to placing an insect as \"dropping\".\n                We will call the stones \"insects\" from now on. Each of the insects\n                has its own set of rules how to move.\n                In the beginning there is void and the starting player can select any of his insects to drop.</>;\n    const right = <Hive hive={state.hive} canvasHeight=\"200px\" interactive={false} cameraOpts={ {position: [0, -1, 2]} } />;\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction Dropping() {\n    const state = new State();\n    state.apply(new Drop(new Stone(Insect.GRASSHOPPER, Team.WHITE), Hex(0, 0)));\n    state.apply(new Drop(new Stone(Insect.ANT, Team.BLACK), Hex(1, 0)));\n    const left = <>\n                <h2> Dropping </h2>\n                <DropInsectMenuTeam stones={state.stones} active={true} />\n                You can select an insect from this menu to drop. Note the numbers denoting how many of each type you still have available.\n            </>;\n    const right = <Hive hive={state.hive}\n                        team={state.team}\n                        highlighted={state.generateDrops().map(h => [h, 0])}\n                      canvasHeight=\"200px\" interactive={false} cameraOpts={ {position: [0, -3, 4]} } />;\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction GoalOfGame() {\n    const hive = new HiveModel();\n    hive.addStone(Hex(0, 0), new Stone(Insect.GRASSHOPPER, Team.WHITE));\n    hive.addStone(Hex(1, 0), new Stone(Insect.BEE, Team.BLACK));\n    hive.addStone(Hex(0, 1), new Stone(Insect.BEE, Team.WHITE));\n    hive.addStone(Hex(1, 1), new Stone(Insect.ANT, Team.BLACK));\n    hive.addStone(Hex(1, -1), new Stone(Insect.SPIDER, Team.WHITE));\n    hive.addStone(Hex(2, 0), new Stone(Insect.BEETLE, Team.BLACK));\n    hive.addStone(Hex(2, -1), new Stone(Insect.ANT, Team.WHITE));\n\n    const left = <>\n                <h2> The Goal of the Game </h2>\n                <p> The goal of the game is to surround the bee <Button color='grey' icon={iconMap[Insect.BEE]} /> of the enemy.\n\n                All six adjacent hexes have to be occupied. </p>\n                <p> In the example the blue player has lost as his bee is completely surrounded.\n                                                                                                          Note that the color of the surrounding insects does not matter. Also the own insects count.\n                                                                                                          It can happen that the bees get surrounded at the same time. In this case it is a draw. </p>\n            </>;\n\n    const right = <Hive hive={hive} canvasHeight=\"200px\" interactive={false} cameraOpts={ {position: [1, 1, 4]} } lookAt={[1, 1, 0]}/>;\n\n\n    return <TutorialLayout left={left} right={right} />\n\n}\n\n\nfunction singleStone(stone) {\n    const hive = new HiveModel();\n    hive.addStone(Hex(0, 0), stone);\n    return  <Hive hive={hive} canvasHeight=\"200px\" interactive={false} cameraOpts={ {position: [0, -1, 1]} } lookAt={[0, 0, 0]}/>;\n}\n\nfunction ExplainBee() {\n    const left = <div>\n        <h1>Bee <Button color='grey' icon={iconMap[Insect.BEE]} /></h1>\n    </div>;\n    const right = singleStone(new Stone(Insect.BEE, Team.WHITE));\n    return <TutorialLayout left={left} right={right} />\n\n}\n\nfunction ExplainAnt() {\n    const left = <h1>Ant <Button color='grey' icon={iconMap[Insect.ANT]} /></h1>;\n    const right = singleStone(new Stone(Insect.ANT, Team.BLACK));\n    return <TutorialLayout left={left} right={right} />\n\n}\n\nfunction ExplainSpider() {\n    const left = <div>\n        <h1>Spider <Button color='grey' icon={iconMap[Insect.SPIDER]} /></h1>\n    </div>;\n    const right = singleStone(new Stone(Insect.SPIDER, Team.WHITE));\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction ExplainGrasshopper() {\n    const left = <div>\n        <h1>Grasshopper <Button color='grey' icon={iconMap[Insect.GRASSHOPPER]} /></h1>\n    </div>;\n    const right = singleStone(new Stone(Insect.GRASSHOPPER, Team.BLACK));\n    return <TutorialLayout left={left} right={right} />\n}\n\n\nfunction ExplainBeetle() {\n    const left = <div>\n        <h1>Beetle <Button color='grey' icon={iconMap[Insect.BEETLE]} /></h1>\n    </div>;\n    const right = singleStone(new Stone(Insect.BEETLE, Team.WHITE));\n    return <TutorialLayout left={left} right={right} />\n}\n","import { Container, Menu, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport {useState} from 'react'\nimport CreateGameButton from '../components/CreateGameButton'\n\nexport default function Layout(props) {\n    const [active, setActive] = useState('Home');\n    const handleClick = (e, {name}) => setActive(name);\n    return (\n        <Container >\n            <Segment inverted>\n                <Menu compact inverted stackable pointing secondary>\n                    <Menu.Item header as={Link} to=\"/debug\" name='HiveMind'>\n                        <img src='/favicon/android-chrome-512x512.png' alt=\"logo\" />\n                    </Menu.Item>\n                    <Menu.Item as={Link} to=\"/\" name='Home' onClick={handleClick} active={active === 'Home'} />\n                    <Menu.Item as={Link} to='/about' name='About' onClick={handleClick} active={active==='About'} />\n                    <Menu.Item name='play'>\n                        <CreateGameButton content=\"Create a game\"/>\n                    </Menu.Item>\n                    <Menu.Item as={Link} to='/play/test' name='Quick Play' onClick={handleClick} active={active==='Quick Play'} />\n                </Menu>\n            </Segment>\n            {props.children}\n\n        </Container>\n    )\n\n}\n","import { lazy, Suspense } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport WelcomePage from './pages/WelcomePage'\nimport AboutPage from './pages/AboutPage'\nimport DebugPage from './pages/DebugPage'\nimport TutorialPage from './pages/TutorialPage'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport Layout from './pages/Layout'\n\nconst GameManager = lazy(() => import('./game/GameManager'))\n\nexport default function App() {\n  return (\n      <Router>\n        <Layout>\n          <Suspense fallback={<div>Loading...</div>} >\n            <Switch>\n              <Route exact path=\"/\" component={WelcomePage} />\n              <Route path=\"/play/:gid\" component={GameManager} />\n              <Route exact path=\"/debug\" component={DebugPage} />\n              <Route exact path=\"/about\" component={AboutPage} />\n              <Route exact path=\"/tutorial\" component={TutorialPage} />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './client/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","enum Team {\n    WHITE = 'white',\n    BLACK = 'black',\n}\n\nexport default Team;\n","import Insect from './insects';\nimport Team from './teams';\n\nexport default class Stone {\n  insect: Insect;\n  team: Team;\n\n  constructor(insect: Insect, team: Team) {\n    this.insect = insect;\n    this.team = team;\n  }\n}\n\n","import { Hex, hex_compare } from '../hexlib';\nimport Stone from './stone';\n\nexport class Move {\n    origin: Hex;\n    destination: Hex;\n\n    constructor(origin?: Hex, destination?: Hex) {\n        this.origin = origin;\n        this.destination = destination;\n    }\n}\n\nexport class Drop {\n    stone: Stone;\n    destination: Hex;\n\n    constructor(stone?: Stone, destination?: Hex) {\n        this.stone = stone;\n        this.destination = destination;\n    }\n}\n\nexport function compareAction(a: Action, b: Action): boolean {\n    if ('origin' in a && 'origin' in b) {\n        return hex_compare(a.origin, b.origin) && hex_compare(a.destination, b.destination)\n    } else if ('stone' in a && 'stone' in b) {\n        return a.stone.team === b.stone.team && a.stone.insect === b.stone.insect && hex_compare(a.destination, b.destination)\n    } else if (b === Pass) return true;\n    else return false;\n}\n\nexport class Pass {};\n\nexport type Action = Drop | Move | Pass;\n","import Insect from \"./insects\";\nimport Stone from \"./stone\";\nimport Team from \"./teams\";\nimport * as HEX from \"../hexlib\";\nimport {Move, Drop, Pass, Action, compareAction} from \"./action\";\nimport {Hive} from \"./hive\";\n\n\nexport class State {\n    hive: Hive;\n    turnNumber: number;\n    _stones: Map<Team, Array<Stone>>;\n    _beeMove: Map<Team, boolean>;\n    _actions: Array<Action>;\n    _surrender: Team\n\n    startingInsects: Array<Insect> = [\n        Insect.BEE,\n        Insect.SPIDER,\n        Insect.SPIDER,\n        Insect.ANT,\n        Insect.ANT,\n        Insect.ANT,\n        Insect.GRASSHOPPER,\n        Insect.GRASSHOPPER,\n        Insect.GRASSHOPPER,\n        Insect.BEETLE,\n        Insect.BEETLE\n    ]\n\n    constructor() {\n        this.hive = new Hive();\n        this.turnNumber = 0;\n        this._beeMove = new Map([\n            [Team.WHITE, false],\n            [Team.BLACK, false]\n        ])\n        this._stones = new Map();\n        for (const team of [Team.WHITE, Team.BLACK]) {\n            this._stones.set(team, this.startingInsects.map(insect => new Stone(insect, team)))\n        }\n    }\n    get stones(): Array<Stone> {\n        return this._stones.get(this.team);\n    }\n\n    get team(): Team {\n        return this.turnNumber % 2 === 0 ? Team.WHITE : Team.BLACK\n    }\n    get gameOver(): boolean {\n        if (this.result.some( (x) => x)) {\n            return true;\n        }\n        return false;\n    }\n    get result(): Array<boolean> {\n        if (this._surrender === Team.WHITE) {\n            return [true, false];\n        } else if (this._surrender === Team.BLACK) {\n            return [false, true];\n        }\n        return this.hive.gameResult()\n    }\n    surrender(team: Team) {\n        this._surrender = team;\n    }\n    get moveAllowed(): boolean {\n        return this._beeMove.get(this.team)\n    }\n    generateDrops(): Array<HEX.Hex> {\n        if (this.turnNumber === 0) return [HEX.Hex(0, 0)];\n        else if (this.turnNumber === 1) return [HEX.Hex(0, -1)];\n        return this.hive.generateDrops(this.team)\n    }\n    _getActions(): Array<Action> {\n        let opts = []\n        const dropStonesForTeam = this.stones.map( stone => stone.insect );\n        const uniqueInsects = new Set(dropStonesForTeam);\n        const dropStones = Array.from(uniqueInsects)\n                                .map(insect => new Stone(insect, this.team));\n        if (this.turnNumber >= 6 && !this.moveAllowed) {\n            // Forced bee drop\n            this.hive.generateDrops(this.team)\n                .forEach(d => opts.push(new Drop(new Stone(Insect.BEE, this.team), d)))\n        } else if (dropStones.length) {\n            // Drops are allowed\n            this.generateDrops()\n                .forEach(dropHex => dropStones\n                    .forEach(dropInsect => opts.push(new Drop(dropInsect, dropHex))))\n        }\n        if (this.moveAllowed) {\n            // Moves allowed\n            this.hive.generateMoves(this.team).forEach(([origin, dest]) => {\n                opts.push(new Move(origin, dest))\n            })\n        }\n        if (opts.length) return opts\n        else return [Pass]\n    }\n    get actions(): Array<Action> {\n        if (!this._actions) this._actions = this._getActions()\n        return this._actions\n    }\n\n    isLegal(action: Action): boolean {\n        const res = this.actions.some(otherAction => compareAction(action, otherAction))\n        return res;\n    }\n    apply(action: Action): State {\n        // No check for legal action!\n        // TODO apparently copying/cloning objects is not trivial in JS\n        // So maybe just create new instance with the data as arguments\n        // let newState = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n        // State is mutable now, apply updates inplace instead of returning a new instance\n        let stone\n        if ('origin' in action) {\n            // Remove the stone from the old position and add it at the new one\n            stone = this.hive.at(action.origin)\n            this.hive.removeStone(action.origin)\n            this.hive.addStone(action.destination, stone)\n        } else if ('stone' in action) {\n            stone = action.stone\n            if (stone.insect === Insect.BEE) {\n                // Update that the bee is dropped\n                this._beeMove.set(this.team, true)\n            }\n            // Remove the dropped stone from the availables and add it to the hive\n            // TODO the stone is not removed because objects do not compare equal for values\n            let index = -1;\n            this.stones.forEach((s, i) => {\n              if (stone.insect === s.insect) index = i\n            })\n            this.stones.splice(index, 1)\n            this.hive.addStone(action.destination, stone)\n        }\n        delete this._actions\n        this.turnNumber++\n        return this;\n    }\n\n    undo(action: Action): State {\n        let stone\n        if ('origin' in action) {\n            // Remove the stone from the new position and add it at the old one\n            stone = this.hive.at(action.destination)\n            this.hive.removeStone(action.destination)\n            this.hive.addStone(action.origin, stone)\n        } else if ('stone' in action) {\n            stone = action.stone\n            if (stone.insect === Insect.BEE) {\n                this._beeMove.set(this.team, false)\n            }\n            this.stones.push(stone);\n            this.hive.removeStone(action.destination);\n        }\n        delete this._actions\n        this.turnNumber--\n        return this;\n    }\n\n    step(policy=randomPolicy): State {\n        return this.apply(policy(this.actions))\n    }\n\n    allowedToMove(hex: HEX.Hex): boolean {\n        // Only needed for Frontend\n        if (this.moveAllowed) {\n            for (const action of this.actions) {\n                if (action instanceof Move) {\n                    if (HEX.hex_compare(action.origin, hex)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    allowedToDrop(insect: Insect): boolean {\n        // Only needed for Fronted\n        for (const action of this.actions) {\n            if (\"stone\" in action) {\n                if (action.stone.insect === insect) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    getDestinations(action: (Move | Drop), src): Array<[HEX.Hex, number]> {\n        let opts = [];\n        if (action instanceof Move) {\n            opts = this.hive.generateMovesFrom(src)\n                .map(h => [h, this.hive.height(h)]);\n        } else if (action instanceof Drop) {\n            opts = this.generateDrops()\n                .map(h => [h, 0]);\n        }\n        return opts;\n    }\n}\n\nfunction randomPolicy(actions: Array<Action>): Action {\n    return actions[Math.floor(Math.random() * actions.length)]\n}\n","import { useRef, Suspense, useState } from 'react'\nimport Team from '../../shared/model/teams'\nimport Insect from '../../shared/model/insects'\nimport { Canvas } from '@react-three/fiber'\nimport { GLTFModel } from '../canvas/GLTFModel'\n\nimport { Button, Container, Label } from 'semantic-ui-react'\n\nimport { useSpring } from '@react-spring/three'\n\n\nexport const iconMap = {\n    beetle: 'bug',\n    bee: 'chess queen',\n    spider: 'chess pawn',\n    grasshopper: 'chess knight',\n    ant: 'chess bishop'\n}\n\nexport function DropInsect({ insect, selected }) {\n    const mesh = useRef<THREE.Mesh>(null!)\n    const { rotation, scale } = useSpring({\n        rotation: selected ? [0, 0, 0] : [Math.PI / 2, 0, 0],\n        scale: selected ? 4 : 2\n    });\n    return (\n        <Suspense fallback={<p> {insect} </p>} >\n            <Canvas >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n\n                <group position={[0, 3, 0]}>\n                    <mesh ref={mesh} >\n                        <boxGeometry args={[4, 4, 1]} />\n                        <meshStandardMaterial transparent opacity={0} />\n                    </mesh>\n                    <GLTFModel\n                        scale={scale}\n                        insect={insect}\n                        rotation={rotation}\n                    />\n                </group>\n            </Canvas>\n        </Suspense>\n    )\n}\n\nexport function DropInsectMenuTeam({ stones, active, handleClick=(insect)=>{}, allowedToDrop = (i) => true }) {\n    // Get the numbers out\n    const [, setSelected] = useState(null);\n    const counts = {};\n    let teamThis;\n    for (const { insect, team } of stones) {\n        teamThis = team;\n        if (counts.hasOwnProperty(insect)) counts[insect]++;\n        else counts[insect] = 1;\n    }\n    return (<>\n        {Array.from(Object.values(Insect)).map((insect, i) => {\n            const count = counts[insect];\n            const isActive = active && allowedToDrop(insect)\n            const color = teamThis === 'white' ? 'red' : 'blue'\n            return (\n                <Button as='div'\n                        key={insect}\n                        disabled={!isActive}\n                        labelPosition='right'\n                        onClick={() => {\n                            handleClick(insect)\n                            setSelected(insect)\n                        }}\n                >\n                    <Button color={color} icon={iconMap[insect]} />\n                    <Label as='a' basic pointing='left'>\n                        {count || 0}\n                    </Label>\n                </Button>\n            )\n        })\n        }\n    </>\n    )\n}\n\nexport function DropInsectMenu({ stones, team, handleClick = () => console.log(\"No click handler given\"), allowedToDrop }) {\n    return (\n        <Container textAlign='center'>\n            <Button.Group size='tiny'>\n                <DropInsectMenuTeam\n                    active={team === Team.BLACK}\n                    stones={stones.get(Team.BLACK)}\n                    handleClick={team === Team.BLACK ? handleClick : () => { }}\n                    allowedToDrop={allowedToDrop}\n                />\n            </Button.Group>\n            <Button.Group size='tiny'>\n                <DropInsectMenuTeam\n                    active={team === Team.WHITE}\n                    stones={stones.get(Team.WHITE)}\n                    handleClick={team === Team.WHITE ? handleClick : () => { }}\n                    allowedToDrop={allowedToDrop}\n                />\n            </Button.Group>\n        </Container>\n    )\n\n}\n","import { useRef, useState } from 'react'\nimport { useSpring, animated } from '@react-spring/three'\n\nimport Team from '../../shared/model/teams'\nimport * as HEX from '../../shared/hexlib'\n\nexport default function HighlightStone({ layout, hex, team, height, handleClick=()=>console.log(\"no Click handler given\") }) {\n    const mesh = useRef(null)\n    const [hovered, setHover] = useState(false)\n    const { opacity } = useSpring({opacity: hovered ? 0.9 : 0.3})\n    const { x, y } = HEX.hex_to_pixel(layout, hex);\n    const orientation = layout.orientation;\n    const color = team === Team.WHITE ? 'red' : 'blue';\n    return (\n                <mesh\n                    position={[x, y, height - .5]}\n                    rotation={[Math.PI / 2, orientation === HEX.orientation_flat ? Math.PI / 6 : 0, 0]}\n                    onClick={() => {handleClick(hex)}}\n                    ref={mesh}\n                    onPointerOver={(event) => setHover(true)}\n                    onPointerOut={(event) => setHover(false)}\n                >\n                    <cylinderBufferGeometry args={[1, 1, 0.25, 6]} />\n                        <animated.meshStandardMaterial color={color} transparent opacity={opacity}/>\n                </mesh>\n    )\n}\n","import { Canvas } from '@react-three/fiber'\nimport { TrackballControls } from '@react-three/drei'\n\nimport * as HEX from '../../shared/hexlib'\n\nimport Stone from './Stone'\nimport HighlightStone from './HighlightStone'\n\nimport { Button, Container } from 'semantic-ui-react'\n\nconst Hive = ({ hive, handleClick=()=>console.log(\"No click handler given\"),\n                highlighted=[],\n                team=null,\n                interactive=true,\n                canvasHeight=\"50vw\",\n                cameraOpts={},\n                lookAt=[0, 0, 0]\n},) => {\n    let stones = [];\n    const layout = HEX.layoutFlat;\n    for (const hex of hive.map.keys()) {\n        hive.map.get(hex).forEach((stone, height) => {\n            stones.push(\n                <Stone\n                    hex={hex}\n                    stone={stone}\n                    key={\"\" + hex.q + hex.r + stone.insect}\n                    height={height}\n                    layout={layout}\n                    handleClick={handleClick} />\n            )\n        });\n    };\n    const highlights = [];\n    highlighted.forEach(([hex, height]) => {\n        highlights.push(<HighlightStone \n        layout={layout}\n        hex={hex}\n        team={team}\n        handleClick={handleClick}\n        height={height}/>);\n    });\n\n    return (\n        <Container style={{ height: canvasHeight}}>\n            <Canvas camera={{ near: 0.1, far: 100, ...cameraOpts }}\n                    onCreated={(state) => {\n                        state.camera.lookAt(lookAt[0], lookAt[1], lookAt[2]);\n                    }}\n            >\n                {  interactive ? <TrackballControls /> : null}\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                {stones}\n                {highlights}\n            </Canvas>\n        </Container>\n    )\n}\n\nexport default Hive;\n"],"sourceRoot":""}