{"version":3,"sources":["shared/hashmap.ts","shared/model/hive.ts","client/game/LocalGame.tsx","client/canvas/GLTFModel.jsx","client/components/CreateGameButton.tsx","client/utils/utils.tsx","client/game/useHiveGame.tsx","client/game/LocalSelfGame.tsx","client/components/GameOverModal.tsx","client/game/GenericGame.tsx","shared/model/insects.ts","shared/hexlib.ts","shared/model/teams.ts","client/pages/WelcomePage.tsx","client/lab/TestHive.js","client/lab/TestGame.tsx","client/pages/DebugPage.tsx","client/pages/TutorialPage.tsx","client/pages/Layout.tsx","client/App.tsx","index.js","shared/model/stone.ts","shared/model/action.ts","client/canvas/Stone.jsx","client/canvas/HighlightStone.jsx","client/canvas/Hive.tsx","client/components/DropInsectMenu.tsx","shared/model/state.ts","client/controllers/interactiveController.ts"],"names":["HashMap","map","this","Map","key","get","JSON","stringify","value","set","delete","has","keys","parse","HashSet","Set","add","values","Hive","root","hex","ar","length","pop","stone","push","whiteLost","blackLost","insect","Insect","BEE","neighbors","team","Team","WHITE","HEX","filter","n","ignore","result","a","b","c","start","target","visited","distance","queue","vertex","shift","generateSingleWalks","d","generateWalks","offset","i","hh","height","concat","ha","hb","hc","every","at","candidates","e","forEach","_checkNeighborTeam","lowLink","index","articulation_points","undefined","dfs","node","parent","counter","children","Math","min","call","SPIDER","generateSpiderWalks","ANT","GRASSHOPPER","generateJumps","BEETLE","generateClimbs","_oneHive","generateMovesFrom","dest","LocalGame","p1","p2","useHiveGame","state","apply","player","turnNumber","action","isLegal","controller","GLTFModel","props","scene","useLoader","GLTFLoader","clone","primitive","object","CreateGameModal","open","setOpen","useState","gameMode","setGameMode","setTeam","dimmer","Header","Content","as","Field","Group","onClick","Or","color","inverted","Actions","negative","positive","Link","to","location","gid","uuid","fetch","method","catch","err","console","log","pathname","search","CreateGameButton","content","createGameModalOpen","setCreateGameModalOpen","icon","labelPosition","name","getColor","getResult","history","setHistory","State","setState","setIndex","undo","reset","InteractiveRandom","useInteractiveController","GameOverModal","resultText","Modal","Segment","Button","GenericGame","highlighted","handleBoardClick","handleDropClick","gameOver","DropInsectMenu","stones","_stones","handleClick","allowedToDrop","bind","hive","Point","x","y","Hex","q","r","s","round","Error","hex_compare","hex_add","hex_subtract","hex_scale","k","hex_directions","hex_neighbors","delta","hex_neighbor","hex_circle_iterator","hex_diagonals","hex_distance","abs","hex_round","h","qi","ri","si","q_diff","r_diff","s_diff","hex_lerp","t","OffsetCoord","col","row","ODD","qoffset_from_cube","qoffset_to_cube","roffset_from_cube","roffset_to_cube","DoubledCoord","qdoubled_from_cube","qdoubled_to_cube","rdoubled_from_cube","rdoubled_to_cube","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","Layout","orientation","size","origin","orientation_pointy","sqrt","orientation_flat","hex_to_pixel","layout","M","pixel_to_hex","p","pt","layoutFlat","complain","equal_hex","equal_offsetcoord","equal_doubledcoord","equal_int","test_hex_direction","test_hex_diagonal","test_hex_rotate_right","test_hex_rotate_left","test_hex_linedraw","equal_hex_array","N","a_nudge","b_nudge","results","step","max","hex_linedraw","test_hex_round","flat","pointy","test_layout","test_offset_roundtrip","test_doubled_roundtrip","WelcomePage","href","Icon","Wrapped","setCounter","iterationSteps","setIterationSteps","onChange","Test","DebugPage","TestGame","TutorialPage","Introduction","GoalOfGame","Dropping","ExplainBee","ExplainAnt","ExplainSpider","ExplainGrasshopper","ExplainBeetle","ExplainOneHive","className","LocalSelfGame","TutorialLayout","left","right","Drop","Stone","BLACK","canvasHeight","interactive","cameraOpts","position","Label","attached","active","generateDrops","HiveModel","addStone","iconMap","lookAt","singleStone","setActive","Container","Menu","compact","stackable","pointing","secondary","Item","header","src","alt","GameManager","lazy","App","fallback","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","Action","deserializeAction","json","destination","Move","Pass","PassAction","teamColor","mesh","useRef","hovered","setHover","spring","useSpring","rotation","PI","onPointerDown","ref","onPointerOver","event","onPointerOut","args","meshStandardMaterial","HighlightStone","opacity","transparent","highlights","style","camera","near","far","onCreated","TrackballControls","beetle","bee","spider","grasshopper","ant","DropInsectMenuTeam","teamThis","setSelected","counts","hasOwnProperty","Array","from","Object","count","isActive","disabled","basic","textAlign","_beeMove","_actions","_surrender","startingInsects","some","gameResult","opts","dropStonesForTeam","uniqueInsects","dropStones","moveAllowed","dropHex","dropInsect","generateMoves","_getActions","actions","otherAction","compareTo","removeStone","splice","policy","randomPolicy","floor","random","submitAction","actionType","setActionType","selected","getDestinations","newAction","constructor","allowedToMove"],"mappings":"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","file":"static/js/main.50752bd7.chunk.js","sourcesContent":["export class HashMap<K, V> {\n    private map: Map<string, V>;\n\n    constructor() {\n        this.map = new Map<string, V>();\n    }\n\n    get(key: K): V {\n        return this.map.get(JSON.stringify(key));\n    }\n\n    set(key: K, value: V) {\n        return this.map.set(JSON.stringify(key), value);\n    }\n\n    delete(key: K) {\n        return this.map.delete(JSON.stringify(key));\n    }\n\n    has(key: K) {\n        return this.map.has(JSON.stringify(key));\n    }\n\n    *keys(): Generator<K> {\n        for (const key of this.map.keys()) {\n            yield JSON.parse(key);\n        }\n    }\n}\nexport class HashSet<V> {\n    private set: Set<string> = new Set();\n    add(value: V) {\n        return this.set.add(JSON.stringify(value));\n    }\n    has(value: V) {\n        return this.set.has(JSON.stringify(value));\n    }\n    *values(): Generator<V> {\n        for (const value of this.set.values()) {\n            yield JSON.parse(value);\n        }\n    }\n}\n\n","import Insect from './insects';\nimport Team from './teams';\nimport Stone from './stone';\nimport * as HEX from '../hexlib';\nimport { HashMap, HashSet } from '../hashmap';\n\n\nexport class Hive {\n    map: HashMap<HEX.Hex, Array<Stone>>; // Should be maybe made private and only allowed read only copies to the outside\n    private root: HEX.Hex;\n\n    constructor() {\n        this.map = new HashMap();\n    }\n\n    at(hex: HEX.Hex) {\n        const ar = this.map.get(hex)\n        return ar[ar.length - 1]\n    }\n\n    removeStone(hex: HEX.Hex) {\n        this.map.get(hex).pop()\n        if (!this.map.get(hex).length) {\n            this.map.delete(hex)\n        }\n    }\n\n    addStone(hex: HEX.Hex, stone: Stone) {\n        this.root = hex\n        if (!this.map.has(hex)) this.map.set(hex, [stone])\n        else this.map.get(hex).push(stone)\n    }\n\n    gameResult(): Array<boolean> {\n        let whiteLost = false\n        let blackLost = false\n        for (const hex of this.map.keys()) {\n            const stone = this.map.get(hex)[0]\n            if (stone.insect === Insect.BEE) {\n                if (this.neighbors(hex).length === 6) {\n                    if (stone.team === Team.WHITE)\n                        whiteLost = true\n                    else blackLost = true\n                }\n            }\n        }\n        return [whiteLost, blackLost];\n    }\n\n    neighbors(hex: HEX.Hex): Array<HEX.Hex> {\n        return HEX.hex_neighbors(hex).filter(n => this.map.has(n))\n    }\n\n    height(hex: HEX.Hex): number {\n        if (this.map.has(hex)) {\n            return this.map.get(hex).length\n        }\n        return 0\n    }\n\n    generateSingleWalks(hex: HEX.Hex, ignore = null): Array<HEX.Hex> {\n        let result = []\n        for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n            if (this.map.has(b)) continue\n            if (ignore === null) {\n                if (this.map.has(a) !== this.map.has(c)) result.push(b)\n            } else {\n                // ignore was probably not working because object comparison\n                if ((this.map.has(a) && !HEX.hex_compare(a, ignore)) !== (this.map.has(c) && !HEX.hex_compare(c, ignore))) {\n                    result.push(b)\n                }\n            }\n        }\n        return result\n    }\n    generateWalks(start: HEX.Hex, target = -1): Array<HEX.Hex> {\n        let visited = new HashSet<HEX.Hex>()\n        let distance = new HashMap<HEX.Hex, number>()\n        let queue = []\n        let result = []\n        queue.push(start)\n        distance.set(start, 0)\n        while (queue.length) {\n            const vertex = queue.shift()\n            visited.add(vertex)\n            for (const n of this.generateSingleWalks(vertex, start)) {\n                if (visited.has(n)) continue\n                distance.set(n, distance.get(vertex) + 1)\n                queue.push(n)\n            }\n            if (target === -1 && !HEX.hex_compare(vertex, start)) {\n                result.push(vertex)\n            } else {\n                let d = distance.get(vertex)\n                if (d > target) continue\n                if (d === target) result.push(vertex)\n            }\n\n        }\n        return result\n    }\n    generateSpiderWalks(hex: HEX.Hex): Array<HEX.Hex> {\n        return this.generateWalks(hex, 3)\n    }\n    generateJumps(hex: HEX.Hex): Array<HEX.Hex> {\n        let result = []\n        for (const offset of HEX.hex_directions) {\n            if (this.map.has(HEX.hex_add(hex, offset))) {\n                let i = 2\n                while (this.map.has(HEX.hex_add(hex, HEX.hex_scale(offset, i)))) i++\n                result.push(HEX.hex_add(hex, HEX.hex_scale(offset, i)))\n            }\n        }\n        return result\n    }\n    generateClimbs(hex: HEX.Hex): Array<HEX.Hex> {\n        let result = []\n        let hh = this.height(hex)\n        if (hh > 1) {\n            for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n                if (this.height(b) < hh) {\n                    if ((this.height(a) < hh) || (this.height(c) < hh)) result.push(b)\n                }\n            }\n        } else result.concat(this.generateSingleWalks(hex))\n        for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n            let ha = this.height(a)\n            let hb = this.height(b)\n            let hc = this.height(c)\n            if ((hb >= hh) && !(ha > hh && hc > hh)) result.push(b)\n        }\n        return result\n    }\n\n    _checkNeighborTeam(hex: HEX.Hex, team: Team): boolean {\n        return this.neighbors(hex).every(n => this.at(n).team === team)\n    }\n    generateDrops(team: Team): Array<HEX.Hex> {\n        let candidates = new HashSet<HEX.Hex>()\n        for (const hex of this.map.keys()) {\n            HEX.hex_neighbors(hex)\n                .filter(e => !this.map.has(e))\n                .forEach(e => candidates.add(e))\n        }\n        const drops: HEX.Hex[] = [...candidates.values()];\n        return drops.filter(e => this._checkNeighborTeam(e, team))\n    }\n\n    _oneHive(): HashSet<HEX.Hex> {\n        let lowLink = new HashMap<HEX.Hex, number>()\n        let visited = new HashSet<HEX.Hex>()\n        let index = new HashMap<HEX.Hex, number>()\n        let articulation_points = new HashSet<HEX.Hex>()\n        const dfs = (node: HEX.Hex, parent: HEX.Hex, counter: number) => {\n            visited.add(node)\n            counter++\n            index.set(node, counter)\n            lowLink.set(node, counter)\n            let children = 0\n            for (const n of this.neighbors(node)) {\n                if (parent && HEX.hex_compare(n, parent)) continue\n                if (visited.has(n)) lowLink.set(node, Math.min(lowLink.get(node), index.get(n)))\n                else {\n                    dfs(n, node, counter)\n                    lowLink.set(node, Math.min(lowLink.get(node), lowLink.get(n)))\n                    if (lowLink.get(n) >= index.get(node) && parent !== null) articulation_points.add(node)\n                    children++\n                }\n            }\n            if (parent === null && children >= 2) articulation_points.add(node)\n        }\n        if (this.root !== undefined) {\n            // Need call because otherwise this is not bound in the nested function>\n            dfs.call(this, this.root, null, 0)\n        }\n        return articulation_points\n    }\n\n    generateMovesFrom(hex: HEX.Hex): Array<HEX.Hex> {\n        if (this.map.has(hex)) {\n            const moveMap = new Map([\n                [Insect.BEE, this.generateSingleWalks],\n                [Insect.SPIDER, this.generateSpiderWalks],\n                [Insect.ANT, this.generateWalks],\n                [Insect.GRASSHOPPER, this.generateJumps],\n                [Insect.BEETLE, this.generateClimbs]\n            ]);\n            return moveMap.get(this.at(hex).insect).call(this, hex)\n        } else {\n            // throw new Error(`Cannot generate moves: no stones at ${hex}`);\n            return [];\n        }\n    }\n\n    generateMoves(team: Team): Array<Array<HEX.Hex>> {\n        let result = []\n        const articulation_points = this._oneHive()\n        for (const hex of this.map.keys()) {\n            if (this.at(hex).team === team) {\n                if (this.height(hex) > 1 || !articulation_points.has(hex)) {\n                    this.generateMovesFrom(hex).forEach((dest) => {\n                        result.push([hex, dest])\n                    })\n                }\n            }\n        }\n        return result\n    }\n}\n","import GenericGame from \"./GenericGame\";\nimport useHiveGame from \"./useHiveGame\";\n\nexport default function LocalGame({ p1, p2 }) {\n    const {state, apply} = useHiveGame();\n\n    const submitAction = (action) => {\n            if (state.isLegal(action)) {\n                apply(action);\n                return true;\n            }\n            return false;\n    };\n\n    const player = ((state.turnNumber % 2 === 0) ? p1 : p2)(submitAction, state)\n    return <GenericGame \n        state={state}\n        controller={player} />\n}\n","// https://docs.pmnd.rs/react-three-fiber/tutorials/loading-models\n\nimport { useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport Insect from '../../shared/model/insects'\n\nimport { animated } from '@react-spring/three'\n\nexport function GLTFModel({insect, ...props}) {\n    const gltf = useLoader(GLTFLoader,`/objects/${insect}/${insect === Insect.BEE ? 'bumblebee' : insect}.gltf` );\n    const scene = gltf.scene.clone();\n    return <animated.primitive object={scene} {...props}/>\n}\n\n\nexport const modelFactory = (insect, ...props) => {\n    return  <GLTFModel insect={insect} {...props} />\n}\n\n","import { Icon, Button, Modal, Container, Header, Form } from 'semantic-ui-react'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport uuid from 'uuid-random';\n\nfunction CreateGameModal({ open, setOpen }) {\n    const [gameMode, setGameMode] = useState('local');\n    const [team, setTeam] = useState('red');\n    const createGame = (location) => {\n        const gid = uuid();\n        if (gameMode === 'online') {\n            fetch(`/game/${gid}`, {\n                method: 'POST'\n            }).catch( err => console.log(\"Failed to create game\", err))\n        }\n        // Somehow react complains if the AI goes first.\n        if (gameMode === 'ai') {\n            return {\n                pathname: `/play/${gid}`,\n                search: `?team=white&mode=${gameMode}`\n            }\n        }\n        return {\n            pathname: `/play/${gid}`,\n            search: `?team=${team}&mode=${gameMode}`\n        }\n    }\n    return (\n        <Modal\n            dimmer='blurring'\n            open={open}\n        >\n            <Modal.Header>Create a new Game of Hive</Modal.Header>\n            <Modal.Content>\n                <Container>\n                    <Form>\n                        <Header as=\"h3\">\n                            Play against\n                        </Header>\n                        <Form.Field>\n                            <Button.Group>\n                                <Button onClick={() => setGameMode('local')}>Yourself </Button>\n                                <Button.Or />\n                                <Button onClick={() => setGameMode('ai')}>A very stupid computer </Button>\n                                <Button.Or />\n                                <Button onClick={() => setGameMode('online')}>Friend </Button>\n                            </Button.Group>\n                        </Form.Field>\n                        <Header as=\"h3\">\n                            Start as\n                        </Header>\n                        <Form.Field >\n                            <Button.Group >\n                                <Button onClick={() => setTeam('white')} color=\"red\">red </Button>\n                                <Button.Or />\n                                {/*                                 <Button onClick={() => setTeam('random')} color=\"violet\">random </Button> */}\n                                <Button.Or inverted />\n                                <Button onClick={() => setTeam('black')} color=\"blue\">blue </Button>\n                            </Button.Group>\n                        </Form.Field>\n                    </Form>\n                </Container>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button negative onClick={() => setOpen(false)}>\n                    Cancel\n                </Button>\n                <Button positive onClick={() => {\n                    setOpen(false);\n                }} as={Link} \n                to={createGame}>\n                    Create\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}\n\nexport default function CreateGameButton({ content }) {\n    const [createGameModalOpen, setCreateGameModalOpen] = useState(false);\n    return (\n        <>\n            <Button inverted icon labelPosition='left' onClick={() => setCreateGameModalOpen(true)} >\n                <Icon name=\"plus square outline\" />\n                { content }\n            </Button>\n            <CreateGameModal open={createGameModalOpen} setOpen={setCreateGameModalOpen} />\n        </>\n    )\n}\n","\nexport function getColor(team) {\n    // use the enums!\n    if (team === 'black') return 'blue';\n    else if (team === 'white') return 'red';\n    else return 'grey';\n}\nexport function getResult(result) {\n    const whiteLost = result[0];\n    const blackLost = result[1];\n    if (whiteLost && blackLost) {\n        return 'tie';\n    } else if (whiteLost) {\n        return getColor('black') + \" won\";\n    } else if (blackLost) {\n        return getColor('white') + \" won\";\n    } else {\n        return \"undecided\";\n    }\n}\n","import { useState } from 'react';\n\nimport { State } from '../../shared/model/state'\nimport { Action } from '../../shared/model/action';\n\nexport default function useHiveGame() {\n    const [history, setHistory] = useState([]);\n    const [state, setState] = useState(new State());\n    const [index, setIndex] = useState(0);\n\n    const apply = (action: Action) => {\n        history[index] = action;\n        setHistory(history);\n        setState(state.apply(action));\n        setIndex(index + 1);\n    }\n    const undo = () => {\n        const action = history[index]\n        setState(state.undo(action));\n        setIndex(index - 1)\n    }\n    const reset = () => {\n        setHistory([]);\n        setState(new State());\n        setIndex(0);\n    }\n    return {apply, undo, state, reset}\n    \n}\n","import { useInteractiveController } from '../controllers/interactiveController';\nimport LocalGame from './LocalGame';\n\nexport default function InteractiveRandom() {\n    const p1 = useInteractiveController;\n    const p2 = useInteractiveController;\n    return <LocalGame p1={p1} p2={p2} />\n}\n","import { Button, Modal, Segment, Header } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { getResult } from '../utils/utils'\nimport CreateGameButton from '../components/CreateGameButton'\n\nexport default function GameOverModal({ open, result }) {\n    const resultText = getResult(result);\n    return (\n        <Modal\n            dimmer='blurring'\n            open={open} >\n            <Segment inverted>\n                <Modal.Header>\n                    <Header inverted as='h1'>Game over: {resultText} </Header>\n                </Modal.Header>\n                <hr/>\n                <Modal.Actions>\n                    <CreateGameButton content=\"Play another round\" />\n                    <Button negative as={Link} to='/'>\n                        Leave\n                    </Button>\n                </Modal.Actions>\n            </Segment>\n        </Modal>\n    )\n}\n","import Hive from '../canvas/Hive'\nimport { DropInsectMenu } from '../components/DropInsectMenu'\nimport GameOverModal from '../components/GameOverModal';\n\nexport default function GenericGame({ state, controller }) {\n    const {highlighted, handleBoardClick, handleDropClick} = controller;\n    return (\n            <div>\n                <GameOverModal open={state.gameOver} result={state.result} />\n                <DropInsectMenu\n                    stones={state._stones}\n                    team={state.team}\n                    handleClick={handleDropClick}\n                    allowedToDrop={state.allowedToDrop.bind(state)} />\n                <Hive\n                    hive={state.hive}\n                    handleClick={handleBoardClick}\n                    highlighted={highlighted}\n                    team={state.team} />\n            </div>\n    )\n}","enum Insect {\n    BEE = 'bee',\n    SPIDER = 'spider',\n    ANT = 'ant',\n    GRASSHOPPER = 'grasshopper',\n    BEETLE = 'beetle',\n}\n\nexport default Insect;\n","// Generated code -- CC0 -- No Rights Reserved -- http://www.redblobgames.com/grids/hexagons/\n\nexport interface Hex {\n  q: number;\n  r: number;\n  s: number;\n}\nexport function Point(x, y) {\n  return { x: x, y: y };\n}\n// eslint-disable-next-line\nexport function Hex(q:number , r: number, s?: number) {\n  s = - (q + r)\n  if (Math.round(q + r + s) !== 0) throw Error(\"q + r + s must be 0\");\n  return { q: q, r: r, s: s };\n}\n\nexport function hex_compare(a, b) {\n  return a.q === b.q && a.r === b.r\n}\n\nexport function hex_add(a, b) {\n  return Hex(a.q + b.q, a.r + b.r, a.s + b.s);\n}\n\nexport function hex_subtract(a, b) {\n  return Hex(a.q - b.q, a.r - b.r, a.s - b.s);\n}\n\nexport function hex_scale(a, k) {\n  return Hex(a.q * k, a.r * k, a.s * k);\n}\n\nexport function hex_rotate_left(a) {\n  return Hex(-a.s, -a.q, -a.r);\n}\n\nfunction hex_rotate_right(a) {\n  return Hex(-a.r, -a.s, -a.q);\n}\n\nexport const hex_directions = [\n    Hex(1, 0, -1),\n    Hex(1, -1, 0),\n    Hex(0, -1, 1),\n    Hex(-1, 0, 1),\n    Hex(-1, 1, 0),\n    Hex(0, 1, -1)\n];\n\nfunction hex_direction(direction) {\n  return hex_directions[direction];\n}\n\nfunction hex_neighbor(hex, delta) {\n  return hex_add(hex, delta);\n}\n\nexport function hex_neighbors(hex) {\n  return hex_directions.map(d => hex_neighbor(hex, d))\n}\nexport function hex_circle_iterator(hex) {\n  const neighbors = hex_neighbors(hex);\n  let result = [];\n  for (let i = 0; i < 6; i++) {\n    result.push([neighbors[i], neighbors[(i + 1) % 6], neighbors[(i + 2) % 6]]);\n  }\n  return result;\n}\n\nconst hex_diagonals = [\n    Hex(2, -1, -1),\n    Hex(1, -2, 1),\n    Hex(-1, -1, 2),\n    Hex(-2, 1, 1),\n    Hex(-1, 2, -1),\n    Hex(1, 1, -2)\n];\n\nfunction hex_diagonal_neighbor(hex, direction) {\n  return hex_add(hex, hex_diagonals[direction]);\n}\n\nfunction hex_length(hex) {\n  return (Math.abs(hex.q) + Math.abs(hex.r) + Math.abs(hex.s)) / 2;\n}\n\nfunction hex_distance(a, b) {\n  return hex_length(hex_subtract(a, b));\n}\n\nexport function hex_round(h) {\n  let qi = Math.round(h.q);\n  let ri = Math.round(h.r);\n  let si = Math.round(h.s);\n  const q_diff = Math.abs(qi - h.q);\n  const r_diff = Math.abs(ri - h.r);\n  const s_diff = Math.abs(si - h.s);\n  if (q_diff > r_diff && q_diff > s_diff) {\n    qi = -ri - si;\n  }\n  else\n    if (r_diff > s_diff) {\n      ri = -qi - si;\n    }\n    else {\n      si = -qi - ri;\n    }\n  return Hex(qi, ri, si);\n}\n\nfunction hex_lerp(a, b, t) {\n  return Hex(a.q * (1.0 - t) + b.q * t, a.r * (1.0 - t) + b.r * t, a.s * (1.0 - t) + b.s * t);\n}\n\nfunction hex_linedraw(a, b) {\n  const N = hex_distance(a, b);\n  const a_nudge = Hex(a.q + 1e-06, a.r + 1e-06, a.s - 2e-06);\n  const b_nudge = Hex(b.q + 1e-06, b.r + 1e-06, b.s - 2e-06);\n  let results = [];\n  const step = 1.0 / Math.max(N, 1);\n  for (let i = 0; i <= N; i++) {\n    results.push(hex_round(hex_lerp(a_nudge, b_nudge, step * i)));\n  }\n  return results;\n}\n\n\n\n\nfunction OffsetCoord(col, row) {\n  return { col: col, row: row };\n}\n\nconst EVEN = 1;\nconst ODD = -1;\n\nfunction qoffset_from_cube(offset, h) {\n  const col = h.q;\n  const row = h.r + (h.q + offset * (h.q & 1)) / 2;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return OffsetCoord(col, row);\n}\n\nfunction qoffset_to_cube(offset, h) {\n  const q = h.col;\n  const r = h.row - (h.col + offset * (h.col & 1)) / 2;\n  const s = -q - r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return Hex(q, r, s);\n}\n\nfunction roffset_from_cube(offset, h) {\n  const col = h.q + (h.r + offset * (h.r & 1)) / 2;\n  const row = h.r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return OffsetCoord(col, row);\n}\n\nfunction roffset_to_cube(offset, h) {\n  const q = h.col - (h.row + offset * (h.row & 1)) / 2;\n  const r = h.row;\n  const s = -q - r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return Hex(q, r, s);\n}\n\n\n\n\nfunction DoubledCoord(col, row) {\n  return { col: col, row: row };\n}\n\nfunction qdoubled_from_cube(h) {\n  const col = h.q;\n  const row = 2 * h.r + h.q;\n  return DoubledCoord(col, row);\n}\n\nfunction qdoubled_to_cube(h) {\n  const q = h.col;\n  const r = (h.row - h.col) / 2;\n  const s = -q - r;\n  return Hex(q, r, s);\n}\n\nfunction rdoubled_from_cube(h) {\n  const col = 2 * h.q + h.r;\n  const row = h.r;\n  return DoubledCoord(col, row);\n}\n\nfunction rdoubled_to_cube(h) {\n  const q = (h.col - h.row) / 2;\n  const r = h.row;\n  const s = -q - r;\n  return Hex(q, r, s);\n}\n\n\n\n\nexport function Orientation(f0, f1, f2, f3, b0, b1, b2, b3, start_angle) {\n  return { f0: f0, f1: f1, f2: f2, f3: f3, b0: b0, b1: b1, b2: b2, b3: b3, start_angle: start_angle };\n}\n\n\n\n\nexport function Layout(orientation, size, origin) {\n  return { orientation: orientation, size: size, origin: origin };\n}\n\nexport const orientation_pointy = Orientation(Math.sqrt(3.0), Math.sqrt(3.0) / 2.0, 0.0, 3.0 / 2.0, Math.sqrt(3.0) / 3.0, -1.0 / 3.0, 0.0, 2.0 / 3.0, 0.5);\nexport const orientation_flat = Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0), 2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0, 0.0);\n\nexport function hex_to_pixel(layout, h) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const origin = layout.origin;\n  const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\n  const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\n  return Point(x + origin.x, y + origin.y);\n}\n\nexport function pixel_to_hex(layout, p) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const origin = layout.origin;\n  const pt = Point((p.x - origin.x) / size.x, (p.y - origin.y) / size.y);\n  const q = M.b0 * pt.x + M.b1 * pt.y;\n  const r = M.b2 * pt.x + M.b3 * pt.y;\n  return Hex(q, r, -q - r);\n}\n\nexport function hex_corner_offset(layout, corner) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const angle = 2.0 * Math.PI * (M.start_angle - corner) / 6.0;\n  return Point(size.x * Math.cos(angle), size.y * Math.sin(angle));\n}\n\nexport function polygon_corners(layout, h) {\n  let corners = [];\n  const center = hex_to_pixel(layout, h);\n  for (let i = 0; i < 6; i++) {\n    const offset = hex_corner_offset(layout, i);\n    corners.push(Point(center.x + offset.x, center.y + offset.y));\n  }\n  return corners;\n}\n\nexport const layoutFlat = Layout(orientation_flat, Point(1, 1), Point(0, 0))\nexport const layoutPointy = Layout(orientation_pointy, Point(1, 1), Point(0, 0))\n\n\n// Tests\n\nfunction complain(name) {\n  console.log(\"FAIL\", name);\n}\n\nfunction equal_hex(name, a, b) {\n  if (!(a.q === b.q && a.s === b.s && a.r === b.r)) {\n    complain(name);\n  }\n}\n\nfunction equal_offsetcoord(name, a, b) {\n  if (!(a.col === b.col && a.row === b.row)) {\n    complain(name);\n  }\n}\n\nfunction equal_doubledcoord(name, a, b) {\n  if (!(a.col === b.col && a.row === b.row)) {\n    complain(name);\n  }\n}\n\nfunction equal_int(name, a, b) {\n  if (!(a === b)) {\n    complain(name);\n  }\n}\n\nfunction equal_hex_array(name, a, b) {\n  equal_int(name, a.length, b.length);\n  for (let i = 0; i < a.length; i++) {\n    equal_hex(name, a[i], b[i]);\n  }\n}\n\nfunction test_hex_arithmetic() {\n  equal_hex(\"hex_add\", Hex(4, -10, 6), hex_add(Hex(1, -3, 2), Hex(3, -7, 4)));\n  equal_hex(\"hex_subtract\", Hex(-2, 4, -2), hex_subtract(Hex(1, -3, 2), Hex(3, -7, 4)));\n}\n\nfunction test_hex_direction() {\n  equal_hex(\"hex_direction\", Hex(0, -1, 1), hex_direction(2));\n}\n\nfunction test_hex_diagonal() {\n  equal_hex(\"hex_diagonal\", Hex(-1, -1, 2), hex_diagonal_neighbor(Hex(1, -2, 1), 3));\n}\n\nfunction test_hex_distance() {\n  equal_int(\"hex_distance\", 7, hex_distance(Hex(3, -7, 4), Hex(0, 0, 0)));\n}\n\nfunction test_hex_rotate_right() {\n  equal_hex(\"hex_rotate_right\", hex_rotate_right(Hex(1, -3, 2)), Hex(3, -2, -1));\n}\n\nfunction test_hex_rotate_left() {\n  equal_hex(\"hex_rotate_left\", hex_rotate_left(Hex(1, -3, 2)), Hex(-2, -1, 3));\n}\n\nfunction test_hex_round() {\n  const a = Hex(0.0, 0.0, 0.0);\n  const b = Hex(1.0, -1.0, 0.0);\n  const c = Hex(0.0, -1.0, 1.0);\n  equal_hex(\"hex_round 1\", Hex(5, -10, 5), hex_round(hex_lerp(Hex(0.0, 0.0, 0.0), Hex(10.0, -20.0, 10.0), 0.5)));\n  equal_hex(\"hex_round 2\", hex_round(a), hex_round(hex_lerp(a, b, 0.499)));\n  equal_hex(\"hex_round 3\", hex_round(b), hex_round(hex_lerp(a, b, 0.501)));\n  equal_hex(\"hex_round 4\", hex_round(a), hex_round(Hex(a.q * 0.4 + b.q * 0.3 + c.q * 0.3, a.r * 0.4 + b.r * 0.3 + c.r * 0.3, a.s * 0.4 + b.s * 0.3 + c.s * 0.3)));\n  equal_hex(\"hex_round 5\", hex_round(c), hex_round(Hex(a.q * 0.3 + b.q * 0.3 + c.q * 0.4, a.r * 0.3 + b.r * 0.3 + c.r * 0.4, a.s * 0.3 + b.s * 0.3 + c.s * 0.4)));\n}\n\nfunction test_hex_linedraw() {\n  equal_hex_array(\"hex_linedraw\", [Hex(0, 0, 0), Hex(0, -1, 1), Hex(0, -2, 2), Hex(1, -3, 2), Hex(1, -4, 3), Hex(1, -5, 4)], hex_linedraw(Hex(0, 0, 0), Hex(1, -5, 4)));\n}\n\nfunction test_layout() {\n  const h = Hex(3, 4, -7);\n  const flat = Layout(orientation_flat, Point(10.0, 15.0), Point(35.0, 71.0));\n  equal_hex(\"layout\", h, hex_round(pixel_to_hex(flat, hex_to_pixel(flat, h))));\n  const pointy = Layout(orientation_pointy, Point(10.0, 15.0), Point(35.0, 71.0));\n  equal_hex(\"layout\", h, hex_round(pixel_to_hex(pointy, hex_to_pixel(pointy, h))));\n}\n\nfunction test_offset_roundtrip() {\n  const a = Hex(3, 4, -7);\n  const b = OffsetCoord(1, -3);\n  equal_hex(\"conversion_roundtrip even-q\", a, qoffset_to_cube(EVEN, qoffset_from_cube(EVEN, a)));\n  equal_offsetcoord(\"conversion_roundtrip even-q\", b, qoffset_from_cube(EVEN, qoffset_to_cube(EVEN, b)));\n  equal_hex(\"conversion_roundtrip odd-q\", a, qoffset_to_cube(ODD, qoffset_from_cube(ODD, a)));\n  equal_offsetcoord(\"conversion_roundtrip odd-q\", b, qoffset_from_cube(ODD, qoffset_to_cube(ODD, b)));\n  equal_hex(\"conversion_roundtrip even-r\", a, roffset_to_cube(EVEN, roffset_from_cube(EVEN, a)));\n  equal_offsetcoord(\"conversion_roundtrip even-r\", b, roffset_from_cube(EVEN, roffset_to_cube(EVEN, b)));\n  equal_hex(\"conversion_roundtrip odd-r\", a, roffset_to_cube(ODD, roffset_from_cube(ODD, a)));\n  equal_offsetcoord(\"conversion_roundtrip odd-r\", b, roffset_from_cube(ODD, roffset_to_cube(ODD, b)));\n}\n\nfunction test_offset_from_cube() {\n  equal_offsetcoord(\"offset_from_cube even-q\", OffsetCoord(1, 3), qoffset_from_cube(EVEN, Hex(1, 2, -3)));\n  equal_offsetcoord(\"offset_from_cube odd-q\", OffsetCoord(1, 2), qoffset_from_cube(ODD, Hex(1, 2, -3)));\n}\n\nfunction test_offset_to_cube() {\n  equal_hex(\"offset_to_cube even-\", Hex(1, 2, -3), qoffset_to_cube(EVEN, OffsetCoord(1, 3)));\n  equal_hex(\"offset_to_cube odd-q\", Hex(1, 2, -3), qoffset_to_cube(ODD, OffsetCoord(1, 2)));\n}\n\nfunction test_doubled_roundtrip() {\n  const a = Hex(3, 4, -7);\n  const b = DoubledCoord(1, -3);\n  equal_hex(\"conversion_roundtrip doubled-q\", a, qdoubled_to_cube(qdoubled_from_cube(a)));\n  equal_doubledcoord(\"conversion_roundtrip doubled-q\", b, qdoubled_from_cube(qdoubled_to_cube(b)));\n  equal_hex(\"conversion_roundtrip doubled-r\", a, rdoubled_to_cube(rdoubled_from_cube(a)));\n  equal_doubledcoord(\"conversion_roundtrip doubled-r\", b, rdoubled_from_cube(rdoubled_to_cube(b)));\n}\n\nfunction test_doubled_from_cube() {\n  equal_doubledcoord(\"doubled_from_cube doubled-q\", DoubledCoord(1, 5), qdoubled_from_cube(Hex(1, 2, -3)));\n  equal_doubledcoord(\"doubled_from_cube doubled-r\", DoubledCoord(4, 2), rdoubled_from_cube(Hex(1, 2, -3)));\n}\n\nfunction test_doubled_to_cube() {\n  equal_hex(\"doubled_to_cube doubled-q\", Hex(1, 2, -3), qdoubled_to_cube(DoubledCoord(1, 5)));\n  equal_hex(\"doubled_to_cube doubled-r\", Hex(1, 2, -3), rdoubled_to_cube(DoubledCoord(4, 2)));\n}\n\nfunction test_all() {\n  test_hex_arithmetic();\n  test_hex_direction();\n  test_hex_diagonal();\n  test_hex_distance();\n  test_hex_rotate_right();\n  test_hex_rotate_left();\n  test_hex_round();\n  test_hex_linedraw();\n  test_layout();\n  test_offset_roundtrip();\n  test_offset_from_cube();\n  test_offset_to_cube();\n  test_doubled_roundtrip();\n  test_doubled_from_cube();\n  test_doubled_to_cube();\n}\n\n\n\ntest_all()\n\n// Exports for node/browserify modules:\n\n","enum Team {\n    WHITE = 'white',\n    BLACK = 'black',\n}\n\nexport default Team;\n","import BackgroundCanvas from '../lab/BackgroundCanvas';\nimport GameList from '../components/GameList';\nimport { Button, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nexport default function WelcomePage () {\n\n    return <div>\n        <h1> Welcome to HiveMind </h1>\n            On this site you can play the awesome game Hive.\n            Just create a game with the button in the top-bar and invite a friend to play.\n            Make sure check out the <Link to='/tutorial'> tutorial </Link> for an introduction to the rules.\n        Unfortunately the mobile version can be a bit rough to use.\n        <h2> The game Hive </h2>\n        Hive is a abstract strategic board game designed by John Yianni\n        and published by <a href='https://www.gen42.com/games/hive'> Gen 42</a>.\n        If you want to know more about it <a href='https://boardgamegeek.com/boardgame/2655/hive'>boardgamegeek</a> is a good place to start.\n\n        <h2> Development </h2>\n        The frontend uses\n        <a href='https://reactjs.org/'> react </a>\n        bootstrapped by\n        <a href='https://create-react-app.dev/'> Create React App </a>\n        and\n        <a href='https://react.semantic-ui.com/'> Semantic UI </a>\n        <a href='https://socket.io/'> Socket.IO </a>\n        is used to communicate between the backend which is powered by\n        <a href='https://expressjs.com/'> Express </a>.\n        The project started as a simple\n        <a href='https://www.pygame.org/news'> Pygame </a>\n        app and was rewritten multiple times.\n        Most of the codebase is in a transition from javascript to <a href='https://www.typescriptlang.org/.'>Typescript </a>.\n        If you are interested you can find the source code on\n            <a href='https://github.com/gottschali/HiveMind'>\n                <Button color='grey'>\n                    <Icon name='github' /> Github\n                </Button>\n            </a>\n        Just be aware that is my first bigger web-dev project and there are many ugly things lurking in the code.\n        {/* <GameList />\n        <BackgroundCanvas /> */}\n\n\n        <hr/>\n        <footer>\n        This is a side project of Ali G. In the future you may find more of his projects on <a href='https://gschall.ch/'> gschall.ch </a>.\n        <p>\n                <a href=\"mailto:post@aligottschall.ch\">Send some feedback</a>.\n        </p>\n        </footer>\n\n        </div>\n\n\n\n}\n","import { State } from '../../shared/model/state'\n\nimport { useState } from 'react'\n\nimport Hive from '../canvas/Hive'\n\nconst Wrapped = () => {\n  const [state, setState] = useState(new State());\n  const [counter, setCounter] = useState(0);\n  const [iterationSteps, setIterationSteps] = useState(10);\n  const step = () => {\n    state.step()\n    setCounter(counter + 1);\n  }\n  const reset = () => {\n    setState(new State());\n    setCounter(0);\n  }\n  return (\n    <div>\n      <div>\n        <div> Step: {state.turnNumber}</div>\n        <button onClick={step}> Make a Step </button>\n        <button onClick={reset}> Reset </button>\n        <label>\n          How many automove steps:\n          <input value={iterationSteps} onChange={e => setIterationSteps(e.target.value)}/>\n        </label>\n        <button onClick={() => {\n          for (let i=0;i<iterationSteps;i++) {\n            state.step()\n          }\n          setCounter(counter + iterationSteps);\n\n        }}> AutoPlay </button>\n        <div>\n          Stones: {JSON.stringify(state.stones)}\n        </div>\n      </div>\n      <Hive hive={state.hive} highlighted={[]}/>\n    </div>\n  )\n}\n\nexport default function Test() {\n  return (\n    <Wrapped />\n  )\n}\n","import { useInteractiveController } from '../controllers/interactiveController';\nimport LocalGame from '../game/LocalGame';\n\n\n\nfunction InteractiveRandom() {\n    const p1 = useInteractiveController;\n    const p2 = useInteractiveController;\n    return <LocalGame p1={p1} p2={p2} />\n}\n\n\nexport default InteractiveRandom;","import TestHive from '../lab/TestHive';\nimport TestGame from '../lab/TestGame';\n\nexport default function DebugPage() {\n    return <div>\n                <TestGame />\n                <TestHive />\n            </div>\n}\n","import Hive from '../canvas/Hive'\nimport { State } from '../../shared/model/state'\nimport { Hive as HiveModel } from '../../shared/model/hive'\nimport Stone from '../../shared/model/stone'\nimport Insect from '../../shared/model/insects'\nimport Team from '../../shared/model/teams'\nimport { Drop } from '../../shared/model/action'\nimport TestGame from '../lab/TestGame';\nimport { Hex } from '../../shared/hexlib'\nimport { DropInsectMenuTeam, iconMap } from '../components/DropInsectMenu'\nimport { Button, Label, Segment } from 'semantic-ui-react'\nimport { useEffect, useState } from 'react'\nimport LocalSelfGame from '../game/LocalSelfGame'\n\nexport default function TutorialPage () {\n    // Idea: define terms\n    // Make chapers: click to next page\n    // Boxes for emphasis\n    // Click to expand example\n    // challenges: try to surround the enemy queen / get to this square\n    // restricted games: only allowed to move certain insects\n\n    // Legal drop hexes\n    // When to place the bee\n    // Moving\n    // One hive rule\n    return <div>\n        <h1> Learn how to play! </h1>\n        This page was created rather in a hurry.\n        Therefore please consult the <a href='https://www.gen42.com/download/rules/hive/Hive_English_Rules.pdf'> official rules </a> if something is not clear.\n        <Introduction />\n        <GoalOfGame />\n        <Dropping />\n        <h2> Insects </h2>\n        Here the different moves of the insects are quickly described.\n        It is best to try them out in action. You can do this at the bottom of the page.\n        All the insects have certain move restrictions in common.\n        For one if the insect can not physically move through a passage it is blocked.\n        Most important the one-hive rule applies to all.\n        Make sure to read the section covering it.\n        When playing you can simply click on one of your insects to get all possible moves highlighted.\n        If none are highlighted this insect has no legal moves to make.\n        <ExplainBee />\n        <ExplainAnt />\n        <ExplainSpider />\n        <ExplainGrasshopper />\n        <ExplainBeetle />\n\n        <ExplainOneHive />\n        <div className=\"ui one column doubling stackable grid container\">\n            <h2> Try everything at once</h2>\n            If the game gets out of hand you can also reposition the camera to get a better view.\n            You can take control of both players and try out the rules interactively.\n            <LocalSelfGame />\n        </div>\n    </div>\n}\n\nfunction TutorialLayout({left, right}) {\n    return <div className=\"ui two column doubling stackable grid container\">\n            <div className=\"column\">\n                {left}\n            </div>\n            <div className=\"column\">\n                {right}\n            </div>\n        </div>\n}\n\nfunction Introduction() {\n    const state = new State();\n    state.apply(new Drop(new Stone(Insect.GRASSHOPPER, Team.WHITE), Hex(0, 0)));\n    state.apply(new Drop(new Stone(Insect.ANT, Team.BLACK), Hex(1, 0)));\n\n    const left = <>\n        <h2> Introduction </h2>\n        Hive is a strategic boardgame for two players (red and blue).\n        Each turn they can either place or move a stone on the board.\n        We will refer to placing an insect as <i>dropping</i> and call the stones <i>insects</i> from now on.\n        Similar to chess each of the insects has its own set of rules how to move.\n        In the beginning there is void.\n        The starting player can then select any of his insects to drop on the board.\n        Their opponent may answer by an insect of their own adjacent to the insect already on the board.\n        In the remainder of the game there are restrictions how insects may be dropped. These are covered in their own section.\n    </>;\n    const right = <Segment>\n        <Hive hive={state.hive} canvasHeight=\"200px\" interactive={false} cameraOpts={{ position: [0, -1, 2] }} />;\n        <Label attached='bottom'>An example of the first two moves in a game.</Label>\n        </Segment>\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction Dropping() {\n    const state = new State();\n    state.apply(new Drop(new Stone(Insect.GRASSHOPPER, Team.WHITE), Hex(0, 0)));\n    state.apply(new Drop(new Stone(Insect.ANT, Team.BLACK), Hex(1, 0)));\n    const left = <>\n        <h2> Dropping </h2>\n\n        When playing you can select the insect you want to drop by clicking on the menu.\n        The number tells you how many you have still available.\n        After the first two moves you may only drop insects adjacent to your own.\n        This prevents dropping insects directly placing next to the bee of the opponent and the game would not be funny at all.\n\n        <br/>\n        <DropInsectMenuTeam stones={state.stones}\n                            active={true} />\n    </>;\n    const right = <Segment>\n        <Hive hive={state.hive}\n                        team={state.team}\n                        highlighted={state.generateDrops().map(h => [h, 0])}\n                      canvasHeight=\"200px\" interactive={false} cameraOpts={ {position: [0, -3, 4]} } />;\n\n        <Label attached='bottom'>The red player may only drop insects on the highlighted hexes.</Label>\n    </Segment>;\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction GoalOfGame() {\nconst hive = new HiveModel();\n    hive.addStone(Hex(0, 0), new Stone(Insect.GRASSHOPPER, Team.WHITE));\n    hive.addStone(Hex(1, 0), new Stone(Insect.BEE, Team.BLACK));\n    hive.addStone(Hex(0, 1), new Stone(Insect.BEE, Team.WHITE));\n    hive.addStone(Hex(1, 1), new Stone(Insect.ANT, Team.BLACK));\n    hive.addStone(Hex(1, -1), new Stone(Insect.SPIDER, Team.WHITE));\n    hive.addStone(Hex(2, 0), new Stone(Insect.BEETLE, Team.BLACK));\n    hive.addStone(Hex(2, -1), new Stone(Insect.ANT, Team.WHITE));\n\n    const left = <>\n                <h2> The Goal of the Game </h2>\n                <p> The goal of the game is to surround the bee <Button color='grey' icon={iconMap[Insect.BEE]} /> of the enemy.\n\n                All six adjacent hexes have to be occupied. </p>\n                <p> In the example the blue player has lost as his bee is completely surrounded.\n                                                                                                          Note that the color of the surrounding insects does not matter. Also the own insects count.\n                                                                                                          It can happen that the bees get surrounded at the same time. In this case it is a draw. </p>\n            </>;\n\n    const right = <Segment>\n        <Hive hive={hive} canvasHeight=\"200px\" interactive={false} cameraOpts={{ position: [1, 1, 4] }} lookAt={[1, 1, 0]} />;\n        <Label attached='bottom'>Here the red player wins because the blue bee is completely surrounded while the red bee retains three free hexes next to it.</Label>\n    </Segment>\n\n\n    return <TutorialLayout left={left} right={right} />\n\n}\n\n\nfunction singleStone(stone) {\n    const hive = new HiveModel();\n    hive.addStone(Hex(0, 0), stone);\n    return  <Hive hive={hive} canvasHeight=\"100px\" interactive={false} cameraOpts={ {position: [0, -1, 1]} } lookAt={[0, 0, 0]}/>;\n}\n\nfunction ExplainBee() {\n    const left = <div>\n        <h2>Bee <Button color='grey' icon={iconMap[Insect.BEE]} /></h2>\n        The be can only move one hex a move.\n        <ul>\n            <li> You may not move any insects before you have dropped your bee </li>\n            <li> You have to drop the bee as one of your first <b>four</b> insects</li>\n        </ul>\n        </div>;\n    const right = singleStone(new Stone(Insect.BEE, Team.WHITE));\n    return <TutorialLayout left={left} right={right} />\n\n}\n\nfunction ExplainAnt() {\n    const left = <div>\n        <h3>Ant <Button color='grey' icon={iconMap[Insect.ANT]} /></h3>\n        The ant is swift and can run as many hexes around the hive as it wishes.\n    </div>\n    const right = singleStone(new Stone(Insect.ANT, Team.BLACK));\n    return <TutorialLayout left={left} right={right} />\n\n}\n\nfunction ExplainSpider() {\n    const left = <div>\n        <h3>Spider <Button color='grey' icon={iconMap[Insect.SPIDER]} /></h3>\n        The spider is similar to the ant though it may only move exactly 3 hexes far.\n    </div>;\n    const right = singleStone(new Stone(Insect.SPIDER, Team.WHITE));\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction ExplainGrasshopper() {\n    const left = <div>\n        <h3>Grasshopper <Button color='grey' icon={iconMap[Insect.GRASSHOPPER]} /></h3>\n        The grasshopper can jump in any of the six directions over as many insects as that lie in that line.\n        But it has to land on the first unoccupied hex.\n    </div>;\n    const right = singleStone(new Stone(Insect.GRASSHOPPER, Team.BLACK));\n    return <TutorialLayout left={left} right={right} />\n}\n\n\nfunction ExplainBeetle() {\n    const left = <div>\n        <h3>Beetle <Button color='grey' icon={iconMap[Insect.BEETLE]} /></h3>\n        The beetle is a distinct relative of the bee.\n        But is has learned a useful skill: It may climb on other pieces and can walk on the top of the hive.\n    </div>;\n    const right = singleStone(new Stone(Insect.BEETLE, Team.WHITE));\n    return <TutorialLayout left={left} right={right} />\n}\n\nfunction ExplainOneHive() {\n\n    const hive = new HiveModel();\n    hive.addStone(Hex(0, 0), new Stone(Insect.GRASSHOPPER, Team.WHITE));\n    hive.addStone(Hex(2, 1), new Stone(Insect.BEE, Team.BLACK));\n    hive.addStone(Hex(-1, 1), new Stone(Insect.BEE, Team.WHITE));\n    hive.addStone(Hex(1, 1), new Stone(Insect.ANT, Team.BLACK));\n    hive.addStone(Hex(1, -1), new Stone(Insect.SPIDER, Team.WHITE));\n    hive.addStone(Hex(2, 0), new Stone(Insect.BEETLE, Team.BLACK));\n    hive.addStone(Hex(2, -1), new Stone(Insect.ANT, Team.WHITE));\n\n    const left = <div>\n                <h2>One Hive Rule</h2>\n                Or the rule that makes the game actually interesting.\n        It goes like this: An insect can only move if the hive without it would be disconnected.\n                This means there can never be isolated insects or groups thereof. Everything has to <i> stick together </i>.\n\n\n                If you know graph theory you may know this idea as articulation points.\n                </div>\n\n    const right = <Segment>\n        <Hive hive={hive} canvasHeight=\"200px\" interactive={false} cameraOpts={{ position: [1, 1, 4] }} lookAt={[1, 1, 0]} />;\n        <Label attached='bottom'>In this scenario the red player could only move his bee. His other insects would disconnect the hive into two parts.\n        The blue player on the other hand could move either his ant or queen.</Label>\n    </Segment>\n\n\n    return <TutorialLayout left={left} right={right} />\n\n}\n","import { Container, Menu, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport {useState} from 'react'\nimport CreateGameButton from '../components/CreateGameButton'\n\nexport default function Layout(props) {\n    const [active, setActive] = useState('Home');\n    const handleClick = (e, {name}) => setActive(name);\n    return (\n        <Container >\n            <Segment inverted>\n                <Menu compact inverted stackable pointing secondary>\n                    <Menu.Item header as={Link} to=\"/\" name='HiveMind'>\n                        <img src='/favicon/android-chrome-512x512.png' alt=\"logo\" />\n                    </Menu.Item>\n                    <Menu.Item as={Link} to=\"/\" name='Home' onClick={handleClick} active={active === 'Home'} />\n                    <Menu.Item as={Link} to='/tutorial' name='Tutorial' onClick={handleClick} active={active==='Tutorial'} />\n                    <Menu.Item name='play'>\n                        <CreateGameButton content=\"Create a game\"/>\n                    </Menu.Item>\n                    {/*                     <Menu.Item as={Link} to='/play/test' name='Quick Play' onClick={handleClick} active={active==='Quick Play'} /> */}\n                </Menu>\n            </Segment>\n            {props.children}\n\n        </Container>\n    )\n\n}\n","import { lazy, Suspense } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport WelcomePage from './pages/WelcomePage'\nimport DebugPage from './pages/DebugPage'\nimport TutorialPage from './pages/TutorialPage'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport Layout from './pages/Layout'\n\nconst GameManager = lazy(() => import('./game/GameManager'))\n\nexport default function App() {\n  return (\n      <Router>\n        <Layout>\n          <Suspense fallback={<div>Loading...</div>} >\n            <Switch>\n              <Route exact path=\"/\" component={WelcomePage} />\n              <Route path=\"/play/:gid\" component={GameManager} />\n              <Route exact path=\"/debug\" component={DebugPage} />\n              <Route exact path=\"/tutorial\" component={TutorialPage} />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './client/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import Insect from './insects';\nimport Team from './teams';\n\nexport default class Stone {\n  insect: Insect;\n  team: Team;\n\n  constructor(insect: Insect, team: Team) {\n    this.insect = insect;\n    this.team = team;\n  }\n}\n\n","import { Hex, hex_compare } from '../hexlib';\nimport Stone from './stone';\n\nexport abstract class Action {\n    abstract compareTo(action: Action): boolean;\n}\n\nexport function deserializeAction(json) {\n    if ('stone' in json) {\n        return new Drop(json.stone, json.destination);\n    } else if ('origin' in json) {\n        return new Move(json.origin, json.destination);\n    } else {\n        return new Pass();\n    }\n}\n\nexport class Move extends Action {\n    origin: Hex;\n    destination: Hex;\n\n    constructor(origin?: Hex, destination?: Hex) {\n        super();\n        this.origin = origin;\n        this.destination = destination;\n    }\n    compareTo(action: Action): boolean {\n        if (!(action instanceof Move))\n            return false\n        return hex_compare(this.origin, action.origin) && hex_compare(this.destination, action.destination)\n    }\n}\n\nexport class Drop extends Action {\n    stone: Stone;\n    destination: Hex;\n\n    constructor(stone?: Stone, destination?: Hex) {\n        super();\n        this.stone = stone;\n        this.destination = destination;\n    }\n\n    compareTo(action: Action): boolean {\n        if (!(action instanceof Drop))\n            return false\n        return this.stone.team === action.stone.team && this.stone.insect === action.stone.insect && hex_compare(this.destination, action.destination)\n    }\n}\n\nexport class Pass extends Action {\n    compareTo(action: Action): boolean {\n        return action instanceof Pass;\n    }\n};\n\nexport const PassAction = new Pass();\n","import { useRef, useState, Suspense } from 'react'\nimport { useSpring, animated } from '@react-spring/three'\n\nimport * as HEX from '../../shared/hexlib'\nimport { GLTFModel } from './GLTFModel'\nimport Team from '../../shared/model/teams'\n\nexport default function Stone({stone, layout=HEX.layoutFlat, hex, handleClick=()=>{}, height=0}) {\n    const teamColor = stone.team === Team.WHITE ? 'red' : 'blue';\n    const mesh = useRef(null);\n    const [hovered, setHover] = useState(false)\n    const { x, y } = HEX.hex_to_pixel(layout, hex);\n    const orientation = layout.orientation;\n\n    const spring = useSpring({\n        color: hovered ? 'grey' : teamColor,\n        rotation: hovered ? [0, Math.PI, 0] : [0, 0, 0]\n    });\n\n    return (\n        <Suspense fallback={null}>\n            <group\n                position={[x, y, height]}\n                rotation={[Math.PI / 2, orientation === HEX.orientation_flat ? Math.PI / 6 : 0, 0]}\n                onPointerDown={() => {handleClick(hex)}} >\n                <animated.mesh\n                    position={[0, -.5, 0]}\n                    ref={mesh}\n                    onPointerOver={(event) => setHover(true)}\n                    onPointerOut={(event) => setHover(false)} >\n                    <cylinderBufferGeometry args={[1, 1, 0.25, 6]} />\n                        <animated.meshStandardMaterial color={spring.color} />\n                </animated.mesh>\n                <GLTFModel insect={stone.insect} rotation={spring.rotation} />\n            </group>\n        </Suspense>\n    )\n}\n","import { useRef, useState } from 'react'\nimport { useSpring, animated } from '@react-spring/three'\n\nimport Team from '../../shared/model/teams'\nimport * as HEX from '../../shared/hexlib'\n\nexport default function HighlightStone({ layout, hex, team, height, handleClick=()=>console.log(\"no Click handler given\") }) {\n    const mesh = useRef(null)\n    const [hovered, setHover] = useState(false)\n    const { opacity } = useSpring({opacity: hovered ? 0.9 : 0.3})\n    const { x, y } = HEX.hex_to_pixel(layout, hex);\n    const orientation = layout.orientation;\n    const color = team === Team.WHITE ? 'red' : 'blue';\n    return (\n                <mesh\n                    position={[x, y, height - .5]}\n                    rotation={[Math.PI / 2, orientation === HEX.orientation_flat ? Math.PI / 6 : 0, 0]}\n                    onPointerDown={() => {handleClick(hex)}}\n                    ref={mesh}\n                    onPointerOver={(event) => setHover(true)}\n                    onPointerOut={(event) => setHover(false)}\n                >\n                    <cylinderBufferGeometry args={[1, 1, 0.25, 6]} />\n                        <animated.meshStandardMaterial color={color} transparent opacity={opacity}/>\n                </mesh>\n    )\n}\n","import { Canvas } from '@react-three/fiber'\nimport { TrackballControls } from '@react-three/drei'\n\nimport * as HEX from '../../shared/hexlib'\n\nimport Stone from './Stone'\nimport HighlightStone from './HighlightStone'\n\nimport { Button, Container } from 'semantic-ui-react'\n\nconst Hive = ({ hive, handleClick=()=>console.log(\"No click handler given\"),\n                highlighted=[],\n                team=null,\n                interactive=true,\n                canvasHeight=\"50vw\",\n                cameraOpts={},\n                lookAt=[0, 0, 0]\n},) => {\n    let stones = [];\n    const layout = HEX.layoutFlat;\n    for (const hex of hive.map.keys()) {\n        hive.map.get(hex).forEach((stone, height) => {\n            stones.push(\n                <Stone\n                    hex={hex}\n                    stone={stone}\n                    key={\"\" + hex.q + hex.r + stone.insect}\n                    height={height}\n                    layout={layout}\n                    handleClick={handleClick} />\n            )\n        });\n    };\n    const highlights = [];\n    highlighted.forEach(([hex, height]) => {\n        highlights.push(<HighlightStone \n        layout={layout}\n        hex={hex}\n        team={team}\n        handleClick={handleClick}\n        height={height}/>);\n    });\n\n    return (\n        <Container style={{ height: canvasHeight}}>\n            <Canvas camera={{ near: 0.1, far: 100, ...cameraOpts }}\n                    onCreated={(state) => {\n                        state.camera.lookAt(lookAt[0], lookAt[1], lookAt[2]);\n                    }}\n            >\n                {  interactive ? <TrackballControls /> : null}\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                {stones}\n                {highlights}\n            </Canvas>\n        </Container>\n    )\n}\n\nexport default Hive;\n","import { useRef, Suspense, useState } from 'react'\nimport Team from '../../shared/model/teams'\nimport Insect from '../../shared/model/insects'\nimport { Canvas } from '@react-three/fiber'\nimport { GLTFModel } from '../canvas/GLTFModel'\n\nimport { Button, Container, Label } from 'semantic-ui-react'\n\nimport { useSpring } from '@react-spring/three'\n\n\nexport const iconMap = {\n    beetle: 'bug',\n    bee: 'chess queen',\n    spider: 'chess pawn',\n    grasshopper: 'chess knight',\n    ant: 'chess bishop'\n}\n\nexport function DropInsect({ insect, selected }) {\n    const mesh = useRef<THREE.Mesh>(null!)\n    const { rotation, scale } = useSpring({\n        rotation: selected ? [0, 0, 0] : [Math.PI / 2, 0, 0],\n        scale: selected ? 4 : 2\n    });\n    return (\n        <Suspense fallback={<p> {insect} </p>} >\n            <Canvas >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n\n                <group position={[0, 3, 0]}>\n                    <mesh ref={mesh} >\n                        <boxGeometry args={[4, 4, 1]} />\n                        <meshStandardMaterial transparent opacity={0} />\n                    </mesh>\n                    <GLTFModel\n                        scale={scale}\n                        insect={insect}\n                        rotation={rotation}\n                    />\n                </group>\n            </Canvas>\n        </Suspense>\n    )\n}\n\nexport function DropInsectMenuTeam({ stones, active, handleClick=(insect)=>{}, allowedToDrop = (i) => true }) {\n    // Get the numbers out\n    const [, setSelected] = useState(null);\n    const counts = {};\n    let teamThis;\n    for (const { insect, team } of stones) {\n        teamThis = team;\n        if (counts.hasOwnProperty(insect)) counts[insect]++;\n        else counts[insect] = 1;\n    }\n    return (<>\n        {Array.from(Object.values(Insect)).map((insect, i) => {\n            const count = counts[insect];\n            const isActive = active && allowedToDrop(insect)\n            const color = teamThis === 'white' ? 'red' : 'blue'\n            return (\n                <Button as='div'\n                        key={insect}\n                        disabled={!isActive}\n                        labelPosition='right'\n                        onClick={() => {\n                            handleClick(insect)\n                            setSelected(insect)\n                        }}\n                >\n                    <Button color={color} icon={iconMap[insect]} />\n                    <Label as='a' basic pointing='left'>\n                        {count || 0}\n                    </Label>\n                </Button>\n            )\n        })\n        }\n    </>\n    )\n}\n\nexport function DropInsectMenu({ stones, team, handleClick = () => console.log(\"No click handler given\"), allowedToDrop }) {\n    return (\n        <Container textAlign='center'>\n            <Button.Group size='tiny'>\n                <DropInsectMenuTeam\n                    active={team === Team.BLACK}\n                    stones={stones.get(Team.BLACK)}\n                    handleClick={team === Team.BLACK ? handleClick : () => { }}\n                    allowedToDrop={allowedToDrop}\n                />\n            </Button.Group>\n            <Button.Group size='tiny'>\n                <DropInsectMenuTeam\n                    active={team === Team.WHITE}\n                    stones={stones.get(Team.WHITE)}\n                    handleClick={team === Team.WHITE ? handleClick : () => { }}\n                    allowedToDrop={allowedToDrop}\n                />\n            </Button.Group>\n        </Container>\n    )\n\n}\n","import Insect from \"./insects\";\nimport Stone from \"./stone\";\nimport Team from \"./teams\";\nimport * as HEX from \"../hexlib\";\nimport { Move, Drop, PassAction, Action } from \"./action\";\nimport { Hive } from \"./hive\";\n\n\nexport class State {\n    hive: Hive;\n    turnNumber: number;\n    _stones: Map<Team, Array<Stone>>;\n    _beeMove: Map<Team, boolean>;\n    _actions: Array<Action>;\n    _surrender: Team\n\n    startingInsects: Array<Insect> = [\n        Insect.BEE,\n        Insect.SPIDER,\n        Insect.SPIDER,\n        Insect.ANT,\n        Insect.ANT,\n        Insect.ANT,\n        Insect.GRASSHOPPER,\n        Insect.GRASSHOPPER,\n        Insect.GRASSHOPPER,\n        Insect.BEETLE,\n        Insect.BEETLE\n    ]\n\n    constructor() {\n        this.hive = new Hive();\n        this.turnNumber = 0;\n        this._beeMove = new Map([\n            [Team.WHITE, false],\n            [Team.BLACK, false]\n        ])\n        this._stones = new Map();\n        for (const team of [Team.WHITE, Team.BLACK]) {\n            this._stones.set(team, this.startingInsects.map(insect => new Stone(insect, team)))\n        }\n    }\n    get stones(): Array<Stone> {\n        return this._stones.get(this.team);\n    }\n\n    get team(): Team {\n        return this.turnNumber % 2 === 0 ? Team.WHITE : Team.BLACK\n    }\n    get gameOver(): boolean {\n        if (this.result.some((x) => x)) {\n            return true;\n        }\n        return false;\n    }\n    get result(): Array<boolean> {\n        if (this._surrender === Team.WHITE) {\n            return [true, false];\n        } else if (this._surrender === Team.BLACK) {\n            return [false, true];\n        }\n        return this.hive.gameResult()\n    }\n    surrender(team: Team) {\n        this._surrender = team;\n    }\n    get moveAllowed(): boolean {\n        return this._beeMove.get(this.team)\n    }\n    generateDrops(): Array<HEX.Hex> {\n        if (this.turnNumber === 0) return [HEX.Hex(0, 0)];\n        else if (this.turnNumber === 1) return [HEX.Hex(0, -1)];\n        return this.hive.generateDrops(this.team)\n    }\n    _getActions(): Array<Action> {\n        let opts = []\n        const dropStonesForTeam = this.stones.map(stone => stone.insect);\n        const uniqueInsects = new Set(dropStonesForTeam);\n        const dropStones = Array.from(uniqueInsects)\n            .map(insect => new Stone(insect, this.team));\n        if (this.turnNumber >= 6 && !this.moveAllowed) {\n            // Forced bee drop\n            this.hive.generateDrops(this.team)\n                .forEach(d => opts.push(new Drop(new Stone(Insect.BEE, this.team), d)))\n        } else if (dropStones.length) {\n            // Drops are allowed\n            this.generateDrops()\n                .forEach(dropHex => dropStones\n                    .forEach(dropInsect => opts.push(new Drop(dropInsect, dropHex))))\n        }\n        if (this.moveAllowed) {\n            // Moves allowed\n            this.hive.generateMoves(this.team).forEach(([origin, dest]) => {\n                opts.push(new Move(origin, dest))\n            })\n        }\n        if (opts.length) return opts\n        else return [PassAction]\n    }\n    get actions(): Array<Action> {\n        if (!this._actions) this._actions = this._getActions()\n        return this._actions\n    }\n\n    isLegal(action: Action): boolean {\n        const res = this.actions.some(otherAction => action.compareTo(otherAction))\n        return res;\n    }\n    apply(action: Action): State {\n        // No check for legal action!\n        // TODO apparently copying/cloning objects is not trivial in JS\n        // So maybe just create new instance with the data as arguments\n        // let newState = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n        // State is mutable now, apply updates inplace instead of returning a new instance\n        let stone: Stone;\n        if (action instanceof Move) {\n            // Remove the stone from the old position and add it at the new one\n            stone = this.hive.at(action.origin)\n            this.hive.removeStone(action.origin)\n            this.hive.addStone(action.destination, stone)\n        } else if (action instanceof Drop) {\n            stone = action.stone\n            if (stone.insect === Insect.BEE) {\n                // Update that the bee is dropped\n                this._beeMove.set(this.team, true)\n            }\n            // Remove the dropped stone from the availables and add it to the hive\n            // TODO the stone is not removed because objects do not compare equal for values\n            let index = -1;\n            this.stones.forEach((s, i) => {\n                if (stone.insect === s.insect) index = i\n            })\n            this.stones.splice(index, 1)\n            this.hive.addStone(action.destination, stone)\n        }\n        delete this._actions\n        this.turnNumber++\n        return this;\n    }\n\n    undo(action: Action): State {\n        let stone: Stone;\n        if (action instanceof Move) {\n            // Remove the stone from the new position and add it at the old one\n            stone = this.hive.at(action.destination)\n            this.hive.removeStone(action.destination)\n            this.hive.addStone(action.origin, stone)\n        } else if (action instanceof Drop) {\n            stone = action.stone\n            if (stone.insect === Insect.BEE) {\n                this._beeMove.set(this.team, false)\n            }\n            this.stones.push(stone);\n            this.hive.removeStone(action.destination);\n        }\n        delete this._actions\n        this.turnNumber--\n        return this;\n    }\n\n    step(policy = randomPolicy): State {\n        return this.apply(policy(this.actions))\n    }\n\n    allowedToMove(hex: HEX.Hex): boolean {\n        // Only needed for Frontend\n        if (this.moveAllowed) {\n            for (const action of this.actions) {\n                if (action instanceof Move) {\n                    if (HEX.hex_compare(action.origin, hex)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    allowedToDrop(insect: Insect): boolean {\n        // Only needed for Fronted\n        for (const action of this.actions) {\n            if (action instanceof Drop) {\n                if (action.stone.insect === insect) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    getDestinations(action: (Move | Drop), src: HEX.Hex): Array<[HEX.Hex, number]> {\n        let opts = [];\n        if (action instanceof Move) {\n            opts = this.hive.generateMovesFrom(src)\n                .map(h => [h, this.hive.height(h)]);\n        } else if (action instanceof Drop) {\n            opts = this.generateDrops()\n                .map(h => [h, 0]);\n        }\n        return opts;\n    }\n}\n\nfunction randomPolicy(actions: Array<Action>): Action {\n    return actions[Math.floor(Math.random() * actions.length)]\n}\n","import { useState } from 'react'\nimport { Move, Drop } from '../../shared/model/action';\nimport Stone from '../../shared/model/stone';\n\n\nexport function useInteractiveController(submitAction, state): any {\n    const [actionType, setActionType] = useState(null);\n    const [selected, setSelected] = useState(null);\n    const handleBoardClick = (hex) => {\n        if (selected) {\n            const newAction = new actionType.constructor(selected, hex);\n            if (submitAction(newAction)) {\n                setSelected(null);\n                setActionType(null);\n            } else {\n                setSelected(null);\n            }\n        } else {\n            if (state.allowedToMove(hex)) {\n                setActionType(new Move());\n                setSelected(hex);\n            }\n        }\n    }\n    const handleDropClick =  (insect) => {\n        if (state.allowedToDrop(insect)) {\n            setActionType(new Drop());\n            setSelected(new Stone(insect, state.team));\n        } else {\n            setSelected(null);\n        }\n    }\n    const highlighted = selected ? state.getDestinations(actionType, selected) : [];\n    return {\n        highlighted: highlighted,\n        handleBoardClick: handleBoardClick,\n        handleDropClick: handleDropClick\n    }\n}\n"],"sourceRoot":""}